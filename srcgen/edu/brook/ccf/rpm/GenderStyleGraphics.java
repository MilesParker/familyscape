package edu.brook.ccf.rpm;

/**
 * Gender Style Java Implementation.
 * 
 * Generated by metaabm system: Oct 8, 2009 5:46:48 PM PDT in project: edu.brook.parent.escape  */

public class GenderStyleGraphics extends org.ascape.util.vis.DrawFeature {

	enum Shapes {
		rectangle, oval, marker
	};

	Shapes shape = Shapes.rectangle;

	public void draw(org.eclipse.draw2d.Graphics g, Object object, int width,
			int height) {

		org.ascape.model.HostCell styleCell = (org.ascape.model.HostCell) object;
		if (styleCell.getOccupant() instanceof Adult) {
			Adult style = (Adult) styleCell.getOccupant();
			Adult drawGenderRule = style;

			double unitforAge = drawGenderRule.getAgeinYearsIndex() / 30.0;

			double unitforAgeRange = java.lang.Math.min(unitforAge, 1)

			;

			if (drawGenderRule.getGender() == GenderEnum.male) {
				shape = shape.rectangle;
				org.eclipse.swt.graphics.Color blueScale = new org.eclipse.swt.graphics.Color(
						org.eclipse.swt.widgets.Display.getCurrent(),
						(int) (unitforAgeRange * 255),
						(int) (unitforAgeRange * 255), (int) (1.0 * 255));

				g.setForegroundColor(blueScale);
				g.setBackgroundColor(blueScale);
				if (shape == Shapes.oval) {
					g.fillOval(0, 0, width, height);
				} else if (shape == Shapes.marker) {
					int d = (int) (width * .25 - 1);
					int d2 = (int) (width * .5 - 1);
					g.fillOval(d, d, d2, d2);
				} else if (shape == Shapes.rectangle) {
					g.fillRectangle(0, 0, width, height);
				}
				org.eclipse.swt.graphics.Color maleColor = org.eclipse.draw2d.ColorConstants.blue;

				g.setForegroundColor(maleColor);
				g.setBackgroundColor(maleColor);
				if (shape == Shapes.oval) {
					g.drawOval(0, 0, width, height);
				} else if (shape == Shapes.marker) {
					int d = (int) (width * .25 - 1);
					int d2 = (int) (width * .5 - 1);
					g.drawOval(d, d, d2, d2);
				} else if (shape == Shapes.rectangle) {
					g.drawRectangle(0, 0, width, height);
				}

				int now = drawGenderRule.getScape().getPeriod();

				if (now == drawGenderRule.getDayofLastSex()) {
					shape = shape.marker;
					org.eclipse.swt.graphics.Color sexColor = org.eclipse.draw2d.ColorConstants.orange;

					g.setForegroundColor(sexColor);
					g.setBackgroundColor(sexColor);
					if (shape == Shapes.oval) {
						g.fillOval(0, 0, width, height);
					} else if (shape == Shapes.marker) {
						int d = (int) (width * .25 - 1);
						int d2 = (int) (width * .5 - 1);
						g.fillOval(d, d, d2, d2);
					} else if (shape == Shapes.rectangle) {
						g.fillRectangle(0, 0, width, height);
					}

				}

				if (drawGenderRule.getMaritalStatus() == MaritalStatusEnum.married) {
					org.eclipse.swt.graphics.Color colorBlack = org.eclipse.draw2d.ColorConstants.black;

					g.setForegroundColor(colorBlack);
					g.setBackgroundColor(colorBlack);
					shape = shape.marker;
					if (shape == Shapes.oval) {
						g.fillOval(0, 0, width, height);
					} else if (shape == Shapes.marker) {
						int d = (int) (width * .25 - 1);
						int d2 = (int) (width * .5 - 1);
						g.fillOval(d, d, d2, d2);
					} else if (shape == Shapes.rectangle) {
						g.fillRectangle(0, 0, width, height);
					}

				}

			}

			if (drawGenderRule.getGender() == GenderEnum.female) {
				shape = shape.oval;
				org.eclipse.swt.graphics.Color redScale = new org.eclipse.swt.graphics.Color(
						org.eclipse.swt.widgets.Display.getCurrent(),
						(int) (1.0 * 255), (int) (unitforAgeRange * 255),
						(int) (unitforAgeRange * 255));

				g.setForegroundColor(redScale);
				g.setBackgroundColor(redScale);
				if (drawGenderRule.isPregnant()) {
					org.eclipse.swt.graphics.Color drawGenderRuleColorGreen = org.eclipse.draw2d.ColorConstants.green;

					g.setForegroundColor(drawGenderRuleColorGreen);
					g.setBackgroundColor(drawGenderRuleColorGreen);
					shape = shape.marker;
					if (shape == Shapes.oval) {
						g.fillOval(0, 0, width, height);
					} else if (shape == Shapes.marker) {
						int d = (int) (width * .25 - 1);
						int d2 = (int) (width * .5 - 1);
						g.fillOval(d, d, d2, d2);
					} else if (shape == Shapes.rectangle) {
						g.fillRectangle(0, 0, width, height);
					}

				}

				if (shape == Shapes.oval) {
					g.fillOval(0, 0, width, height);
				} else if (shape == Shapes.marker) {
					int d = (int) (width * .25 - 1);
					int d2 = (int) (width * .5 - 1);
					g.fillOval(d, d, d2, d2);
				} else if (shape == Shapes.rectangle) {
					g.fillRectangle(0, 0, width, height);
				}
				org.eclipse.swt.graphics.Color notPregnantColor = org.eclipse.draw2d.ColorConstants.red;

				g.setForegroundColor(notPregnantColor);
				g.setBackgroundColor(notPregnantColor);
				if (shape == Shapes.oval) {
					g.drawOval(0, 0, width, height);
				} else if (shape == Shapes.marker) {
					int d = (int) (width * .25 - 1);
					int d2 = (int) (width * .5 - 1);
					g.drawOval(d, d, d2, d2);
				} else if (shape == Shapes.rectangle) {
					g.drawRectangle(0, 0, width, height);
				}

				int now = drawGenderRule.getScape().getPeriod();

				if (now == drawGenderRule.getDayofLastSex()) {
					shape = shape.marker;
					org.eclipse.swt.graphics.Color sexColor = org.eclipse.draw2d.ColorConstants.orange;

					g.setForegroundColor(sexColor);
					g.setBackgroundColor(sexColor);
					if (shape == Shapes.oval) {
						g.fillOval(0, 0, width, height);
					} else if (shape == Shapes.marker) {
						int d = (int) (width * .25 - 1);
						int d2 = (int) (width * .5 - 1);
						g.fillOval(d, d, d2, d2);
					} else if (shape == Shapes.rectangle) {
						g.fillRectangle(0, 0, width, height);
					}

				}

				if (drawGenderRule.getMaritalStatus() == MaritalStatusEnum.married) {
					org.eclipse.swt.graphics.Color colorBlack = org.eclipse.draw2d.ColorConstants.black;

					g.setForegroundColor(colorBlack);
					g.setBackgroundColor(colorBlack);
					shape = shape.marker;
					if (shape == Shapes.oval) {
						g.fillOval(0, 0, width, height);
					} else if (shape == Shapes.marker) {
						int d = (int) (width * .25 - 1);
						int d2 = (int) (width * .5 - 1);
						g.fillOval(d, d, d2, d2);
					} else if (shape == Shapes.rectangle) {
						g.fillRectangle(0, 0, width, height);
					}

				}

			}

		}
	}
}
