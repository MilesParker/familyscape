package edu.brook.ccf.rpm;

import org.eclipse.amp.agf.IGraphicsAdapter;
import org.eclipse.amp.agf.GraphicsAdapter;
import org.eclipse.amp.agf.gef.IFigureProvider;
import org.eclipse.core.runtime.IAdapterFactory;

import org.eclipse.amp.agf.gef.IFigureProvider;
import org.eclipse.jface.viewers.IColorProvider;
import org.eclipse.jface.viewers.ILabelProvider;

/**
 * Relationships And Pregnancy Java Implementation.
 * 
 * Generated by AMF for model: RelationshipsAndPregnancyData.metaabm in project: edu.brook.parent.escape 
 */
public class RelationshipsAndPregnancyGraphicsAdapter extends GraphicsAdapter {

	private static IGraphicsAdapter singleton;

	IColorProvider[] relationshipsAndPregnancyColorProviders = new IColorProvider[]{};
	IColorProvider[] adultColorProviders = new IColorProvider[]{GenderStyleColorProvider
			.getDefault()};
	IColorProvider[] neighborhoodCellColorProviders = new IColorProvider[]{NeighborhoodCellStyle2DColorProvider
			.getDefault()};

	IFigureProvider[] relationshipsAndPregnancyFigureProviders = new IFigureProvider[]{};
	IFigureProvider[] adultFigureProviders = new IFigureProvider[]{GenderStyleFigureProvider
			.getDefault()};
	IFigureProvider[] neighborhoodCellFigureProviders = new IFigureProvider[]{NeighborhoodCellStyle2DFigureProvider
			.getDefault()};

	/**
	 * @param type
	 * @return
	 * @see org.eclipse.amp.agf.IGraphicsAdapter#getColorsForClass(java.lang.Class)
	 */
	public IColorProvider[] getColorsForClass(Class type) {
		if (type == RelationshipsAndPregnancy.class) {
			return relationshipsAndPregnancyColorProviders;
		}
		if (type == Adult.class) {
			return adultColorProviders;
		}
		if (type == NeighborhoodCell.class) {
			return neighborhoodCellColorProviders;
		}
		return null;
	}

	/**
	 * @param type
	 * @return
	 * @see org.eclipse.amp.agf.IGraphicsAdapter#getFiguresForClass(java.lang.Class)
	 */
	public IFigureProvider[] getFiguresForClass(Class type) {
		if (type == RelationshipsAndPregnancy.class) {
			return relationshipsAndPregnancyFigureProviders;
		}
		if (type == Adult.class) {
			return adultFigureProviders;
		}
		if (type == NeighborhoodCell.class) {
			return neighborhoodCellFigureProviders;
		}
		return null;
	}

	/**
	 * @param type
	 * @return
	 * @see org.eclipse.amp.agf.IGraphicsAdapter#getLabelsForClass(java.lang.Class)
	 */
	public ILabelProvider[] getLabelsForClass(Class type) {
		return null;
	}

	public static IGraphicsAdapter getDefault() {
		if (singleton == null) {
			singleton = new RelationshipsAndPregnancyGraphicsAdapter();
		}
		return singleton;
	}
}
