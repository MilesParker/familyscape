package edu.brook.ccf.rpm;

/**
 * Relationships And Pregnancy Java Implementation.
 * 
 * Generated by metaabm system: Nov 20, 2009 7:01:16 PM PST in project: edu.brook.parent.escape  */

public class RelationshipsAndPregnancy extends org.ascape.model.Scape
		implements
			org.eclipse.amp.agf.gef.ModelFactoryProvider {

	/**
	 * The number of adults to create.
	 */

	private int adultCount = 500;
	/**
	 * 
	 */

	private int minimumAge = 15;
	/**
	 * The first day of the period of time in which typical elective abortions occur. Note that this is the actual day following conception, not the date as usually given from start of last cycle. 
	 */

	private int typicalAbortionPeriodStart = 60;
	/**
	 * The last day of the period of time in which typical elective abortions occur. Note that this is the actual day following conception, not the date as usually given from start of last cycle. 
	 */

	private int typicalAbortionPeriodEnd = 200;
	/**
	 * The first day of the period of time in which typical live briths occur. Note that this is the actual day following conception, not the date as usually given from start of last cycle. 
	 */

	private int typicalBirthPeriodStart = 300;
	/**
	 * The last day of the period of time in which typical live briths occur. Note that this is the actual day following conception, not the date as usually given from start of last cycle. 
	 */

	private int typicalBirthPeriodEnd = 360;
	/**
	 * The probability that a woman having unprotected sex (not using contraception) will concieve as a function of the day in her mentural cycle.
	 */

	private double[] fecunditybyDayinCycle = {0.0001, 0.0003, 0.0006, 0.0011,
			0.0022, 0.0043, 0.0085, 0.0169, 0.0333, 0.0658, 0.1299, 0.2565,
			0.5065, 1.0000, 0.5065, 0.0574, 0.0138, 0.0033, 0.0008, 0.0002,
			0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000};
	/**
	 * The rate at which condoms fail to prevent a pregnancy from occuring. (1 - efficacy.)
	 */

	private double condomFailureRate = .15;
	/**
	 * The rate at which oral contraception fails to prevent a pregnancy from occuring. (1 - efficacy.)
	 */

	private double pillFailureRate = .05;
	/**
	 * The rate at which condom and oral contraception used together fail to prevent a given pregnancy from occuring. (1 - efficacy.)
	 */

	private double pillCondomFailureRate = .0075;
	/**
	 * 
	 */

	private double[] fecundityByAge = {0.854, 0.832, 0.81, 0.788, 0.766, 0.744,
			0.722, 0.7, 0.678, 0.656, 0.634, 0.612, 0.59, 0.568, 0.546, 0.524,
			0.502, 0.48, 0.458, 0.436, 0.414, 0.392, 0.37, 0.348, 0.326, 0.304,
			0.282, 0.26, 0.238, 0.216};
	/**
	 * 
	 */

	private int walkTowardAge = 1;
	/**
	 * Given all other factors, the effect of a timing strategy on intercourse proclivity as a function of day of mentural cycle.
	 */

	private double[] rhythmMethodBiasforDay = {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
			1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1};
	/**
	 * 
	 */

	private int agentVision = 6;
	/**
	 * 
	 */

	private double pMiscarriageMarriedFactorBase = .33333;
	/**
	 * 
	 */

	private double pMiscarriageMarried15to19Factor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageMarried20to24Factor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageMarried25to29Factor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageMarried30to44Factor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageMarriedNHSFactor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageMarriedPHSFactor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageMarriedHSFactor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageMarriedOtherFactor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageMarriedBlackFactor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageMarriedHispanicFactor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageMarriedWhiteFactor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageMarriedCategory1Factor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageMarriedCategory3Factor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageMarriedCategory2Factor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageMarriedCategory4Factor = 0.0;
	/**
	 * 
	 */

	private String inputDataFile = "data/NSFG_Unmarried.txt";
	/**
	 * 
	 */

	private double pRelationshipEndMinimum = 0;
	/**
	 * 
	 */

	private double pRelationshipEndMaximum = .02;
	/**
	 * 
	 */

	private double pRelationshipBeginMinimum = .0;
	/**
	 * 
	 */

	private double pRelationshipBeginMaximum = 1;
	/**
	 * The effect on likelihood of sex given that the couple has never had sex. For example, if an Adult's P Sex is 0.1 and this value is 0.2, then the probability of having sex on any given day is .02.
	 */

	private double coitalFrequencyInitialModification = 1.0;
	/**
	 * 
	 */

	private int lunarDays = 28;
	/**
	 * 
	 */

	private String outputRunFile = "data/RunOut.txt";
	/**
	 * 
	 */

	private String outputPeriodFile = "data/RunPeriod.txt";
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowMarriedFactorBase = 0.1;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowMarriedFemaleFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowMarriedMaleFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowMarried15to19Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowMarried20to24Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowMarried25to29Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowMarried30to44Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowMarriedNHSFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowMarriedPHSFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowMarriedHSFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowMarriedOtherFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowMarriedBlackFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowMarriedHispanicFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowMarriedWhiteFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowMarriedCategory1Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowMarriedCategory3Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowMarriedCategory2Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowMarriedCategory4Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateMarriedFactorBase = 0.3;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateMarriedFemaleFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateMarriedMaleFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateMarried15to19Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateMarried20to24Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateMarried25to29Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateMarried30to44Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateMarriedNHSFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateMarriedPHSFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateMarriedHSFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateMarriedOtherFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateMarriedBlackFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateMarriedHispanicFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateMarriedWhiteFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateMarriedCategory1Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateMarriedCategory3Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateMarriedCategory2Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateMarriedCategory4Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowUnmarriedFactorBase = 0.1;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowUnmarriedFemaleFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowUnmarriedMaleFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowUnmarried15to19Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowUnmarried20to24Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowUnmarried25to29Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowUnmarried30to44Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowUnmarriedNHSFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowUnmarriedPHSFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowUnmarriedHSFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowUnmarriedOtherFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowUnmarriedBlackFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowUnmarriedHispanicFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowUnmarriedWhiteFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowUnmarriedCategory1Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowUnmarriedCategory3Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowUnmarriedCategory2Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyVeryLowUnmarriedCategory4Factor = 0.0;
	/**
	 * 
	 */

	private double pAbortionMarriedFactorBase = .33333;
	/**
	 * 
	 */

	private double pAbortionMarried15to19Factor = 0.0;
	/**
	 * 
	 */

	private double pAbortionMarried20to24Factor = 0.0;
	/**
	 * 
	 */

	private double pAbortionMarried25to29Factor = 0.0;
	/**
	 * 
	 */

	private double pAbortionMarried30to44Factor = 0.0;
	/**
	 * 
	 */

	private double pAbortionMarriedNHSFactor = 0.0;
	/**
	 * 
	 */

	private double pAbortionMarriedPHSFactor = 0.0;
	/**
	 * 
	 */

	private double pAbortionMarriedHSFactor = 0.0;
	/**
	 * 
	 */

	private double pAbortionMarriedOtherFactor = 0.0;
	/**
	 * 
	 */

	private double pAbortionMarriedBlackFactor = 0.0;
	/**
	 * 
	 */

	private double pAbortionMarriedHispanicFactor = 0.0;
	/**
	 * 
	 */

	private double pAbortionMarriedWhiteFactor = 0.0;
	/**
	 * 
	 */

	private double pAbortionMarriedCategory1Factor = 0.0;
	/**
	 * 
	 */

	private double pAbortionMarriedCategory3Factor = 0.0;
	/**
	 * 
	 */

	private double pAbortionMarriedCategory2Factor = 0.0;
	/**
	 * 
	 */

	private double pAbortionMarriedCategory4Factor = 0.0;
	/**
	 * 
	 */

	private double pAbortionUnmarriedFactorBase = .33333;
	/**
	 * 
	 */

	private double pAbortionUnmarried15to19Factor = 0.0;
	/**
	 * 
	 */

	private double pAbortionUnmarried20to24Factor = 0.0;
	/**
	 * 
	 */

	private double pAbortionUnmarried25to29Factor = 0.0;
	/**
	 * 
	 */

	private double pAbortionUnmarried30to44Factor = 0.0;
	/**
	 * 
	 */

	private double pAbortionUnmarriedNHSFactor = 0.0;
	/**
	 * 
	 */

	private double pAbortionUnmarriedPHSFactor = 0.0;
	/**
	 * 
	 */

	private double pAbortionUnmarriedHSFactor = 0.0;
	/**
	 * 
	 */

	private double pAbortionUnmarriedOtherFactor = 0.0;
	/**
	 * 
	 */

	private double pAbortionUnmarriedBlackFactor = 0.0;
	/**
	 * 
	 */

	private double pAbortionUnmarriedHispanicFactor = 0.0;
	/**
	 * 
	 */

	private double pAbortionUnmarriedWhiteFactor = 0.0;
	/**
	 * 
	 */

	private double pAbortionUnmarriedCategory1Factor = 0.0;
	/**
	 * 
	 */

	private double pAbortionUnmarriedCategory3Factor = 0.0;
	/**
	 * 
	 */

	private double pAbortionUnmarriedCategory2Factor = 0.0;
	/**
	 * 
	 */

	private double pAbortionUnmarriedCategory4Factor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageUnmarriedFactorBase = .33333;
	/**
	 * 
	 */

	private double pMiscarriageUnmarried15to19Factor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageUnmarried20to24Factor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageUnmarried25to29Factor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageUnmarried30to44Factor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageUnmarriedNHSFactor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageUnmarriedPHSFactor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageUnmarriedHSFactor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageUnmarriedOtherFactor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageUnmarriedBlackFactor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageUnmarriedHispanicFactor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageUnmarriedWhiteFactor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageUnmarriedCategory1Factor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageUnmarriedCategory3Factor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageUnmarriedCategory2Factor = 0.0;
	/**
	 * 
	 */

	private double pMiscarriageUnmarriedCategory4Factor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthMarriedFactorBase = .5;
	/**
	 * 
	 */

	private double pPoorBirthMarried15to19Factor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthMarried20to24Factor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthMarried25to29Factor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthMarried30to44Factor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthMarriedNHSFactor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthMarriedPHSFactor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthMarriedHSFactor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthMarriedOtherFactor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthMarriedBlackFactor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthMarriedHispanicFactor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthMarriedWhiteFactor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthMarriedCategory1Factor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthMarriedCategory3Factor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthMarriedCategory2Factor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthMarriedCategory4Factor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthUnmarriedFactorBase = .5;
	/**
	 * 
	 */

	private double pPoorBirthUnmarried15to19Factor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthUnmarried20to24Factor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthUnmarried25to29Factor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthUnmarried30to44Factor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthUnmarriedNHSFactor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthUnmarriedPHSFactor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthUnmarriedHSFactor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthUnmarriedOtherFactor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthUnmarriedBlackFactor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthUnmarriedHispanicFactor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthUnmarriedWhiteFactor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthUnmarriedCategory1Factor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthUnmarriedCategory3Factor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthUnmarriedCategory2Factor = 0.0;
	/**
	 * 
	 */

	private double pPoorBirthUnmarriedCategory4Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateUnmarriedFactorBase = 0.3;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateUnmarriedFemaleFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateUnmarriedMaleFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateUnmarried15to19Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateUnmarried20to24Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateUnmarried25to29Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateUnmarried30to44Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateUnmarriedNHSFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateUnmarriedPHSFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateUnmarriedHSFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateUnmarriedOtherFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateUnmarriedBlackFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateUnmarriedHispanicFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateUnmarriedWhiteFactor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateUnmarriedCategory1Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateUnmarriedCategory3Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateUnmarriedCategory2Factor = 0.0;
	/**
	 * 
	 */

	private double pCoitalFrequencyModerateUnmarriedCategory4Factor = 0.0;
	/**
	 * 
	 */

	private String allOutputFile = "data/AllOutput.txt";
	/**
	 * 
	 */

	private boolean outputData = true;
	/**
	 * 
	 */

	private String writePeriods = "1365";
	/**
	 * 
	 */

	private double pSterilizeMaleMarriedFactorBase = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleMarried15to19Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleMarried20to24Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleMarried25to29Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleMarried30to44Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleMarriedNHSFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleMarriedPHSFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleMarriedHSFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleMarriedOtherFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleMarriedBlackFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleMarriedHispanicFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleMarriedWhiteFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleMarriedCategory1Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleMarriedCategory3Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleMarriedCategory2Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleMarriedCategory4Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleMarriedVeryLowFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleMarriedHighFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleMarriedModerateFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleMarriedPartnerSterilizedFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleMarriedOtherContraceptionFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleMarriedFactorBase = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleMarried15to19Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleMarried20to24Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleMarried25to29Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleMarried30to44Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleMarriedNHSFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleMarriedPHSFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleMarriedHSFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleMarriedOtherFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleMarriedBlackFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleMarriedHispanicFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleMarriedWhiteFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleMarriedCategory1Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleMarriedCategory3Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleMarriedCategory2Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleMarriedCategory4Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleMarriedVeryLowFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleMarriedHighFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleMarriedModerateFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleMarriedPartnerSterilizedFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleMarriedOtherContraceptionFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleUnmarriedFactorBase = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleUnmarried15to19Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleUnmarried20to24Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleUnmarried25to29Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleUnmarried30to44Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleUnmarriedNHSFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleUnmarriedPHSFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleUnmarriedHSFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleUnmarriedOtherFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleUnmarriedBlackFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleUnmarriedHispanicFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleUnmarriedWhiteFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleUnmarriedCategory1Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleUnmarriedCategory3Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleUnmarriedCategory2Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleUnmarriedCategory4Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleUnmarriedVeryLowFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleUnmarriedHighFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleUnmarriedModerateFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleUnmarriedPartnerSterilizedFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeMaleUnmarriedOtherContraceptionFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleUnmarriedFactorBase = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleUnmarried15to19Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleUnmarried20to24Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleUnmarried25to29Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleUnmarried30to44Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleUnmarriedNHSFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleUnmarriedPHSFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleUnmarriedHSFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleUnmarriedOtherFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleUnmarriedBlackFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleUnmarriedHispanicFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleUnmarriedWhiteFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleUnmarriedCategory1Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleUnmarriedCategory3Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleUnmarriedCategory2Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleUnmarriedCategory4Factor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleUnmarriedVeryLowFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleUnmarriedHighFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleUnmarriedModerateFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleUnmarriedPartnerSterilizedFactor = 0.0;
	/**
	 * 
	 */

	private double pSterilizeFemaleUnmarriedOtherContraceptionFactor = 0.0;
	/**
	 * 
	 */

	private double pPillUseMarriedFactorBase = 0.0;
	/**
	 * 
	 */

	private double pPillUseMarried15to19Factor = 0.0;
	/**
	 * 
	 */

	private double pPillUseMarried20to24Factor = 0.0;
	/**
	 * 
	 */

	private double pPillUseMarried25to29Factor = 0.0;
	/**
	 * 
	 */

	private double pPillUseMarried30to44Factor = 0.0;
	/**
	 * 
	 */

	private double pPillUseMarriedNHSFactor = 0.0;
	/**
	 * 
	 */

	private double pPillUseMarriedPHSFactor = 0.0;
	/**
	 * 
	 */

	private double pPillUseMarriedHSFactor = 0.0;
	/**
	 * 
	 */

	private double pPillUseMarriedOtherFactor = 0.0;
	/**
	 * 
	 */

	private double pPillUseMarriedBlackFactor = 0.0;
	/**
	 * 
	 */

	private double pPillUseMarriedHispanicFactor = 0.0;
	/**
	 * 
	 */

	private double pPillUseMarriedWhiteFactor = 0.0;
	/**
	 * 
	 */

	private double pPillUseMarriedCategory1Factor = 0.0;
	/**
	 * 
	 */

	private double pPillUseMarriedCategory3Factor = 0.0;
	/**
	 * 
	 */

	private double pPillUseMarriedCategory2Factor = 0.0;
	/**
	 * 
	 */

	private double pPillUseMarriedCategory4Factor = 0.0;
	/**
	 * 
	 */

	private double pPillUseMarriedVeryLowFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pPillUseMarriedHighFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pPillUseMarriedModerateFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pPillUseMarriedPartnerSterilizedFactor = 0.0;
	/**
	 * 
	 */

	private double pPillUseMarriedOtherContraceptionFactor = 0.0;
	/**
	 * 
	 */

	private double pPillUseUnmarriedFactorBase = 0.0;
	/**
	 * 
	 */

	private double pPillUseUnmarried15to19Factor = 0.0;
	/**
	 * 
	 */

	private double pPillUseUnmarried20to24Factor = 0.0;
	/**
	 * 
	 */

	private double pPillUseUnmarried25to29Factor = 0.0;
	/**
	 * 
	 */

	private double pPillUseUnmarried30to44Factor = 0.0;
	/**
	 * 
	 */

	private double pPillUseUnmarriedNHSFactor = 0.0;
	/**
	 * 
	 */

	private double pPillUseUnmarriedPHSFactor = 0.0;
	/**
	 * 
	 */

	private double pPillUseUnmarriedHSFactor = 0.0;
	/**
	 * 
	 */

	private double pPillUseUnmarriedOtherFactor = 0.0;
	/**
	 * 
	 */

	private double pPillUseUnmarriedBlackFactor = 0.0;
	/**
	 * 
	 */

	private double pPillUseUnmarriedHispanicFactor = 0.0;
	/**
	 * 
	 */

	private double pPillUseUnmarriedWhiteFactor = 0.0;
	/**
	 * 
	 */

	private double pPillUseUnmarriedCategory1Factor = 0.0;
	/**
	 * 
	 */

	private double pPillUseUnmarriedCategory3Factor = 0.0;
	/**
	 * 
	 */

	private double pPillUseUnmarriedCategory2Factor = 0.0;
	/**
	 * 
	 */

	private double pPillUseUnmarriedCategory4Factor = 0.0;
	/**
	 * 
	 */

	private double pPillUseUnmarriedVeryLowFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pPillUseUnmarriedHighFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pPillUseUnmarriedModerateFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pPillUseUnmarriedPartnerSterilizedFactor = 0.0;
	/**
	 * 
	 */

	private double pPillUseUnmarriedOtherContraceptionFactor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseMarriedValue = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseUnmarriedFactorBase = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseUnmarried15to19Factor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseUnmarried20to24Factor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseUnmarried25to29Factor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseUnmarried30to44Factor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseUnmarriedNHSFactor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseUnmarriedPHSFactor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseUnmarriedHSFactor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseUnmarriedOtherFactor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseUnmarriedBlackFactor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseUnmarriedHispanicFactor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseUnmarriedWhiteFactor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseUnmarriedCategory1Factor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseUnmarriedCategory3Factor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseUnmarriedCategory2Factor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseUnmarriedCategory4Factor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseUnmarriedVeryLowFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseUnmarriedHighFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseUnmarriedModerateFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseUnmarriedPartnerSterilizedFactor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseUnmarriedOtherContraceptionFactor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseMarriedFactorBase = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseMarried15to19Factor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseMarried20to24Factor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseMarried25to29Factor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseMarried30to44Factor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseMarriedNHSFactor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseMarriedPHSFactor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseMarriedHSFactor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseMarriedOtherFactor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseMarriedBlackFactor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseMarriedHispanicFactor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseMarriedWhiteFactor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseMarriedCategory1Factor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseMarriedCategory3Factor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseMarriedCategory2Factor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseMarriedCategory4Factor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseMarriedVeryLowFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseMarriedHighFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseMarriedModerateFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseMarriedPartnerSterilizedFactor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseMarriedOtherContraceptionFactor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseUnmarriedFactorBase = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseUnmarried15to19Factor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseUnmarried20to24Factor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseUnmarried25to29Factor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseUnmarried30to44Factor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseUnmarriedNHSFactor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseUnmarriedPHSFactor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseUnmarriedHSFactor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseUnmarriedOtherFactor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseUnmarriedBlackFactor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseUnmarriedHispanicFactor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseUnmarriedWhiteFactor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseUnmarriedCategory1Factor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseUnmarriedCategory3Factor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseUnmarriedCategory2Factor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseUnmarriedCategory4Factor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseUnmarriedVeryLowFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseUnmarriedHighFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseUnmarriedModerateFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseUnmarriedPartnerSterilizedFactor = 0.0;
	/**
	 * 
	 */

	private double pMediumCondomUseUnmarriedOtherContraceptionFactor = 0.0;
	/**
	 * 
	 */

	private double coitalDaysMarriedMinimumBase = 0.0;
	/**
	 * 
	 */

	private double coitalDaysMarriedMaximumBase = 0.0;
	/**
	 * 
	 */

	private double coitalDaysMarriedVeryLowFrequencyMinimum = 0.0;
	/**
	 * 
	 */

	private double coitalDaysMarriedVeryLowFrequencyMaximum = 0.0;
	/**
	 * 
	 */

	private double coitalDaysMarriedHighFrequencyMinimum = 0.0;
	/**
	 * 
	 */

	private double coitalDaysMarriedHighFrequencyMaximum = 0.0;
	/**
	 * 
	 */

	private double coitalDaysMarriedModerateFrequencyMinimum = 0.0;
	/**
	 * 
	 */

	private double coitalDaysMarriedModerateFrequencyMaximum = 0.0;
	/**
	 * 
	 */

	private double coitalDaysUnmarriedMinimumBase = 0.0;
	/**
	 * 
	 */

	private double coitalDaysUnmarriedMaximumBase = 0.0;
	/**
	 * 
	 */

	private double coitalDaysUnmarriedVeryLowFrequencyMinimum = 0.0;
	/**
	 * 
	 */

	private double coitalDaysUnmarriedVeryLowFrequencyMaximum = 0.0;
	/**
	 * 
	 */

	private double coitalDaysUnmarriedHighFrequencyMinimum = 0.0;
	/**
	 * 
	 */

	private double coitalDaysUnmarriedHighFrequencyMaximum = 0.0;
	/**
	 * 
	 */

	private double coitalDaysUnmarriedModerateFrequencyMinimum = 0.0;
	/**
	 * 
	 */

	private double coitalDaysUnmarriedModerateFrequencyMaximum = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseMarriedFactorBase = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseMarried15to19Factor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseMarried20to24Factor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseMarried25to29Factor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseMarried30to44Factor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseMarriedNHSFactor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseMarriedPHSFactor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseMarriedHSFactor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseMarriedOtherFactor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseMarriedBlackFactor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseMarriedHispanicFactor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseMarriedWhiteFactor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseMarriedCategory1Factor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseMarriedCategory3Factor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseMarriedCategory2Factor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseMarriedCategory4Factor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseMarriedPartnerSterilizedFactor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseMarriedOtherContraceptionFactor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseMarriedVeryLowFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseMarriedHighFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pHighCondomUseMarriedModerateFrequencyFactor = 0.0;
	/**
	 * 
	 */

	private double pRhythmMethodMarriedNone = 0.0;
	/**
	 * 
	 */

	private double pRhythmMethodMarriedSterilized = 0.0;
	/**
	 * 
	 */

	private double pRhythmMethodMarriedPill = 0.0;
	/**
	 * 
	 */

	private double pRhythmMethodMarriedCondomMediumIntender = 0.0;
	/**
	 * 
	 */

	private double pRhythmMethodMarriedCondomHighIntender = 0.0;
	/**
	 * 
	 */

	private double pRhythmMethodSingleNone = 0.0;
	/**
	 * 
	 */

	private double pRhythmMethodSingleSterilized = 0.0;
	/**
	 * 
	 */

	private double pRhythmMethodSinglePill = 0.0;
	/**
	 * 
	 */

	private double pRhythmMethodSingleCondomMediumIntender = 0.0;
	/**
	 * 
	 */

	private double pRhythmMethodSingleCondomHighIntender = 0.0;
	/**
	 * 
	 */

	private double pRhythmMethodDivorcedNone = 0.0;
	/**
	 * 
	 */

	private double pRhythmMethodDivorcedSterilized = 0.0;
	/**
	 * 
	 */

	private double pRhythmMethodDivorcedPill = 0.0;
	/**
	 * 
	 */

	private double pRhythmMethodDivorcedCondomMediumIntender = 0.0;
	/**
	 * 
	 */

	private double pRhythmMethodDivorcedCondomHighIntender = 0.0;
	/**
	 * This specifies the model iteration (day) when we first start allowing marriages and divorces to occur. This is designed to allow model behavior (e.g. relationship formation) to go through transition period before beginning marriage dynamics.
	 */

	private int marriageAndDivorceStartDay = 0;
	/**
	 * A factor to convert from yearly probability of marriage to daily probability.
	 */

	private double pMarriageYearlytoDailyConversion = .01;
	/**
	 * A factor to convert from yearly probability of divorce to daily probability.
	 */

	private double pDivorceYearlytoDailyConversion = .01;
	/**
	 * 
	 */

	private double pDivorceMinimumBase = 0.0;
	/**
	 * 
	 */

	private double pDivorceMaximumBase = 0.0;
	/**
	 * 
	 */

	private double pDivorceFemaleMinimum = 0.0;
	/**
	 * 
	 */

	private double pDivorceFemaleMaximum = 0.0;
	/**
	 * 
	 */

	private double pDivorceMaleMinimum = 0.0;
	/**
	 * 
	 */

	private double pDivorceMaleMaximum = 0.0;
	/**
	 * 
	 */

	private double pDivorce15to19Minimum = 0.0;
	/**
	 * 
	 */

	private double pDivorce15to19Maximum = 0.0;
	/**
	 * 
	 */

	private double pDivorce20to24Minimum = 0.0;
	/**
	 * 
	 */

	private double pDivorce20to24Maximum = 0.0;
	/**
	 * 
	 */

	private double pDivorce25to29Minimum = 0.0;
	/**
	 * 
	 */

	private double pDivorce25to29Maximum = 0.0;
	/**
	 * 
	 */

	private double pDivorce30to44Minimum = 0.0;
	/**
	 * 
	 */

	private double pDivorce30to44Maximum = 0.0;
	/**
	 * 
	 */

	private double pDivorceNHSMinimum = 0.0;
	/**
	 * 
	 */

	private double pDivorceNHSMaximum = 0.0;
	/**
	 * 
	 */

	private double pDivorcePHSMinimum = 0.0;
	/**
	 * 
	 */

	private double pDivorcePHSMaximum = 0.0;
	/**
	 * 
	 */

	private double pDivorceHSMinimum = 0.0;
	/**
	 * 
	 */

	private double pDivorceHSMaximum = 0.0;
	/**
	 * 
	 */

	private double pDivorceOtherMinimum = 0.0;
	/**
	 * 
	 */

	private double pDivorceOtherMaximum = 0.0;
	/**
	 * 
	 */

	private double pDivorceBlackMinimum = 0.0;
	/**
	 * 
	 */

	private double pDivorceBlackMaximum = 0.0;
	/**
	 * 
	 */

	private double pDivorceHispanicMinimum = 0.0;
	/**
	 * 
	 */

	private double pDivorceHispanicMaximum = 0.0;
	/**
	 * 
	 */

	private double pDivorceWhiteMinimum = 0.0;
	/**
	 * 
	 */

	private double pDivorceWhiteMaximum = 0.0;
	/**
	 * 
	 */

	private double pDivorceCategory1Minimum = 0.0;
	/**
	 * 
	 */

	private double pDivorceCategory1Maximum = 0.0;
	/**
	 * 
	 */

	private double pDivorceCategory3Minimum = 0.0;
	/**
	 * 
	 */

	private double pDivorceCategory3Maximum = 0.0;
	/**
	 * 
	 */

	private double pDivorceCategory2Minimum = 0.0;
	/**
	 * 
	 */

	private double pDivorceCategory2Maximum = 0.0;
	/**
	 * 
	 */

	private double pDivorceCategory4Minimum = 0.0;
	/**
	 * 
	 */

	private double pDivorceCategory4Maximum = 0.0;
	/**
	 * 
	 */

	private double pDivorceNotPregnantMinimum = 0.0;
	/**
	 * 
	 */

	private double pDivorceNotPregnantMaximum = 0.0;
	/**
	 * 
	 */

	private double pDivorcePregnantMinimum = 0.0;
	/**
	 * 
	 */

	private double pDivorcePregnantMaximum = 0.0;
	/**
	 * 
	 */

	private double pMarriageMinimumBase = 0.0;
	/**
	 * 
	 */

	private double pMarriageMaximumBase = 0.0;
	/**
	 * 
	 */

	private double pMarriageFemaleMinimum = 0.0;
	/**
	 * 
	 */

	private double pMarriageFemaleMaximum = 0.0;
	/**
	 * 
	 */

	private double pMarriageMaleMinimum = 0.0;
	/**
	 * 
	 */

	private double pMarriageMaleMaximum = 0.0;
	/**
	 * 
	 */

	private double pMarriage15to19Minimum = 0.0;
	/**
	 * 
	 */

	private double pMarriage15to19Maximum = 0.0;
	/**
	 * 
	 */

	private double pMarriage20to24Minimum = 0.0;
	/**
	 * 
	 */

	private double pMarriage20to24Maximum = 0.0;
	/**
	 * 
	 */

	private double pMarriage25to29Minimum = 0.0;
	/**
	 * 
	 */

	private double pMarriage25to29Maximum = 0.0;
	/**
	 * 
	 */

	private double pMarriage30to44Minimum = 0.0;
	/**
	 * 
	 */

	private double pMarriage30to44Maximum = 0.0;
	/**
	 * 
	 */

	private double pMarriageNHSMinimum = 0.0;
	/**
	 * 
	 */

	private double pMarriageNHSMaximum = 0.0;
	/**
	 * 
	 */

	private double pMarriagePHSMinimum = 0.0;
	/**
	 * 
	 */

	private double pMarriagePHSMaximum = 0.0;
	/**
	 * 
	 */

	private double pMarriageHSMinimum = 0.0;
	/**
	 * 
	 */

	private double pMarriageHSMaximum = 0.0;
	/**
	 * 
	 */

	private double pMarriageOtherMinimum = 0.0;
	/**
	 * 
	 */

	private double pMarriageOtherMaximum = 0.0;
	/**
	 * 
	 */

	private double pMarriageBlackMinimum = 0.0;
	/**
	 * 
	 */

	private double pMarriageBlackMaximum = 0.0;
	/**
	 * 
	 */

	private double pMarriageHispanicMinimum = 0.0;
	/**
	 * 
	 */

	private double pMarriageHispanicMaximum = 0.0;
	/**
	 * 
	 */

	private double pMarriageWhiteMinimum = 0.0;
	/**
	 * 
	 */

	private double pMarriageWhiteMaximum = 0.0;
	/**
	 * 
	 */

	private double pMarriageCategory1Minimum = 0.0;
	/**
	 * 
	 */

	private double pMarriageCategory1Maximum = 0.0;
	/**
	 * 
	 */

	private double pMarriageCategory3Minimum = 0.0;
	/**
	 * 
	 */

	private double pMarriageCategory3Maximum = 0.0;
	/**
	 * 
	 */

	private double pMarriageCategory2Minimum = 0.0;
	/**
	 * 
	 */

	private double pMarriageCategory2Maximum = 0.0;
	/**
	 * 
	 */

	private double pMarriageCategory4Minimum = 0.0;
	/**
	 * 
	 */

	private double pMarriageCategory4Maximum = 0.0;
	/**
	 * 
	 */

	private double pMarriageNotPregnantMinimum = 0.0;
	/**
	 * 
	 */

	private double pMarriageNotPregnantMaximum = 0.0;
	/**
	 * 
	 */

	private double pMarriagePregnantMinimum = 0.0;
	/**
	 * 
	 */

	private double pMarriagePregnantMaximum = 0.0;
	/**
	 * The size of each dimension.
	 */

	private int[] neighborhoodDimensions = new int[2];
	/**
	 * 
	 */

	private org.ascape.model.Scape neighborhood = null;
	/**
	 * 
	 */

	private org.ascape.model.Scape partners = null;
	/**
	 * Constructs a new Relationships And Pregnancy.
	 */

	public RelationshipsAndPregnancy() {
		createUniqueID();
		setNeighborhoodWidth(225);
		setNeighborhoodHeight(225);
	}

	org.eclipse.gef.EditPartFactory factory;

	org.eclipse.gef.EditPartFactory treeFactory;

	//todo, make this a useful value for evaluating compatibility of different versions of generated classes
	private static final long serialVersionUID = 89989998L;

	private String uniqueID;

	public String getUID() {
		return uniqueID;
	}

	public void createUniqueID() {
		//uniqueID = org.apache.commons.lang.RandomStringUtils.randomAlphanumeric(5);
	}

	/**
	 * Clones the agent, ensuring that a unique id is assigned.
	 */
	public Object clone() {
		try {
			RelationshipsAndPregnancy clone = (RelationshipsAndPregnancy) super
					.clone();
			clone.createUniqueID();
			return clone;
		} catch (Exception e) {
			throw new RuntimeException("Unexpected cloning exception: " + e);
		}
	}

	/**
	 * 
	 */

	private org.ascape.model.Scape adultList = null;
	/**
	 * 
	 */

	private org.ascape.model.Scape neighborhoodCellList = null;

	/**
	 * Gets the Adult property for Relationships And Pregnancy.
	 * @return 
	 */

	public org.ascape.model.Scape getAdult() {
		return adultList;
	}

	/**
	 * Sets the Adult property for Relationships And Pregnancy.
	 * 
	 * @param _adult the new Adult value
	 */

	public void setAdult(org.ascape.model.Scape _adult) {
		adultList = _adult;
	}
	/**
	 * Gets the Neighborhood Cell property for Relationships And Pregnancy.
	 * @return 
	 */

	public org.ascape.model.Scape getNeighborhoodCell() {
		return neighborhoodCellList;
	}

	/**
	 * Sets the Neighborhood Cell property for Relationships And Pregnancy.
	 * 
	 * @param _neighborhoodCell the new Neighborhood Cell value
	 */

	public void setNeighborhoodCell(org.ascape.model.Scape _neighborhoodCell) {
		neighborhoodCellList = _neighborhoodCell;
	}

	/**
	 * Creates the members of Relationships And Pregnancy. 
	 */
	public void createScape() {
		super.createScape();
		setName(toString());

		Adult adultProto = new Adult();
		adultList = new org.ascape.model.Scape();
		adultList.setName("Adult");
		adultList.setPrototypeAgent(adultProto);
		adultList.setExecutionOrder(org.ascape.model.Scape.RULE_ORDER);

		neighborhood = new org.ascape.model.Scape(
				new org.ascape.model.space.Array2DMoore());
		neighborhood.setPrototypeAgent(new NeighborhoodCell());
		neighborhood.setExtent(new org.ascape.model.space.Coordinate2DDiscrete(
				getNeighborhoodDimensions()));
		neighborhood.setName("Build Grid");
		((org.ascape.model.space.CollectionSpace) neighborhood.getSpace())
				.setPeriodic(false);
		add(neighborhood);
		org.ascape.model.Scape neighborhoodCellList = neighborhood;
		partners = new org.ascape.model.Scape(
				new org.ascape.model.space.Graph());
		partners.setName("Create Network");
		add(partners);

		add(adultList);

		adultProto.setHostScape(neighborhood);
		neighborhood.getRules().clear();

		adultList.addStatCollector(new org.ascape.util.data.StatCollectorCSA(
				"Adult Population") {
			private static final long serialVersionUID = 684614444640209893L;

			@SuppressWarnings("unused")
			public final boolean meetsCondition(Object object) {
				return true;
			}
		});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult Female Gender") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return GenderEnum.female == ((Adult) adult).getGender();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult Male Gender") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return GenderEnum.male == ((Adult) adult).getGender();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult 15 to 19 Age Group") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return AgeGroupEnum.years15to19 == ((Adult) adult)
								.getAgeGroup();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult 20 to 24 Age Group") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return AgeGroupEnum.years20to24 == ((Adult) adult)
								.getAgeGroup();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult 25 to 29 Age Group") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return AgeGroupEnum.years25to29 == ((Adult) adult)
								.getAgeGroup();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult 30 to 44 Age Group") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return AgeGroupEnum.years30to44 == ((Adult) adult)
								.getAgeGroup();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult NHS Education") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return EducationEnum.nHS == ((Adult) adult)
								.getEducation();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult PHS Education") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return EducationEnum.pHS == ((Adult) adult)
								.getEducation();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult HS Education") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return EducationEnum.hS == ((Adult) adult)
								.getEducation();
					}
				});

		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult is In Relationship") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return ((Adult) adult).isInRelationship();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult is not In Relationship") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return !((Adult) adult).isInRelationship();
					}
				});

		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult Married Marital Status") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return MaritalStatusEnum.married == ((Adult) adult)
								.getMaritalStatus();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult Single Marital Status") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return MaritalStatusEnum.single == ((Adult) adult)
								.getMaritalStatus();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult Divorced Marital Status") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return MaritalStatusEnum.divorced == ((Adult) adult)
								.getMaritalStatus();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult None Contraception Method") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return ContraceptionMethodEnum.none == ((Adult) adult)
								.getContraceptionMethod();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult Sterilized Contraception Method") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return ContraceptionMethodEnum.sterilized == ((Adult) adult)
								.getContraceptionMethod();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult Pill Contraception Method") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return ContraceptionMethodEnum.pill == ((Adult) adult)
								.getContraceptionMethod();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult Condom Medium Intender Contraception Method") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return ContraceptionMethodEnum.condomMediumIntender == ((Adult) adult)
								.getContraceptionMethod();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult Condom High Intender Contraception Method") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return ContraceptionMethodEnum.condomHighIntender == ((Adult) adult)
								.getContraceptionMethod();
					}
				});

		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult is Rhythm Method User") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return ((Adult) adult).isRhythmMethodUser();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult is not Rhythm Method User") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return !((Adult) adult).isRhythmMethodUser();
					}
				});

		adultList.addStatCollector(new org.ascape.util.data.StatCollectorCSAMM(
				"Adult P Relationship Initial") {
			private static final long serialVersionUID = 6846144446402098985L;
			public final double getValue(Object adult) {
				return ((Adult) adult).getPRelationshipInitial();
			}
		});

		adultList.addStatCollector(new org.ascape.util.data.StatCollectorCSAMM(
				"Adult P End Relationship") {
			private static final long serialVersionUID = 6846144446402098985L;
			public final double getValue(Object adult) {
				return ((Adult) adult).getPEndRelationship();
			}
		});

		adultList.addStatCollector(new org.ascape.util.data.StatCollectorCSAMM(
				"Adult P Marriage") {
			private static final long serialVersionUID = 6846144446402098985L;
			public final double getValue(Object adult) {
				return ((Adult) adult).getPMarriage();
			}
		});

		adultList.addStatCollector(new org.ascape.util.data.StatCollectorCSAMM(
				"Adult P Divorce") {
			private static final long serialVersionUID = 6846144446402098985L;
			public final double getValue(Object adult) {
				return ((Adult) adult).getPDivorce();
			}
		});

		adultList.addStatCollector(new org.ascape.util.data.StatCollectorCSAMM(
				"Adult P Sex") {
			private static final long serialVersionUID = 6846144446402098985L;
			public final double getValue(Object adult) {
				return ((Adult) adult).getPSex();
			}
		});

		adultList.addStatCollector(new org.ascape.util.data.StatCollectorCSAMM(
				"Adult P Sex Initial") {
			private static final long serialVersionUID = 6846144446402098985L;
			public final double getValue(Object adult) {
				return ((Adult) adult).getPSexInitial();
			}
		});

		adultList.addStatCollector(new org.ascape.util.data.StatCollectorCSAMM(
				"Adult Day in Cycle") {
			private static final long serialVersionUID = 6846144446402098985L;
			public final double getValue(Object adult) {
				return ((Adult) adult).getDayinCycle();
			}
		});

		adultList.addStatCollector(new org.ascape.util.data.StatCollectorCSAMM(
				"Adult Sex Count in Lifetime") {
			private static final long serialVersionUID = 6846144446402098985L;
			public final double getValue(Object adult) {
				return ((Adult) adult).getSexCountinLifetime();
			}
		});

		adultList.addStatCollector(new org.ascape.util.data.StatCollectorCSAMM(
				"Adult Days in Current Relationship") {
			private static final long serialVersionUID = 6846144446402098985L;
			public final double getValue(Object adult) {
				return ((Adult) adult).getDaysinCurrentRelationship();
			}
		});

		adultList.addStatCollector(new org.ascape.util.data.StatCollectorCSAMM(
				"Adult Sex Partners in Lifetime") {
			private static final long serialVersionUID = 6846144446402098985L;
			public final double getValue(Object adult) {
				return ((Adult) adult).getSexPartnersinLifetime();
			}
		});

		adultList.addStatCollector(new org.ascape.util.data.StatCollectorCSAMM(
				"Adult Pregnancies in Lifetime") {
			private static final long serialVersionUID = 6846144446402098985L;
			public final double getValue(Object adult) {
				return ((Adult) adult).getPregnanciesinLifetime();
			}
		});

		adultList.addStatCollector(new org.ascape.util.data.StatCollectorCSAMM(
				"Adult Births in Lifetime") {
			private static final long serialVersionUID = 6846144446402098985L;
			public final double getValue(Object adult) {
				return ((Adult) adult).getBirthsinLifetime();
			}
		});

		adultList.addStatCollector(new org.ascape.util.data.StatCollectorCSAMM(
				"Adult Abortions in Lifetime") {
			private static final long serialVersionUID = 6846144446402098985L;
			public final double getValue(Object adult) {
				return ((Adult) adult).getAbortionsinLifetime();
			}
		});

		adultList.addStatCollector(new org.ascape.util.data.StatCollectorCSAMM(
				"Adult Miscarriages in Lifetime") {
			private static final long serialVersionUID = 6846144446402098985L;
			public final double getValue(Object adult) {
				return ((Adult) adult).getMiscarriagesinLifetime();
			}
		});

		adultList.addStatCollector(new org.ascape.util.data.StatCollectorCSAMM(
				"Adult Poor Births in Lifetime") {
			private static final long serialVersionUID = 6846144446402098985L;
			public final double getValue(Object adult) {
				return ((Adult) adult).getPoorBirthsinLifetime();
			}
		});

		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult Other Race") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return RaceEnum.other == ((Adult) adult).getRace();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult Black Race") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return RaceEnum.black == ((Adult) adult).getRace();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult Hispanic Race") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return RaceEnum.hispanic == ((Adult) adult).getRace();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult White Race") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return RaceEnum.white == ((Adult) adult).getRace();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult Category 1 SES") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return SESEnum.cat1 == ((Adult) adult).getSES();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult Category 3 SES") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return SESEnum.cat3 == ((Adult) adult).getSES();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult Category 2 SES") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return SESEnum.cat2 == ((Adult) adult).getSES();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult Category 4 SES") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return SESEnum.category4 == ((Adult) adult).getSES();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult Very Low Frequency Coital Behavior Type") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return CoitalBehaviorTypeEnum.veryLowFrequency == ((Adult) adult)
								.getCoitalBehaviorType();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult High Frequency Coital Behavior Type") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return CoitalBehaviorTypeEnum.highFrequency == ((Adult) adult)
								.getCoitalBehaviorType();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult Moderate Frequency Coital Behavior Type") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return CoitalBehaviorTypeEnum.moderateFrequency == ((Adult) adult)
								.getCoitalBehaviorType();
					}
				});

		adultList.addStatCollector(new org.ascape.util.data.StatCollectorCSAMM(
				"Adult Married Code") {
			private static final long serialVersionUID = 6846144446402098985L;
			public final double getValue(Object adult) {
				return ((Adult) adult).getMarriedCode();
			}
		});

		adultList.addStatCollector(new org.ascape.util.data.StatCollectorCSAMM(
				"Adult Unmarried Code") {
			private static final long serialVersionUID = 6846144446402098985L;
			public final double getValue(Object adult) {
				return ((Adult) adult).getUnmarriedCode();
			}
		});

		adultList.addStatCollector(new org.ascape.util.data.StatCollectorCSAMM(
				"Adult Male Code") {
			private static final long serialVersionUID = 6846144446402098985L;
			public final double getValue(Object adult) {
				return ((Adult) adult).getMaleCode();
			}
		});

		adultList.addStatCollector(new org.ascape.util.data.StatCollectorCSAMM(
				"Adult Female Code") {
			private static final long serialVersionUID = 6846144446402098985L;
			public final double getValue(Object adult) {
				return ((Adult) adult).getFemaleCode();
			}
		});

		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult Partner Sterilized Partner Contraception Method") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return PartnerContraceptionMethodEnum.partnerSterilized == ((Adult) adult)
								.getPartnerContraceptionMethod();
					}
				});
		adultList
				.addStatCollector(new org.ascape.util.data.StatCollectorCondCSAMM(
						"Adult Other Contraception Partner Contraception Method") {
					private static final long serialVersionUID = 6846144446402098985L;
					public final boolean meetsCondition(Object adult) {
						return PartnerContraceptionMethodEnum.otherContraception == ((Adult) adult)
								.getPartnerContraceptionMethod();
					}
				});

		adultList.addStatCollector(new org.ascape.util.data.StatCollectorCSAMM(
				"Adult Sterilization Choices") {
			private static final long serialVersionUID = 6846144446402098985L;
			public final double getValue(Object adult) {
				return ((Adult) adult).getSterilizationChoices();
			}
		});

		adultList.addInitialRule(new org.ascape.model.rule.Rule(
				"Initialize Location") {
			private static final long serialVersionUID = 6846144446402098982L;
			public void execute(org.ascape.model.Agent a) {
				((edu.brook.ccf.rpm.Adult) a).initializeLocation();
			}
		});

		adultList.addInitialRule(new org.ascape.model.rule.Rule(
				"Initialize Behavior Values") {
			private static final long serialVersionUID = 6846144446402098982L;
			public void execute(org.ascape.model.Agent a) {
				((edu.brook.ccf.rpm.Adult) a).initializeBehaviorValues();
			}
		});

		adultList.addInitialRule(new org.ascape.model.rule.Rule(
				"Initialize Ages") {
			private static final long serialVersionUID = 6846144446402098982L;
			public void execute(org.ascape.model.Agent a) {
				((edu.brook.ccf.rpm.Adult) a).initializeAges();
			}
		});

		adultList.addInitialRule(new org.ascape.model.rule.Rule(
				"Initialize Marital State") {
			private static final long serialVersionUID = 6846144446402098982L;
			public void execute(org.ascape.model.Agent a) {
				((edu.brook.ccf.rpm.Adult) a).initializeMaritalState();
			}
		});
		adultList.addRule(new org.ascape.model.rule.Rule("Movement") {
			private static final long serialVersionUID = 6846144446402098981L;
			public void execute(org.ascape.model.Agent a) {
				((edu.brook.ccf.rpm.Adult) a).movement();
			}
		});
		adultList.addRule(new org.ascape.model.rule.Rule("Update Dates") {
			private static final long serialVersionUID = 6846144446402098981L;
			public void execute(org.ascape.model.Agent a) {
				((edu.brook.ccf.rpm.Adult) a).updateDates();
			}
		});
		adultList
				.addRule(new org.ascape.model.rule.Rule("Update Relationship") {
					private static final long serialVersionUID = 6846144446402098981L;
					public void execute(org.ascape.model.Agent a) {
						((edu.brook.ccf.rpm.Adult) a).updateRelationship();
					}
				});
		adultList.addRule(new org.ascape.model.rule.Rule("Seek Partner") {
			private static final long serialVersionUID = 6846144446402098981L;
			public void execute(org.ascape.model.Agent a) {
				((edu.brook.ccf.rpm.Adult) a).seekPartner();
			}
		});
		adultList.addRule(new org.ascape.model.rule.Rule("Pregnancy Outcome") {
			private static final long serialVersionUID = 6846144446402098981L;
			public void execute(org.ascape.model.Agent a) {
				((edu.brook.ccf.rpm.Adult) a).pregnancyOutcome();
			}
		});
		adultList.addRule(new org.ascape.model.rule.Rule("Sex Potential") {
			private static final long serialVersionUID = 6846144446402098981L;
			public void execute(org.ascape.model.Agent a) {
				((edu.brook.ccf.rpm.Adult) a).sexPotential();
			}
		});

		(new edu.brook.ccf.rpm.RPPFileLoader()).load(this);

		new edu.brook.ccf.rpm.RPPFileOutput().setup(this);

	}

	/**
	 * Creates UI views for Relationships And Pregnancy.
	 */
	public void createGraphicViews() {
		super.createGraphicViews();
		org.ascape.view.vis.ChartView chart = new org.ascape.view.vis.ChartView();
		org.eclipse.draw2d.Graphics dummyGraphics = new org.eclipse.draw2d.SWTGraphics(
				new org.eclipse.swt.graphics.GC(
						new org.eclipse.swt.graphics.Image(
								org.eclipse.ui.PlatformUI.getWorkbench()
										.getDisplay(), 10, 10)));

		org.ascape.model.Scape adultScape = new RelationshipsAndPregnancy();
		adultScape.setRunner(new org.ascape.runtime.NonGraphicRunner());
		Adult adult = new Adult() {
			public void requestUpdate() {
			}
		};
		adultScape.add(adult);

		org.ascape.model.HostCell adultHost = new org.ascape.model.HostCell() {
			public void requestUpdate() {
			}
		};
		adultHost.setOccupant((org.ascape.model.CellOccupant) adult);
		org.eclipse.swt.graphics.Color adultLastColor = dummyGraphics
				.getForegroundColor();
		org.eclipse.swt.graphics.Color adultNewColor = dummyGraphics
				.getForegroundColor();

		GenderStyleGraphics genderStyle = new GenderStyleGraphics();

		adult.setGender(GenderEnum.female);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult Female Gender", adultNewColor);

		adult.setGender(GenderEnum.male);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult Male Gender", adultNewColor);

		adult.setAgeGroup(AgeGroupEnum.years15to19);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult 15 to 19 Age Group", adultNewColor);

		adult.setAgeGroup(AgeGroupEnum.years20to24);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult 20 to 24 Age Group", adultNewColor);

		adult.setAgeGroup(AgeGroupEnum.years25to29);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult 25 to 29 Age Group", adultNewColor);

		adult.setAgeGroup(AgeGroupEnum.years30to44);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult 30 to 44 Age Group", adultNewColor);

		adult.setEducation(EducationEnum.nHS);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult NHS Education", adultNewColor);

		adult.setEducation(EducationEnum.pHS);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult PHS Education", adultNewColor);

		adult.setEducation(EducationEnum.hS);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult HS Education", adultNewColor);

		adult.setInRelationship(true);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult is In Relationship", adultNewColor);

		adult.setInRelationship(false);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult is not In Relationship", adultNewColor);

		adult.setMaritalStatus(MaritalStatusEnum.married);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult Married Marital Status", adultNewColor);

		adult.setMaritalStatus(MaritalStatusEnum.single);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult Single Marital Status", adultNewColor);

		adult.setMaritalStatus(MaritalStatusEnum.divorced);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult Divorced Marital Status", adultNewColor);

		adult.setContraceptionMethod(ContraceptionMethodEnum.none);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult None Contraception Method", adultNewColor);

		adult.setContraceptionMethod(ContraceptionMethodEnum.sterilized);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult Sterilized Contraception Method",
				adultNewColor);

		adult.setContraceptionMethod(ContraceptionMethodEnum.pill);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult Pill Contraception Method", adultNewColor);

		adult
				.setContraceptionMethod(ContraceptionMethodEnum.condomMediumIntender);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries(
				"Count Adult Condom Medium Intender Contraception Method",
				adultNewColor);

		adult
				.setContraceptionMethod(ContraceptionMethodEnum.condomHighIntender);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries(
				"Count Adult Condom High Intender Contraception Method",
				adultNewColor);

		adult.setRhythmMethodUser(true);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult is Rhythm Method User", adultNewColor);

		adult.setRhythmMethodUser(false);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult is not Rhythm Method User", adultNewColor);

		adult.setRace(RaceEnum.other);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult Other Race", adultNewColor);

		adult.setRace(RaceEnum.black);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult Black Race", adultNewColor);

		adult.setRace(RaceEnum.hispanic);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult Hispanic Race", adultNewColor);

		adult.setRace(RaceEnum.white);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult White Race", adultNewColor);

		adult.setSES(SESEnum.cat1);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult Category 1 SES", adultNewColor);

		adult.setSES(SESEnum.cat3);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult Category 3 SES", adultNewColor);

		adult.setSES(SESEnum.cat2);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult Category 2 SES", adultNewColor);

		adult.setSES(SESEnum.category4);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult Category 4 SES", adultNewColor);

		adult.setCoitalBehaviorType(CoitalBehaviorTypeEnum.veryLowFrequency);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult Very Low Frequency Coital Behavior Type",
				adultNewColor);

		adult.setCoitalBehaviorType(CoitalBehaviorTypeEnum.highFrequency);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult High Frequency Coital Behavior Type",
				adultNewColor);

		adult.setCoitalBehaviorType(CoitalBehaviorTypeEnum.moderateFrequency);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult Moderate Frequency Coital Behavior Type",
				adultNewColor);

		adult
				.setPartnerContraceptionMethod(PartnerContraceptionMethodEnum.partnerSterilized);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries(
				"Count Adult Partner Sterilized Partner Contraception Method",
				adultNewColor);

		adult
				.setPartnerContraceptionMethod(PartnerContraceptionMethodEnum.otherContraception);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries(
				"Count Adult Other Contraception Partner Contraception Method",
				adultNewColor);

		adult.setPregnancyStatus(PregnancyStatusEnum.notPregnant);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult Not Pregnant Pregnancy Status",
				adultNewColor);

		adult.setPregnancyStatus(PregnancyStatusEnum.pregnant);
		genderStyle.draw(dummyGraphics, adultHost, 4, 4);
		adultNewColor = dummyGraphics.getForegroundColor();
		if (adultNewColor == adultLastColor) {
			adultNewColor = org.ascape.util.vis.ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		} else {
			adultLastColor = adultNewColor;
		}
		chart.addSeries("Count Adult Pregnant Pregnancy Status", adultNewColor);

		org.ascape.model.Scape neighborhoodCellScape = new RelationshipsAndPregnancy();
		neighborhoodCellScape
				.setRunner(new org.ascape.runtime.NonGraphicRunner());
		NeighborhoodCell neighborhoodCell = new NeighborhoodCell() {
			public void requestUpdate() {
			}
		};
		neighborhoodCellScape.add(neighborhoodCell);

		NeighborhoodCellStyle2DGraphics neighborhoodCellStyle2D = new NeighborhoodCellStyle2DGraphics();

		addView(chart);
		addView(new org.ascape.view.vis.GEFView());
	}

	public void scapeSetup(org.ascape.model.event.ScapeEvent scapeEvent) {
		//Set the size of the scape populations, e.g. for mutable scapes that need to have their size reset

	}

	public org.eclipse.gef.EditPartFactory getEditPartFactory() {
		if (factory == null) {
			factory = new RelationshipsAndPregnancyPartFactory();
		}
		return factory;
	}

	public org.eclipse.gef.EditPartFactory getEditPartTreeFactory() {
		if (treeFactory == null) {
			treeFactory = new org.eclipse.amp.escape.ascape.adapt.AscapePartTreeFactory();
		}
		return treeFactory;
	}

	public static void main(String[] args) {
		(new org.ascape.runtime.NonGraphicRunner())
				.openInstance("edu.brook.ccf.rpm.RelationshipsAndPregnancy");
	}

	/**
	 * .
	 */

	public void loadfromFile() {

	}

	/**
	 * .
	 */

	public void outputData() {

	}

	/**
	 * Gets the Adult Count property for Relationships And Pregnancy.
	 * @return The number of adults to create.
	 */

	public int getAdultCount() {
		return adultCount;
	}

	/**
	 * Sets the Adult Count property for Relationships And Pregnancy.
	 * The number of adults to create.
	 * @param _adultCount the new Adult Count value
	 */

	public void setAdultCount(int _adultCount) {
		adultCount = _adultCount;
	}
	/**
	 * Gets the Minimum Age property for Relationships And Pregnancy.
	 * @return 
	 */

	public int getMinimumAge() {
		return minimumAge;
	}

	/**
	 * Sets the Minimum Age property for Relationships And Pregnancy.
	 * 
	 * @param _minimumAge the new Minimum Age value
	 */

	public void setMinimumAge(int _minimumAge) {
		minimumAge = _minimumAge;
	}
	/**
	 * Gets the Typical Abortion Period Start property for Relationships And Pregnancy.
	 * @return The first day of the period of time in which typical elective abortions occur. Note that this is the actual day following conception, not the date as usually given from start of last cycle. 
	 */

	public int getTypicalAbortionPeriodStart() {
		return typicalAbortionPeriodStart;
	}

	/**
	 * Sets the Typical Abortion Period Start property for Relationships And Pregnancy.
	 * The first day of the period of time in which typical elective abortions occur. Note that this is the actual day following conception, not the date as usually given from start of last cycle. 
	 * @param _typicalAbortionPeriodStart the new Typical Abortion Period Start value
	 */

	public void setTypicalAbortionPeriodStart(int _typicalAbortionPeriodStart) {
		typicalAbortionPeriodStart = _typicalAbortionPeriodStart;
	}
	/**
	 * Gets the Typical Abortion Period End property for Relationships And Pregnancy.
	 * @return The last day of the period of time in which typical elective abortions occur. Note that this is the actual day following conception, not the date as usually given from start of last cycle. 
	 */

	public int getTypicalAbortionPeriodEnd() {
		return typicalAbortionPeriodEnd;
	}

	/**
	 * Sets the Typical Abortion Period End property for Relationships And Pregnancy.
	 * The last day of the period of time in which typical elective abortions occur. Note that this is the actual day following conception, not the date as usually given from start of last cycle. 
	 * @param _typicalAbortionPeriodEnd the new Typical Abortion Period End value
	 */

	public void setTypicalAbortionPeriodEnd(int _typicalAbortionPeriodEnd) {
		typicalAbortionPeriodEnd = _typicalAbortionPeriodEnd;
	}
	/**
	 * Gets the Typical Birth Period Start property for Relationships And Pregnancy.
	 * @return The first day of the period of time in which typical live briths occur. Note that this is the actual day following conception, not the date as usually given from start of last cycle. 
	 */

	public int getTypicalBirthPeriodStart() {
		return typicalBirthPeriodStart;
	}

	/**
	 * Sets the Typical Birth Period Start property for Relationships And Pregnancy.
	 * The first day of the period of time in which typical live briths occur. Note that this is the actual day following conception, not the date as usually given from start of last cycle. 
	 * @param _typicalBirthPeriodStart the new Typical Birth Period Start value
	 */

	public void setTypicalBirthPeriodStart(int _typicalBirthPeriodStart) {
		typicalBirthPeriodStart = _typicalBirthPeriodStart;
	}
	/**
	 * Gets the Typical Birth Period End property for Relationships And Pregnancy.
	 * @return The last day of the period of time in which typical live briths occur. Note that this is the actual day following conception, not the date as usually given from start of last cycle. 
	 */

	public int getTypicalBirthPeriodEnd() {
		return typicalBirthPeriodEnd;
	}

	/**
	 * Sets the Typical Birth Period End property for Relationships And Pregnancy.
	 * The last day of the period of time in which typical live briths occur. Note that this is the actual day following conception, not the date as usually given from start of last cycle. 
	 * @param _typicalBirthPeriodEnd the new Typical Birth Period End value
	 */

	public void setTypicalBirthPeriodEnd(int _typicalBirthPeriodEnd) {
		typicalBirthPeriodEnd = _typicalBirthPeriodEnd;
	}
	/**
	 * Gets the Fecundity by Day in Cycle property for Relationships And Pregnancy.
	 * @return The probability that a woman having unprotected sex (not using contraception) will concieve as a function of the day in her mentural cycle.
	 */

	public double[] getFecunditybyDayinCycle() {
		return fecunditybyDayinCycle;
	}

	/**
	 * Sets the Fecundity by Day in Cycle property for Relationships And Pregnancy.
	 * The probability that a woman having unprotected sex (not using contraception) will concieve as a function of the day in her mentural cycle.
	 * @param _fecunditybyDayinCycle the new Fecundity by Day in Cycle value
	 */

	public void setFecunditybyDayinCycle(double[] _fecunditybyDayinCycle) {
		fecunditybyDayinCycle = _fecunditybyDayinCycle;
	}
	/**
	 * Gets the Condom Failure Rate property for Relationships And Pregnancy.
	 * @return The rate at which condoms fail to prevent a pregnancy from occuring. (1 - efficacy.)
	 */

	public double getCondomFailureRate() {
		return condomFailureRate;
	}

	/**
	 * Sets the Condom Failure Rate property for Relationships And Pregnancy.
	 * The rate at which condoms fail to prevent a pregnancy from occuring. (1 - efficacy.)
	 * @param _condomFailureRate the new Condom Failure Rate value
	 */

	public void setCondomFailureRate(double _condomFailureRate) {
		condomFailureRate = _condomFailureRate;
	}
	/**
	 * Gets the Pill Failure Rate property for Relationships And Pregnancy.
	 * @return The rate at which oral contraception fails to prevent a pregnancy from occuring. (1 - efficacy.)
	 */

	public double getPillFailureRate() {
		return pillFailureRate;
	}

	/**
	 * Sets the Pill Failure Rate property for Relationships And Pregnancy.
	 * The rate at which oral contraception fails to prevent a pregnancy from occuring. (1 - efficacy.)
	 * @param _pillFailureRate the new Pill Failure Rate value
	 */

	public void setPillFailureRate(double _pillFailureRate) {
		pillFailureRate = _pillFailureRate;
	}
	/**
	 * Gets the Pill Condom Failure Rate property for Relationships And Pregnancy.
	 * @return The rate at which condom and oral contraception used together fail to prevent a given pregnancy from occuring. (1 - efficacy.)
	 */

	public double getPillCondomFailureRate() {
		return pillCondomFailureRate;
	}

	/**
	 * Sets the Pill Condom Failure Rate property for Relationships And Pregnancy.
	 * The rate at which condom and oral contraception used together fail to prevent a given pregnancy from occuring. (1 - efficacy.)
	 * @param _pillCondomFailureRate the new Pill Condom Failure Rate value
	 */

	public void setPillCondomFailureRate(double _pillCondomFailureRate) {
		pillCondomFailureRate = _pillCondomFailureRate;
	}
	/**
	 * Gets the Fecundity By Age property for Relationships And Pregnancy.
	 * @return 
	 */

	public double[] getFecundityByAge() {
		return fecundityByAge;
	}

	/**
	 * Sets the Fecundity By Age property for Relationships And Pregnancy.
	 * 
	 * @param _fecundityByAge the new Fecundity By Age value
	 */

	public void setFecundityByAge(double[] _fecundityByAge) {
		fecundityByAge = _fecundityByAge;
	}
	/**
	 * Gets the Walk Toward Age property for Relationships And Pregnancy.
	 * @return 
	 */

	public int getWalkTowardAge() {
		return walkTowardAge;
	}

	/**
	 * Sets the Walk Toward Age property for Relationships And Pregnancy.
	 * 
	 * @param _walkTowardAge the new Walk Toward Age value
	 */

	public void setWalkTowardAge(int _walkTowardAge) {
		walkTowardAge = _walkTowardAge;
	}
	/**
	 * Gets the Rhythm Method Bias for Day property for Relationships And Pregnancy.
	 * @return Given all other factors, the effect of a timing strategy on intercourse proclivity as a function of day of mentural cycle.
	 */

	public double[] getRhythmMethodBiasforDay() {
		return rhythmMethodBiasforDay;
	}

	/**
	 * Sets the Rhythm Method Bias for Day property for Relationships And Pregnancy.
	 * Given all other factors, the effect of a timing strategy on intercourse proclivity as a function of day of mentural cycle.
	 * @param _rhythmMethodBiasforDay the new Rhythm Method Bias for Day value
	 */

	public void setRhythmMethodBiasforDay(double[] _rhythmMethodBiasforDay) {
		rhythmMethodBiasforDay = _rhythmMethodBiasforDay;
	}
	/**
	 * Gets the Agent Vision property for Relationships And Pregnancy.
	 * @return 
	 */

	public int getAgentVision() {
		return agentVision;
	}

	/**
	 * Sets the Agent Vision property for Relationships And Pregnancy.
	 * 
	 * @param _agentVision the new Agent Vision value
	 */

	public void setAgentVision(int _agentVision) {
		agentVision = _agentVision;
	}
	/**
	 * Gets the P Miscarriage Married Factor Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageMarriedFactorBase() {
		return pMiscarriageMarriedFactorBase;
	}

	/**
	 * Sets the P Miscarriage Married Factor Base property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageMarriedFactorBase the new P Miscarriage Married Factor Base value
	 */

	public void setPMiscarriageMarriedFactorBase(
			double _pMiscarriageMarriedFactorBase) {
		pMiscarriageMarriedFactorBase = _pMiscarriageMarriedFactorBase;
	}
	/**
	 * Gets the P Miscarriage Married 15 to 19 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageMarried15to19Factor() {
		return pMiscarriageMarried15to19Factor;
	}

	/**
	 * Sets the P Miscarriage Married 15 to 19 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageMarried15to19Factor the new P Miscarriage Married 15 to 19 Factor value
	 */

	public void setPMiscarriageMarried15to19Factor(
			double _pMiscarriageMarried15to19Factor) {
		pMiscarriageMarried15to19Factor = _pMiscarriageMarried15to19Factor;
	}
	/**
	 * Gets the P Miscarriage Married 20 to 24 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageMarried20to24Factor() {
		return pMiscarriageMarried20to24Factor;
	}

	/**
	 * Sets the P Miscarriage Married 20 to 24 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageMarried20to24Factor the new P Miscarriage Married 20 to 24 Factor value
	 */

	public void setPMiscarriageMarried20to24Factor(
			double _pMiscarriageMarried20to24Factor) {
		pMiscarriageMarried20to24Factor = _pMiscarriageMarried20to24Factor;
	}
	/**
	 * Gets the P Miscarriage Married 25 to 29 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageMarried25to29Factor() {
		return pMiscarriageMarried25to29Factor;
	}

	/**
	 * Sets the P Miscarriage Married 25 to 29 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageMarried25to29Factor the new P Miscarriage Married 25 to 29 Factor value
	 */

	public void setPMiscarriageMarried25to29Factor(
			double _pMiscarriageMarried25to29Factor) {
		pMiscarriageMarried25to29Factor = _pMiscarriageMarried25to29Factor;
	}
	/**
	 * Gets the P Miscarriage Married 30 to 44 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageMarried30to44Factor() {
		return pMiscarriageMarried30to44Factor;
	}

	/**
	 * Sets the P Miscarriage Married 30 to 44 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageMarried30to44Factor the new P Miscarriage Married 30 to 44 Factor value
	 */

	public void setPMiscarriageMarried30to44Factor(
			double _pMiscarriageMarried30to44Factor) {
		pMiscarriageMarried30to44Factor = _pMiscarriageMarried30to44Factor;
	}
	/**
	 * Gets the P Miscarriage Married NHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageMarriedNHSFactor() {
		return pMiscarriageMarriedNHSFactor;
	}

	/**
	 * Sets the P Miscarriage Married NHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageMarriedNHSFactor the new P Miscarriage Married NHS Factor value
	 */

	public void setPMiscarriageMarriedNHSFactor(
			double _pMiscarriageMarriedNHSFactor) {
		pMiscarriageMarriedNHSFactor = _pMiscarriageMarriedNHSFactor;
	}
	/**
	 * Gets the P Miscarriage Married PHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageMarriedPHSFactor() {
		return pMiscarriageMarriedPHSFactor;
	}

	/**
	 * Sets the P Miscarriage Married PHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageMarriedPHSFactor the new P Miscarriage Married PHS Factor value
	 */

	public void setPMiscarriageMarriedPHSFactor(
			double _pMiscarriageMarriedPHSFactor) {
		pMiscarriageMarriedPHSFactor = _pMiscarriageMarriedPHSFactor;
	}
	/**
	 * Gets the P Miscarriage Married HS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageMarriedHSFactor() {
		return pMiscarriageMarriedHSFactor;
	}

	/**
	 * Sets the P Miscarriage Married HS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageMarriedHSFactor the new P Miscarriage Married HS Factor value
	 */

	public void setPMiscarriageMarriedHSFactor(
			double _pMiscarriageMarriedHSFactor) {
		pMiscarriageMarriedHSFactor = _pMiscarriageMarriedHSFactor;
	}
	/**
	 * Gets the P Miscarriage Married Other Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageMarriedOtherFactor() {
		return pMiscarriageMarriedOtherFactor;
	}

	/**
	 * Sets the P Miscarriage Married Other Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageMarriedOtherFactor the new P Miscarriage Married Other Factor value
	 */

	public void setPMiscarriageMarriedOtherFactor(
			double _pMiscarriageMarriedOtherFactor) {
		pMiscarriageMarriedOtherFactor = _pMiscarriageMarriedOtherFactor;
	}
	/**
	 * Gets the P Miscarriage Married Black Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageMarriedBlackFactor() {
		return pMiscarriageMarriedBlackFactor;
	}

	/**
	 * Sets the P Miscarriage Married Black Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageMarriedBlackFactor the new P Miscarriage Married Black Factor value
	 */

	public void setPMiscarriageMarriedBlackFactor(
			double _pMiscarriageMarriedBlackFactor) {
		pMiscarriageMarriedBlackFactor = _pMiscarriageMarriedBlackFactor;
	}
	/**
	 * Gets the P Miscarriage Married Hispanic Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageMarriedHispanicFactor() {
		return pMiscarriageMarriedHispanicFactor;
	}

	/**
	 * Sets the P Miscarriage Married Hispanic Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageMarriedHispanicFactor the new P Miscarriage Married Hispanic Factor value
	 */

	public void setPMiscarriageMarriedHispanicFactor(
			double _pMiscarriageMarriedHispanicFactor) {
		pMiscarriageMarriedHispanicFactor = _pMiscarriageMarriedHispanicFactor;
	}
	/**
	 * Gets the P Miscarriage Married White Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageMarriedWhiteFactor() {
		return pMiscarriageMarriedWhiteFactor;
	}

	/**
	 * Sets the P Miscarriage Married White Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageMarriedWhiteFactor the new P Miscarriage Married White Factor value
	 */

	public void setPMiscarriageMarriedWhiteFactor(
			double _pMiscarriageMarriedWhiteFactor) {
		pMiscarriageMarriedWhiteFactor = _pMiscarriageMarriedWhiteFactor;
	}
	/**
	 * Gets the P Miscarriage Married Category 1 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageMarriedCategory1Factor() {
		return pMiscarriageMarriedCategory1Factor;
	}

	/**
	 * Sets the P Miscarriage Married Category 1 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageMarriedCategory1Factor the new P Miscarriage Married Category 1 Factor value
	 */

	public void setPMiscarriageMarriedCategory1Factor(
			double _pMiscarriageMarriedCategory1Factor) {
		pMiscarriageMarriedCategory1Factor = _pMiscarriageMarriedCategory1Factor;
	}
	/**
	 * Gets the P Miscarriage Married Category 3 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageMarriedCategory3Factor() {
		return pMiscarriageMarriedCategory3Factor;
	}

	/**
	 * Sets the P Miscarriage Married Category 3 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageMarriedCategory3Factor the new P Miscarriage Married Category 3 Factor value
	 */

	public void setPMiscarriageMarriedCategory3Factor(
			double _pMiscarriageMarriedCategory3Factor) {
		pMiscarriageMarriedCategory3Factor = _pMiscarriageMarriedCategory3Factor;
	}
	/**
	 * Gets the P Miscarriage Married Category 2 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageMarriedCategory2Factor() {
		return pMiscarriageMarriedCategory2Factor;
	}

	/**
	 * Sets the P Miscarriage Married Category 2 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageMarriedCategory2Factor the new P Miscarriage Married Category 2 Factor value
	 */

	public void setPMiscarriageMarriedCategory2Factor(
			double _pMiscarriageMarriedCategory2Factor) {
		pMiscarriageMarriedCategory2Factor = _pMiscarriageMarriedCategory2Factor;
	}
	/**
	 * Gets the P Miscarriage Married Category 4 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageMarriedCategory4Factor() {
		return pMiscarriageMarriedCategory4Factor;
	}

	/**
	 * Sets the P Miscarriage Married Category 4 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageMarriedCategory4Factor the new P Miscarriage Married Category 4 Factor value
	 */

	public void setPMiscarriageMarriedCategory4Factor(
			double _pMiscarriageMarriedCategory4Factor) {
		pMiscarriageMarriedCategory4Factor = _pMiscarriageMarriedCategory4Factor;
	}
	/**
	 * Gets the Input Data File property for Relationships And Pregnancy.
	 * @return 
	 */

	public String getInputDataFile() {
		return inputDataFile;
	}

	/**
	 * Sets the Input Data File property for Relationships And Pregnancy.
	 * 
	 * @param _inputDataFile the new Input Data File value
	 */

	public void setInputDataFile(String _inputDataFile) {
		inputDataFile = _inputDataFile;
	}
	/**
	 * Gets the P Relationship End Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPRelationshipEndMinimum() {
		return pRelationshipEndMinimum;
	}

	/**
	 * Sets the P Relationship End Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pRelationshipEndMinimum the new P Relationship End Minimum value
	 */

	public void setPRelationshipEndMinimum(double _pRelationshipEndMinimum) {
		pRelationshipEndMinimum = _pRelationshipEndMinimum;
	}
	/**
	 * Gets the P Relationship End Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPRelationshipEndMaximum() {
		return pRelationshipEndMaximum;
	}

	/**
	 * Sets the P Relationship End Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pRelationshipEndMaximum the new P Relationship End Maximum value
	 */

	public void setPRelationshipEndMaximum(double _pRelationshipEndMaximum) {
		pRelationshipEndMaximum = _pRelationshipEndMaximum;
	}
	/**
	 * Gets the P Relationship Begin Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPRelationshipBeginMinimum() {
		return pRelationshipBeginMinimum;
	}

	/**
	 * Sets the P Relationship Begin Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pRelationshipBeginMinimum the new P Relationship Begin Minimum value
	 */

	public void setPRelationshipBeginMinimum(double _pRelationshipBeginMinimum) {
		pRelationshipBeginMinimum = _pRelationshipBeginMinimum;
	}
	/**
	 * Gets the P Relationship Begin Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPRelationshipBeginMaximum() {
		return pRelationshipBeginMaximum;
	}

	/**
	 * Sets the P Relationship Begin Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pRelationshipBeginMaximum the new P Relationship Begin Maximum value
	 */

	public void setPRelationshipBeginMaximum(double _pRelationshipBeginMaximum) {
		pRelationshipBeginMaximum = _pRelationshipBeginMaximum;
	}
	/**
	 * Gets the Coital Frequency Initial Modification property for Relationships And Pregnancy.
	 * @return The effect on likelihood of sex given that the couple has never had sex. For example, if an Adult's P Sex is 0.1 and this value is 0.2, then the probability of having sex on any given day is .02.
	 */

	public double getCoitalFrequencyInitialModification() {
		return coitalFrequencyInitialModification;
	}

	/**
	 * Sets the Coital Frequency Initial Modification property for Relationships And Pregnancy.
	 * The effect on likelihood of sex given that the couple has never had sex. For example, if an Adult's P Sex is 0.1 and this value is 0.2, then the probability of having sex on any given day is .02.
	 * @param _coitalFrequencyInitialModification the new Coital Frequency Initial Modification value
	 */

	public void setCoitalFrequencyInitialModification(
			double _coitalFrequencyInitialModification) {
		coitalFrequencyInitialModification = _coitalFrequencyInitialModification;
	}
	/**
	 * Gets the Lunar Days property for Relationships And Pregnancy.
	 * @return 
	 */

	public int getLunarDays() {
		return lunarDays;
	}

	/**
	 * Sets the Lunar Days property for Relationships And Pregnancy.
	 * 
	 * @param _lunarDays the new Lunar Days value
	 */

	public void setLunarDays(int _lunarDays) {
		lunarDays = _lunarDays;
	}
	/**
	 * Gets the Output Run File property for Relationships And Pregnancy.
	 * @return 
	 */

	public String getOutputRunFile() {
		return outputRunFile;
	}

	/**
	 * Sets the Output Run File property for Relationships And Pregnancy.
	 * 
	 * @param _outputRunFile the new Output Run File value
	 */

	public void setOutputRunFile(String _outputRunFile) {
		outputRunFile = _outputRunFile;
	}
	/**
	 * Gets the Output Period File property for Relationships And Pregnancy.
	 * @return 
	 */

	public String getOutputPeriodFile() {
		return outputPeriodFile;
	}

	/**
	 * Sets the Output Period File property for Relationships And Pregnancy.
	 * 
	 * @param _outputPeriodFile the new Output Period File value
	 */

	public void setOutputPeriodFile(String _outputPeriodFile) {
		outputPeriodFile = _outputPeriodFile;
	}
	/**
	 * Gets the P Coital Frequency Very Low Married Factor Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowMarriedFactorBase() {
		return pCoitalFrequencyVeryLowMarriedFactorBase;
	}

	/**
	 * Sets the P Coital Frequency Very Low Married Factor Base property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowMarriedFactorBase the new P Coital Frequency Very Low Married Factor Base value
	 */

	public void setPCoitalFrequencyVeryLowMarriedFactorBase(
			double _pCoitalFrequencyVeryLowMarriedFactorBase) {
		pCoitalFrequencyVeryLowMarriedFactorBase = _pCoitalFrequencyVeryLowMarriedFactorBase;
	}
	/**
	 * Gets the P Coital Frequency Very Low Married Female Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowMarriedFemaleFactor() {
		return pCoitalFrequencyVeryLowMarriedFemaleFactor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Married Female Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowMarriedFemaleFactor the new P Coital Frequency Very Low Married Female Factor value
	 */

	public void setPCoitalFrequencyVeryLowMarriedFemaleFactor(
			double _pCoitalFrequencyVeryLowMarriedFemaleFactor) {
		pCoitalFrequencyVeryLowMarriedFemaleFactor = _pCoitalFrequencyVeryLowMarriedFemaleFactor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Married Male Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowMarriedMaleFactor() {
		return pCoitalFrequencyVeryLowMarriedMaleFactor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Married Male Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowMarriedMaleFactor the new P Coital Frequency Very Low Married Male Factor value
	 */

	public void setPCoitalFrequencyVeryLowMarriedMaleFactor(
			double _pCoitalFrequencyVeryLowMarriedMaleFactor) {
		pCoitalFrequencyVeryLowMarriedMaleFactor = _pCoitalFrequencyVeryLowMarriedMaleFactor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Married 15 to 19 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowMarried15to19Factor() {
		return pCoitalFrequencyVeryLowMarried15to19Factor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Married 15 to 19 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowMarried15to19Factor the new P Coital Frequency Very Low Married 15 to 19 Factor value
	 */

	public void setPCoitalFrequencyVeryLowMarried15to19Factor(
			double _pCoitalFrequencyVeryLowMarried15to19Factor) {
		pCoitalFrequencyVeryLowMarried15to19Factor = _pCoitalFrequencyVeryLowMarried15to19Factor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Married 20 to 24 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowMarried20to24Factor() {
		return pCoitalFrequencyVeryLowMarried20to24Factor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Married 20 to 24 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowMarried20to24Factor the new P Coital Frequency Very Low Married 20 to 24 Factor value
	 */

	public void setPCoitalFrequencyVeryLowMarried20to24Factor(
			double _pCoitalFrequencyVeryLowMarried20to24Factor) {
		pCoitalFrequencyVeryLowMarried20to24Factor = _pCoitalFrequencyVeryLowMarried20to24Factor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Married 25 to 29 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowMarried25to29Factor() {
		return pCoitalFrequencyVeryLowMarried25to29Factor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Married 25 to 29 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowMarried25to29Factor the new P Coital Frequency Very Low Married 25 to 29 Factor value
	 */

	public void setPCoitalFrequencyVeryLowMarried25to29Factor(
			double _pCoitalFrequencyVeryLowMarried25to29Factor) {
		pCoitalFrequencyVeryLowMarried25to29Factor = _pCoitalFrequencyVeryLowMarried25to29Factor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Married 30 to 44 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowMarried30to44Factor() {
		return pCoitalFrequencyVeryLowMarried30to44Factor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Married 30 to 44 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowMarried30to44Factor the new P Coital Frequency Very Low Married 30 to 44 Factor value
	 */

	public void setPCoitalFrequencyVeryLowMarried30to44Factor(
			double _pCoitalFrequencyVeryLowMarried30to44Factor) {
		pCoitalFrequencyVeryLowMarried30to44Factor = _pCoitalFrequencyVeryLowMarried30to44Factor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Married NHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowMarriedNHSFactor() {
		return pCoitalFrequencyVeryLowMarriedNHSFactor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Married NHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowMarriedNHSFactor the new P Coital Frequency Very Low Married NHS Factor value
	 */

	public void setPCoitalFrequencyVeryLowMarriedNHSFactor(
			double _pCoitalFrequencyVeryLowMarriedNHSFactor) {
		pCoitalFrequencyVeryLowMarriedNHSFactor = _pCoitalFrequencyVeryLowMarriedNHSFactor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Married PHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowMarriedPHSFactor() {
		return pCoitalFrequencyVeryLowMarriedPHSFactor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Married PHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowMarriedPHSFactor the new P Coital Frequency Very Low Married PHS Factor value
	 */

	public void setPCoitalFrequencyVeryLowMarriedPHSFactor(
			double _pCoitalFrequencyVeryLowMarriedPHSFactor) {
		pCoitalFrequencyVeryLowMarriedPHSFactor = _pCoitalFrequencyVeryLowMarriedPHSFactor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Married HS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowMarriedHSFactor() {
		return pCoitalFrequencyVeryLowMarriedHSFactor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Married HS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowMarriedHSFactor the new P Coital Frequency Very Low Married HS Factor value
	 */

	public void setPCoitalFrequencyVeryLowMarriedHSFactor(
			double _pCoitalFrequencyVeryLowMarriedHSFactor) {
		pCoitalFrequencyVeryLowMarriedHSFactor = _pCoitalFrequencyVeryLowMarriedHSFactor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Married Other Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowMarriedOtherFactor() {
		return pCoitalFrequencyVeryLowMarriedOtherFactor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Married Other Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowMarriedOtherFactor the new P Coital Frequency Very Low Married Other Factor value
	 */

	public void setPCoitalFrequencyVeryLowMarriedOtherFactor(
			double _pCoitalFrequencyVeryLowMarriedOtherFactor) {
		pCoitalFrequencyVeryLowMarriedOtherFactor = _pCoitalFrequencyVeryLowMarriedOtherFactor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Married Black Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowMarriedBlackFactor() {
		return pCoitalFrequencyVeryLowMarriedBlackFactor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Married Black Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowMarriedBlackFactor the new P Coital Frequency Very Low Married Black Factor value
	 */

	public void setPCoitalFrequencyVeryLowMarriedBlackFactor(
			double _pCoitalFrequencyVeryLowMarriedBlackFactor) {
		pCoitalFrequencyVeryLowMarriedBlackFactor = _pCoitalFrequencyVeryLowMarriedBlackFactor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Married Hispanic Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowMarriedHispanicFactor() {
		return pCoitalFrequencyVeryLowMarriedHispanicFactor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Married Hispanic Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowMarriedHispanicFactor the new P Coital Frequency Very Low Married Hispanic Factor value
	 */

	public void setPCoitalFrequencyVeryLowMarriedHispanicFactor(
			double _pCoitalFrequencyVeryLowMarriedHispanicFactor) {
		pCoitalFrequencyVeryLowMarriedHispanicFactor = _pCoitalFrequencyVeryLowMarriedHispanicFactor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Married White Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowMarriedWhiteFactor() {
		return pCoitalFrequencyVeryLowMarriedWhiteFactor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Married White Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowMarriedWhiteFactor the new P Coital Frequency Very Low Married White Factor value
	 */

	public void setPCoitalFrequencyVeryLowMarriedWhiteFactor(
			double _pCoitalFrequencyVeryLowMarriedWhiteFactor) {
		pCoitalFrequencyVeryLowMarriedWhiteFactor = _pCoitalFrequencyVeryLowMarriedWhiteFactor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Married Category 1 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowMarriedCategory1Factor() {
		return pCoitalFrequencyVeryLowMarriedCategory1Factor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Married Category 1 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowMarriedCategory1Factor the new P Coital Frequency Very Low Married Category 1 Factor value
	 */

	public void setPCoitalFrequencyVeryLowMarriedCategory1Factor(
			double _pCoitalFrequencyVeryLowMarriedCategory1Factor) {
		pCoitalFrequencyVeryLowMarriedCategory1Factor = _pCoitalFrequencyVeryLowMarriedCategory1Factor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Married Category 3 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowMarriedCategory3Factor() {
		return pCoitalFrequencyVeryLowMarriedCategory3Factor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Married Category 3 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowMarriedCategory3Factor the new P Coital Frequency Very Low Married Category 3 Factor value
	 */

	public void setPCoitalFrequencyVeryLowMarriedCategory3Factor(
			double _pCoitalFrequencyVeryLowMarriedCategory3Factor) {
		pCoitalFrequencyVeryLowMarriedCategory3Factor = _pCoitalFrequencyVeryLowMarriedCategory3Factor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Married Category 2 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowMarriedCategory2Factor() {
		return pCoitalFrequencyVeryLowMarriedCategory2Factor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Married Category 2 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowMarriedCategory2Factor the new P Coital Frequency Very Low Married Category 2 Factor value
	 */

	public void setPCoitalFrequencyVeryLowMarriedCategory2Factor(
			double _pCoitalFrequencyVeryLowMarriedCategory2Factor) {
		pCoitalFrequencyVeryLowMarriedCategory2Factor = _pCoitalFrequencyVeryLowMarriedCategory2Factor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Married Category 4 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowMarriedCategory4Factor() {
		return pCoitalFrequencyVeryLowMarriedCategory4Factor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Married Category 4 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowMarriedCategory4Factor the new P Coital Frequency Very Low Married Category 4 Factor value
	 */

	public void setPCoitalFrequencyVeryLowMarriedCategory4Factor(
			double _pCoitalFrequencyVeryLowMarriedCategory4Factor) {
		pCoitalFrequencyVeryLowMarriedCategory4Factor = _pCoitalFrequencyVeryLowMarriedCategory4Factor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Married Factor Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateMarriedFactorBase() {
		return pCoitalFrequencyModerateMarriedFactorBase;
	}

	/**
	 * Sets the P Coital Frequency Moderate Married Factor Base property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateMarriedFactorBase the new P Coital Frequency Moderate Married Factor Base value
	 */

	public void setPCoitalFrequencyModerateMarriedFactorBase(
			double _pCoitalFrequencyModerateMarriedFactorBase) {
		pCoitalFrequencyModerateMarriedFactorBase = _pCoitalFrequencyModerateMarriedFactorBase;
	}
	/**
	 * Gets the P Coital Frequency Moderate Married Female Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateMarriedFemaleFactor() {
		return pCoitalFrequencyModerateMarriedFemaleFactor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Married Female Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateMarriedFemaleFactor the new P Coital Frequency Moderate Married Female Factor value
	 */

	public void setPCoitalFrequencyModerateMarriedFemaleFactor(
			double _pCoitalFrequencyModerateMarriedFemaleFactor) {
		pCoitalFrequencyModerateMarriedFemaleFactor = _pCoitalFrequencyModerateMarriedFemaleFactor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Married Male Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateMarriedMaleFactor() {
		return pCoitalFrequencyModerateMarriedMaleFactor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Married Male Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateMarriedMaleFactor the new P Coital Frequency Moderate Married Male Factor value
	 */

	public void setPCoitalFrequencyModerateMarriedMaleFactor(
			double _pCoitalFrequencyModerateMarriedMaleFactor) {
		pCoitalFrequencyModerateMarriedMaleFactor = _pCoitalFrequencyModerateMarriedMaleFactor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Married 15 to 19 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateMarried15to19Factor() {
		return pCoitalFrequencyModerateMarried15to19Factor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Married 15 to 19 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateMarried15to19Factor the new P Coital Frequency Moderate Married 15 to 19 Factor value
	 */

	public void setPCoitalFrequencyModerateMarried15to19Factor(
			double _pCoitalFrequencyModerateMarried15to19Factor) {
		pCoitalFrequencyModerateMarried15to19Factor = _pCoitalFrequencyModerateMarried15to19Factor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Married 20 to 24 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateMarried20to24Factor() {
		return pCoitalFrequencyModerateMarried20to24Factor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Married 20 to 24 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateMarried20to24Factor the new P Coital Frequency Moderate Married 20 to 24 Factor value
	 */

	public void setPCoitalFrequencyModerateMarried20to24Factor(
			double _pCoitalFrequencyModerateMarried20to24Factor) {
		pCoitalFrequencyModerateMarried20to24Factor = _pCoitalFrequencyModerateMarried20to24Factor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Married 25 to 29 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateMarried25to29Factor() {
		return pCoitalFrequencyModerateMarried25to29Factor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Married 25 to 29 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateMarried25to29Factor the new P Coital Frequency Moderate Married 25 to 29 Factor value
	 */

	public void setPCoitalFrequencyModerateMarried25to29Factor(
			double _pCoitalFrequencyModerateMarried25to29Factor) {
		pCoitalFrequencyModerateMarried25to29Factor = _pCoitalFrequencyModerateMarried25to29Factor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Married 30 to 44 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateMarried30to44Factor() {
		return pCoitalFrequencyModerateMarried30to44Factor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Married 30 to 44 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateMarried30to44Factor the new P Coital Frequency Moderate Married 30 to 44 Factor value
	 */

	public void setPCoitalFrequencyModerateMarried30to44Factor(
			double _pCoitalFrequencyModerateMarried30to44Factor) {
		pCoitalFrequencyModerateMarried30to44Factor = _pCoitalFrequencyModerateMarried30to44Factor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Married NHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateMarriedNHSFactor() {
		return pCoitalFrequencyModerateMarriedNHSFactor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Married NHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateMarriedNHSFactor the new P Coital Frequency Moderate Married NHS Factor value
	 */

	public void setPCoitalFrequencyModerateMarriedNHSFactor(
			double _pCoitalFrequencyModerateMarriedNHSFactor) {
		pCoitalFrequencyModerateMarriedNHSFactor = _pCoitalFrequencyModerateMarriedNHSFactor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Married PHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateMarriedPHSFactor() {
		return pCoitalFrequencyModerateMarriedPHSFactor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Married PHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateMarriedPHSFactor the new P Coital Frequency Moderate Married PHS Factor value
	 */

	public void setPCoitalFrequencyModerateMarriedPHSFactor(
			double _pCoitalFrequencyModerateMarriedPHSFactor) {
		pCoitalFrequencyModerateMarriedPHSFactor = _pCoitalFrequencyModerateMarriedPHSFactor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Married HS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateMarriedHSFactor() {
		return pCoitalFrequencyModerateMarriedHSFactor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Married HS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateMarriedHSFactor the new P Coital Frequency Moderate Married HS Factor value
	 */

	public void setPCoitalFrequencyModerateMarriedHSFactor(
			double _pCoitalFrequencyModerateMarriedHSFactor) {
		pCoitalFrequencyModerateMarriedHSFactor = _pCoitalFrequencyModerateMarriedHSFactor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Married Other Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateMarriedOtherFactor() {
		return pCoitalFrequencyModerateMarriedOtherFactor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Married Other Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateMarriedOtherFactor the new P Coital Frequency Moderate Married Other Factor value
	 */

	public void setPCoitalFrequencyModerateMarriedOtherFactor(
			double _pCoitalFrequencyModerateMarriedOtherFactor) {
		pCoitalFrequencyModerateMarriedOtherFactor = _pCoitalFrequencyModerateMarriedOtherFactor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Married Black Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateMarriedBlackFactor() {
		return pCoitalFrequencyModerateMarriedBlackFactor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Married Black Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateMarriedBlackFactor the new P Coital Frequency Moderate Married Black Factor value
	 */

	public void setPCoitalFrequencyModerateMarriedBlackFactor(
			double _pCoitalFrequencyModerateMarriedBlackFactor) {
		pCoitalFrequencyModerateMarriedBlackFactor = _pCoitalFrequencyModerateMarriedBlackFactor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Married Hispanic Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateMarriedHispanicFactor() {
		return pCoitalFrequencyModerateMarriedHispanicFactor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Married Hispanic Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateMarriedHispanicFactor the new P Coital Frequency Moderate Married Hispanic Factor value
	 */

	public void setPCoitalFrequencyModerateMarriedHispanicFactor(
			double _pCoitalFrequencyModerateMarriedHispanicFactor) {
		pCoitalFrequencyModerateMarriedHispanicFactor = _pCoitalFrequencyModerateMarriedHispanicFactor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Married White Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateMarriedWhiteFactor() {
		return pCoitalFrequencyModerateMarriedWhiteFactor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Married White Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateMarriedWhiteFactor the new P Coital Frequency Moderate Married White Factor value
	 */

	public void setPCoitalFrequencyModerateMarriedWhiteFactor(
			double _pCoitalFrequencyModerateMarriedWhiteFactor) {
		pCoitalFrequencyModerateMarriedWhiteFactor = _pCoitalFrequencyModerateMarriedWhiteFactor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Married Category 1 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateMarriedCategory1Factor() {
		return pCoitalFrequencyModerateMarriedCategory1Factor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Married Category 1 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateMarriedCategory1Factor the new P Coital Frequency Moderate Married Category 1 Factor value
	 */

	public void setPCoitalFrequencyModerateMarriedCategory1Factor(
			double _pCoitalFrequencyModerateMarriedCategory1Factor) {
		pCoitalFrequencyModerateMarriedCategory1Factor = _pCoitalFrequencyModerateMarriedCategory1Factor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Married Category 3 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateMarriedCategory3Factor() {
		return pCoitalFrequencyModerateMarriedCategory3Factor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Married Category 3 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateMarriedCategory3Factor the new P Coital Frequency Moderate Married Category 3 Factor value
	 */

	public void setPCoitalFrequencyModerateMarriedCategory3Factor(
			double _pCoitalFrequencyModerateMarriedCategory3Factor) {
		pCoitalFrequencyModerateMarriedCategory3Factor = _pCoitalFrequencyModerateMarriedCategory3Factor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Married Category 2 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateMarriedCategory2Factor() {
		return pCoitalFrequencyModerateMarriedCategory2Factor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Married Category 2 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateMarriedCategory2Factor the new P Coital Frequency Moderate Married Category 2 Factor value
	 */

	public void setPCoitalFrequencyModerateMarriedCategory2Factor(
			double _pCoitalFrequencyModerateMarriedCategory2Factor) {
		pCoitalFrequencyModerateMarriedCategory2Factor = _pCoitalFrequencyModerateMarriedCategory2Factor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Married Category 4 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateMarriedCategory4Factor() {
		return pCoitalFrequencyModerateMarriedCategory4Factor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Married Category 4 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateMarriedCategory4Factor the new P Coital Frequency Moderate Married Category 4 Factor value
	 */

	public void setPCoitalFrequencyModerateMarriedCategory4Factor(
			double _pCoitalFrequencyModerateMarriedCategory4Factor) {
		pCoitalFrequencyModerateMarriedCategory4Factor = _pCoitalFrequencyModerateMarriedCategory4Factor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Unmarried Factor Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowUnmarriedFactorBase() {
		return pCoitalFrequencyVeryLowUnmarriedFactorBase;
	}

	/**
	 * Sets the P Coital Frequency Very Low Unmarried Factor Base property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowUnmarriedFactorBase the new P Coital Frequency Very Low Unmarried Factor Base value
	 */

	public void setPCoitalFrequencyVeryLowUnmarriedFactorBase(
			double _pCoitalFrequencyVeryLowUnmarriedFactorBase) {
		pCoitalFrequencyVeryLowUnmarriedFactorBase = _pCoitalFrequencyVeryLowUnmarriedFactorBase;
	}
	/**
	 * Gets the P Coital Frequency Very Low Unmarried Female Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowUnmarriedFemaleFactor() {
		return pCoitalFrequencyVeryLowUnmarriedFemaleFactor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Unmarried Female Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowUnmarriedFemaleFactor the new P Coital Frequency Very Low Unmarried Female Factor value
	 */

	public void setPCoitalFrequencyVeryLowUnmarriedFemaleFactor(
			double _pCoitalFrequencyVeryLowUnmarriedFemaleFactor) {
		pCoitalFrequencyVeryLowUnmarriedFemaleFactor = _pCoitalFrequencyVeryLowUnmarriedFemaleFactor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Unmarried Male Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowUnmarriedMaleFactor() {
		return pCoitalFrequencyVeryLowUnmarriedMaleFactor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Unmarried Male Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowUnmarriedMaleFactor the new P Coital Frequency Very Low Unmarried Male Factor value
	 */

	public void setPCoitalFrequencyVeryLowUnmarriedMaleFactor(
			double _pCoitalFrequencyVeryLowUnmarriedMaleFactor) {
		pCoitalFrequencyVeryLowUnmarriedMaleFactor = _pCoitalFrequencyVeryLowUnmarriedMaleFactor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Unmarried 15 to 19 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowUnmarried15to19Factor() {
		return pCoitalFrequencyVeryLowUnmarried15to19Factor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Unmarried 15 to 19 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowUnmarried15to19Factor the new P Coital Frequency Very Low Unmarried 15 to 19 Factor value
	 */

	public void setPCoitalFrequencyVeryLowUnmarried15to19Factor(
			double _pCoitalFrequencyVeryLowUnmarried15to19Factor) {
		pCoitalFrequencyVeryLowUnmarried15to19Factor = _pCoitalFrequencyVeryLowUnmarried15to19Factor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Unmarried 20 to 24 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowUnmarried20to24Factor() {
		return pCoitalFrequencyVeryLowUnmarried20to24Factor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Unmarried 20 to 24 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowUnmarried20to24Factor the new P Coital Frequency Very Low Unmarried 20 to 24 Factor value
	 */

	public void setPCoitalFrequencyVeryLowUnmarried20to24Factor(
			double _pCoitalFrequencyVeryLowUnmarried20to24Factor) {
		pCoitalFrequencyVeryLowUnmarried20to24Factor = _pCoitalFrequencyVeryLowUnmarried20to24Factor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Unmarried 25 to 29 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowUnmarried25to29Factor() {
		return pCoitalFrequencyVeryLowUnmarried25to29Factor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Unmarried 25 to 29 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowUnmarried25to29Factor the new P Coital Frequency Very Low Unmarried 25 to 29 Factor value
	 */

	public void setPCoitalFrequencyVeryLowUnmarried25to29Factor(
			double _pCoitalFrequencyVeryLowUnmarried25to29Factor) {
		pCoitalFrequencyVeryLowUnmarried25to29Factor = _pCoitalFrequencyVeryLowUnmarried25to29Factor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Unmarried 30 to 44 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowUnmarried30to44Factor() {
		return pCoitalFrequencyVeryLowUnmarried30to44Factor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Unmarried 30 to 44 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowUnmarried30to44Factor the new P Coital Frequency Very Low Unmarried 30 to 44 Factor value
	 */

	public void setPCoitalFrequencyVeryLowUnmarried30to44Factor(
			double _pCoitalFrequencyVeryLowUnmarried30to44Factor) {
		pCoitalFrequencyVeryLowUnmarried30to44Factor = _pCoitalFrequencyVeryLowUnmarried30to44Factor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Unmarried NHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowUnmarriedNHSFactor() {
		return pCoitalFrequencyVeryLowUnmarriedNHSFactor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Unmarried NHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowUnmarriedNHSFactor the new P Coital Frequency Very Low Unmarried NHS Factor value
	 */

	public void setPCoitalFrequencyVeryLowUnmarriedNHSFactor(
			double _pCoitalFrequencyVeryLowUnmarriedNHSFactor) {
		pCoitalFrequencyVeryLowUnmarriedNHSFactor = _pCoitalFrequencyVeryLowUnmarriedNHSFactor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Unmarried PHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowUnmarriedPHSFactor() {
		return pCoitalFrequencyVeryLowUnmarriedPHSFactor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Unmarried PHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowUnmarriedPHSFactor the new P Coital Frequency Very Low Unmarried PHS Factor value
	 */

	public void setPCoitalFrequencyVeryLowUnmarriedPHSFactor(
			double _pCoitalFrequencyVeryLowUnmarriedPHSFactor) {
		pCoitalFrequencyVeryLowUnmarriedPHSFactor = _pCoitalFrequencyVeryLowUnmarriedPHSFactor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Unmarried HS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowUnmarriedHSFactor() {
		return pCoitalFrequencyVeryLowUnmarriedHSFactor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Unmarried HS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowUnmarriedHSFactor the new P Coital Frequency Very Low Unmarried HS Factor value
	 */

	public void setPCoitalFrequencyVeryLowUnmarriedHSFactor(
			double _pCoitalFrequencyVeryLowUnmarriedHSFactor) {
		pCoitalFrequencyVeryLowUnmarriedHSFactor = _pCoitalFrequencyVeryLowUnmarriedHSFactor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Unmarried Other Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowUnmarriedOtherFactor() {
		return pCoitalFrequencyVeryLowUnmarriedOtherFactor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Unmarried Other Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowUnmarriedOtherFactor the new P Coital Frequency Very Low Unmarried Other Factor value
	 */

	public void setPCoitalFrequencyVeryLowUnmarriedOtherFactor(
			double _pCoitalFrequencyVeryLowUnmarriedOtherFactor) {
		pCoitalFrequencyVeryLowUnmarriedOtherFactor = _pCoitalFrequencyVeryLowUnmarriedOtherFactor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Unmarried Black Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowUnmarriedBlackFactor() {
		return pCoitalFrequencyVeryLowUnmarriedBlackFactor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Unmarried Black Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowUnmarriedBlackFactor the new P Coital Frequency Very Low Unmarried Black Factor value
	 */

	public void setPCoitalFrequencyVeryLowUnmarriedBlackFactor(
			double _pCoitalFrequencyVeryLowUnmarriedBlackFactor) {
		pCoitalFrequencyVeryLowUnmarriedBlackFactor = _pCoitalFrequencyVeryLowUnmarriedBlackFactor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Unmarried Hispanic Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowUnmarriedHispanicFactor() {
		return pCoitalFrequencyVeryLowUnmarriedHispanicFactor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Unmarried Hispanic Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowUnmarriedHispanicFactor the new P Coital Frequency Very Low Unmarried Hispanic Factor value
	 */

	public void setPCoitalFrequencyVeryLowUnmarriedHispanicFactor(
			double _pCoitalFrequencyVeryLowUnmarriedHispanicFactor) {
		pCoitalFrequencyVeryLowUnmarriedHispanicFactor = _pCoitalFrequencyVeryLowUnmarriedHispanicFactor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Unmarried White Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowUnmarriedWhiteFactor() {
		return pCoitalFrequencyVeryLowUnmarriedWhiteFactor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Unmarried White Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowUnmarriedWhiteFactor the new P Coital Frequency Very Low Unmarried White Factor value
	 */

	public void setPCoitalFrequencyVeryLowUnmarriedWhiteFactor(
			double _pCoitalFrequencyVeryLowUnmarriedWhiteFactor) {
		pCoitalFrequencyVeryLowUnmarriedWhiteFactor = _pCoitalFrequencyVeryLowUnmarriedWhiteFactor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Unmarried Category 1 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowUnmarriedCategory1Factor() {
		return pCoitalFrequencyVeryLowUnmarriedCategory1Factor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Unmarried Category 1 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowUnmarriedCategory1Factor the new P Coital Frequency Very Low Unmarried Category 1 Factor value
	 */

	public void setPCoitalFrequencyVeryLowUnmarriedCategory1Factor(
			double _pCoitalFrequencyVeryLowUnmarriedCategory1Factor) {
		pCoitalFrequencyVeryLowUnmarriedCategory1Factor = _pCoitalFrequencyVeryLowUnmarriedCategory1Factor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Unmarried Category 3 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowUnmarriedCategory3Factor() {
		return pCoitalFrequencyVeryLowUnmarriedCategory3Factor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Unmarried Category 3 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowUnmarriedCategory3Factor the new P Coital Frequency Very Low Unmarried Category 3 Factor value
	 */

	public void setPCoitalFrequencyVeryLowUnmarriedCategory3Factor(
			double _pCoitalFrequencyVeryLowUnmarriedCategory3Factor) {
		pCoitalFrequencyVeryLowUnmarriedCategory3Factor = _pCoitalFrequencyVeryLowUnmarriedCategory3Factor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Unmarried Category 2 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowUnmarriedCategory2Factor() {
		return pCoitalFrequencyVeryLowUnmarriedCategory2Factor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Unmarried Category 2 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowUnmarriedCategory2Factor the new P Coital Frequency Very Low Unmarried Category 2 Factor value
	 */

	public void setPCoitalFrequencyVeryLowUnmarriedCategory2Factor(
			double _pCoitalFrequencyVeryLowUnmarriedCategory2Factor) {
		pCoitalFrequencyVeryLowUnmarriedCategory2Factor = _pCoitalFrequencyVeryLowUnmarriedCategory2Factor;
	}
	/**
	 * Gets the P Coital Frequency Very Low Unmarried Category 4 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyVeryLowUnmarriedCategory4Factor() {
		return pCoitalFrequencyVeryLowUnmarriedCategory4Factor;
	}

	/**
	 * Sets the P Coital Frequency Very Low Unmarried Category 4 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyVeryLowUnmarriedCategory4Factor the new P Coital Frequency Very Low Unmarried Category 4 Factor value
	 */

	public void setPCoitalFrequencyVeryLowUnmarriedCategory4Factor(
			double _pCoitalFrequencyVeryLowUnmarriedCategory4Factor) {
		pCoitalFrequencyVeryLowUnmarriedCategory4Factor = _pCoitalFrequencyVeryLowUnmarriedCategory4Factor;
	}
	/**
	 * Gets the P Abortion Married Factor Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionMarriedFactorBase() {
		return pAbortionMarriedFactorBase;
	}

	/**
	 * Sets the P Abortion Married Factor Base property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionMarriedFactorBase the new P Abortion Married Factor Base value
	 */

	public void setPAbortionMarriedFactorBase(double _pAbortionMarriedFactorBase) {
		pAbortionMarriedFactorBase = _pAbortionMarriedFactorBase;
	}
	/**
	 * Gets the P Abortion Married 15 to 19 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionMarried15to19Factor() {
		return pAbortionMarried15to19Factor;
	}

	/**
	 * Sets the P Abortion Married 15 to 19 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionMarried15to19Factor the new P Abortion Married 15 to 19 Factor value
	 */

	public void setPAbortionMarried15to19Factor(
			double _pAbortionMarried15to19Factor) {
		pAbortionMarried15to19Factor = _pAbortionMarried15to19Factor;
	}
	/**
	 * Gets the P Abortion Married 20 to 24 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionMarried20to24Factor() {
		return pAbortionMarried20to24Factor;
	}

	/**
	 * Sets the P Abortion Married 20 to 24 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionMarried20to24Factor the new P Abortion Married 20 to 24 Factor value
	 */

	public void setPAbortionMarried20to24Factor(
			double _pAbortionMarried20to24Factor) {
		pAbortionMarried20to24Factor = _pAbortionMarried20to24Factor;
	}
	/**
	 * Gets the P Abortion Married 25 to 29 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionMarried25to29Factor() {
		return pAbortionMarried25to29Factor;
	}

	/**
	 * Sets the P Abortion Married 25 to 29 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionMarried25to29Factor the new P Abortion Married 25 to 29 Factor value
	 */

	public void setPAbortionMarried25to29Factor(
			double _pAbortionMarried25to29Factor) {
		pAbortionMarried25to29Factor = _pAbortionMarried25to29Factor;
	}
	/**
	 * Gets the P Abortion Married 30 to 44 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionMarried30to44Factor() {
		return pAbortionMarried30to44Factor;
	}

	/**
	 * Sets the P Abortion Married 30 to 44 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionMarried30to44Factor the new P Abortion Married 30 to 44 Factor value
	 */

	public void setPAbortionMarried30to44Factor(
			double _pAbortionMarried30to44Factor) {
		pAbortionMarried30to44Factor = _pAbortionMarried30to44Factor;
	}
	/**
	 * Gets the P Abortion Married NHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionMarriedNHSFactor() {
		return pAbortionMarriedNHSFactor;
	}

	/**
	 * Sets the P Abortion Married NHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionMarriedNHSFactor the new P Abortion Married NHS Factor value
	 */

	public void setPAbortionMarriedNHSFactor(double _pAbortionMarriedNHSFactor) {
		pAbortionMarriedNHSFactor = _pAbortionMarriedNHSFactor;
	}
	/**
	 * Gets the P Abortion Married PHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionMarriedPHSFactor() {
		return pAbortionMarriedPHSFactor;
	}

	/**
	 * Sets the P Abortion Married PHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionMarriedPHSFactor the new P Abortion Married PHS Factor value
	 */

	public void setPAbortionMarriedPHSFactor(double _pAbortionMarriedPHSFactor) {
		pAbortionMarriedPHSFactor = _pAbortionMarriedPHSFactor;
	}
	/**
	 * Gets the P Abortion Married HS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionMarriedHSFactor() {
		return pAbortionMarriedHSFactor;
	}

	/**
	 * Sets the P Abortion Married HS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionMarriedHSFactor the new P Abortion Married HS Factor value
	 */

	public void setPAbortionMarriedHSFactor(double _pAbortionMarriedHSFactor) {
		pAbortionMarriedHSFactor = _pAbortionMarriedHSFactor;
	}
	/**
	 * Gets the P Abortion Married Other Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionMarriedOtherFactor() {
		return pAbortionMarriedOtherFactor;
	}

	/**
	 * Sets the P Abortion Married Other Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionMarriedOtherFactor the new P Abortion Married Other Factor value
	 */

	public void setPAbortionMarriedOtherFactor(
			double _pAbortionMarriedOtherFactor) {
		pAbortionMarriedOtherFactor = _pAbortionMarriedOtherFactor;
	}
	/**
	 * Gets the P Abortion Married Black Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionMarriedBlackFactor() {
		return pAbortionMarriedBlackFactor;
	}

	/**
	 * Sets the P Abortion Married Black Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionMarriedBlackFactor the new P Abortion Married Black Factor value
	 */

	public void setPAbortionMarriedBlackFactor(
			double _pAbortionMarriedBlackFactor) {
		pAbortionMarriedBlackFactor = _pAbortionMarriedBlackFactor;
	}
	/**
	 * Gets the P Abortion Married Hispanic Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionMarriedHispanicFactor() {
		return pAbortionMarriedHispanicFactor;
	}

	/**
	 * Sets the P Abortion Married Hispanic Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionMarriedHispanicFactor the new P Abortion Married Hispanic Factor value
	 */

	public void setPAbortionMarriedHispanicFactor(
			double _pAbortionMarriedHispanicFactor) {
		pAbortionMarriedHispanicFactor = _pAbortionMarriedHispanicFactor;
	}
	/**
	 * Gets the P Abortion Married White Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionMarriedWhiteFactor() {
		return pAbortionMarriedWhiteFactor;
	}

	/**
	 * Sets the P Abortion Married White Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionMarriedWhiteFactor the new P Abortion Married White Factor value
	 */

	public void setPAbortionMarriedWhiteFactor(
			double _pAbortionMarriedWhiteFactor) {
		pAbortionMarriedWhiteFactor = _pAbortionMarriedWhiteFactor;
	}
	/**
	 * Gets the P Abortion Married Category 1 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionMarriedCategory1Factor() {
		return pAbortionMarriedCategory1Factor;
	}

	/**
	 * Sets the P Abortion Married Category 1 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionMarriedCategory1Factor the new P Abortion Married Category 1 Factor value
	 */

	public void setPAbortionMarriedCategory1Factor(
			double _pAbortionMarriedCategory1Factor) {
		pAbortionMarriedCategory1Factor = _pAbortionMarriedCategory1Factor;
	}
	/**
	 * Gets the P Abortion Married Category 3 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionMarriedCategory3Factor() {
		return pAbortionMarriedCategory3Factor;
	}

	/**
	 * Sets the P Abortion Married Category 3 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionMarriedCategory3Factor the new P Abortion Married Category 3 Factor value
	 */

	public void setPAbortionMarriedCategory3Factor(
			double _pAbortionMarriedCategory3Factor) {
		pAbortionMarriedCategory3Factor = _pAbortionMarriedCategory3Factor;
	}
	/**
	 * Gets the P Abortion Married Category 2 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionMarriedCategory2Factor() {
		return pAbortionMarriedCategory2Factor;
	}

	/**
	 * Sets the P Abortion Married Category 2 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionMarriedCategory2Factor the new P Abortion Married Category 2 Factor value
	 */

	public void setPAbortionMarriedCategory2Factor(
			double _pAbortionMarriedCategory2Factor) {
		pAbortionMarriedCategory2Factor = _pAbortionMarriedCategory2Factor;
	}
	/**
	 * Gets the P Abortion Married Category 4 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionMarriedCategory4Factor() {
		return pAbortionMarriedCategory4Factor;
	}

	/**
	 * Sets the P Abortion Married Category 4 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionMarriedCategory4Factor the new P Abortion Married Category 4 Factor value
	 */

	public void setPAbortionMarriedCategory4Factor(
			double _pAbortionMarriedCategory4Factor) {
		pAbortionMarriedCategory4Factor = _pAbortionMarriedCategory4Factor;
	}
	/**
	 * Gets the P Abortion Unmarried Factor Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionUnmarriedFactorBase() {
		return pAbortionUnmarriedFactorBase;
	}

	/**
	 * Sets the P Abortion Unmarried Factor Base property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionUnmarriedFactorBase the new P Abortion Unmarried Factor Base value
	 */

	public void setPAbortionUnmarriedFactorBase(
			double _pAbortionUnmarriedFactorBase) {
		pAbortionUnmarriedFactorBase = _pAbortionUnmarriedFactorBase;
	}
	/**
	 * Gets the P Abortion Unmarried 15 to 19 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionUnmarried15to19Factor() {
		return pAbortionUnmarried15to19Factor;
	}

	/**
	 * Sets the P Abortion Unmarried 15 to 19 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionUnmarried15to19Factor the new P Abortion Unmarried 15 to 19 Factor value
	 */

	public void setPAbortionUnmarried15to19Factor(
			double _pAbortionUnmarried15to19Factor) {
		pAbortionUnmarried15to19Factor = _pAbortionUnmarried15to19Factor;
	}
	/**
	 * Gets the P Abortion Unmarried 20 to 24 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionUnmarried20to24Factor() {
		return pAbortionUnmarried20to24Factor;
	}

	/**
	 * Sets the P Abortion Unmarried 20 to 24 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionUnmarried20to24Factor the new P Abortion Unmarried 20 to 24 Factor value
	 */

	public void setPAbortionUnmarried20to24Factor(
			double _pAbortionUnmarried20to24Factor) {
		pAbortionUnmarried20to24Factor = _pAbortionUnmarried20to24Factor;
	}
	/**
	 * Gets the P Abortion Unmarried 25 to 29 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionUnmarried25to29Factor() {
		return pAbortionUnmarried25to29Factor;
	}

	/**
	 * Sets the P Abortion Unmarried 25 to 29 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionUnmarried25to29Factor the new P Abortion Unmarried 25 to 29 Factor value
	 */

	public void setPAbortionUnmarried25to29Factor(
			double _pAbortionUnmarried25to29Factor) {
		pAbortionUnmarried25to29Factor = _pAbortionUnmarried25to29Factor;
	}
	/**
	 * Gets the P Abortion Unmarried 30 to 44 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionUnmarried30to44Factor() {
		return pAbortionUnmarried30to44Factor;
	}

	/**
	 * Sets the P Abortion Unmarried 30 to 44 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionUnmarried30to44Factor the new P Abortion Unmarried 30 to 44 Factor value
	 */

	public void setPAbortionUnmarried30to44Factor(
			double _pAbortionUnmarried30to44Factor) {
		pAbortionUnmarried30to44Factor = _pAbortionUnmarried30to44Factor;
	}
	/**
	 * Gets the P Abortion Unmarried NHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionUnmarriedNHSFactor() {
		return pAbortionUnmarriedNHSFactor;
	}

	/**
	 * Sets the P Abortion Unmarried NHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionUnmarriedNHSFactor the new P Abortion Unmarried NHS Factor value
	 */

	public void setPAbortionUnmarriedNHSFactor(
			double _pAbortionUnmarriedNHSFactor) {
		pAbortionUnmarriedNHSFactor = _pAbortionUnmarriedNHSFactor;
	}
	/**
	 * Gets the P Abortion Unmarried PHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionUnmarriedPHSFactor() {
		return pAbortionUnmarriedPHSFactor;
	}

	/**
	 * Sets the P Abortion Unmarried PHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionUnmarriedPHSFactor the new P Abortion Unmarried PHS Factor value
	 */

	public void setPAbortionUnmarriedPHSFactor(
			double _pAbortionUnmarriedPHSFactor) {
		pAbortionUnmarriedPHSFactor = _pAbortionUnmarriedPHSFactor;
	}
	/**
	 * Gets the P Abortion Unmarried HS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionUnmarriedHSFactor() {
		return pAbortionUnmarriedHSFactor;
	}

	/**
	 * Sets the P Abortion Unmarried HS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionUnmarriedHSFactor the new P Abortion Unmarried HS Factor value
	 */

	public void setPAbortionUnmarriedHSFactor(double _pAbortionUnmarriedHSFactor) {
		pAbortionUnmarriedHSFactor = _pAbortionUnmarriedHSFactor;
	}
	/**
	 * Gets the P Abortion Unmarried Other Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionUnmarriedOtherFactor() {
		return pAbortionUnmarriedOtherFactor;
	}

	/**
	 * Sets the P Abortion Unmarried Other Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionUnmarriedOtherFactor the new P Abortion Unmarried Other Factor value
	 */

	public void setPAbortionUnmarriedOtherFactor(
			double _pAbortionUnmarriedOtherFactor) {
		pAbortionUnmarriedOtherFactor = _pAbortionUnmarriedOtherFactor;
	}
	/**
	 * Gets the P Abortion Unmarried Black Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionUnmarriedBlackFactor() {
		return pAbortionUnmarriedBlackFactor;
	}

	/**
	 * Sets the P Abortion Unmarried Black Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionUnmarriedBlackFactor the new P Abortion Unmarried Black Factor value
	 */

	public void setPAbortionUnmarriedBlackFactor(
			double _pAbortionUnmarriedBlackFactor) {
		pAbortionUnmarriedBlackFactor = _pAbortionUnmarriedBlackFactor;
	}
	/**
	 * Gets the P Abortion Unmarried Hispanic Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionUnmarriedHispanicFactor() {
		return pAbortionUnmarriedHispanicFactor;
	}

	/**
	 * Sets the P Abortion Unmarried Hispanic Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionUnmarriedHispanicFactor the new P Abortion Unmarried Hispanic Factor value
	 */

	public void setPAbortionUnmarriedHispanicFactor(
			double _pAbortionUnmarriedHispanicFactor) {
		pAbortionUnmarriedHispanicFactor = _pAbortionUnmarriedHispanicFactor;
	}
	/**
	 * Gets the P Abortion Unmarried White Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionUnmarriedWhiteFactor() {
		return pAbortionUnmarriedWhiteFactor;
	}

	/**
	 * Sets the P Abortion Unmarried White Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionUnmarriedWhiteFactor the new P Abortion Unmarried White Factor value
	 */

	public void setPAbortionUnmarriedWhiteFactor(
			double _pAbortionUnmarriedWhiteFactor) {
		pAbortionUnmarriedWhiteFactor = _pAbortionUnmarriedWhiteFactor;
	}
	/**
	 * Gets the P Abortion Unmarried Category 1 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionUnmarriedCategory1Factor() {
		return pAbortionUnmarriedCategory1Factor;
	}

	/**
	 * Sets the P Abortion Unmarried Category 1 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionUnmarriedCategory1Factor the new P Abortion Unmarried Category 1 Factor value
	 */

	public void setPAbortionUnmarriedCategory1Factor(
			double _pAbortionUnmarriedCategory1Factor) {
		pAbortionUnmarriedCategory1Factor = _pAbortionUnmarriedCategory1Factor;
	}
	/**
	 * Gets the P Abortion Unmarried Category 3 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionUnmarriedCategory3Factor() {
		return pAbortionUnmarriedCategory3Factor;
	}

	/**
	 * Sets the P Abortion Unmarried Category 3 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionUnmarriedCategory3Factor the new P Abortion Unmarried Category 3 Factor value
	 */

	public void setPAbortionUnmarriedCategory3Factor(
			double _pAbortionUnmarriedCategory3Factor) {
		pAbortionUnmarriedCategory3Factor = _pAbortionUnmarriedCategory3Factor;
	}
	/**
	 * Gets the P Abortion Unmarried Category 2 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionUnmarriedCategory2Factor() {
		return pAbortionUnmarriedCategory2Factor;
	}

	/**
	 * Sets the P Abortion Unmarried Category 2 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionUnmarriedCategory2Factor the new P Abortion Unmarried Category 2 Factor value
	 */

	public void setPAbortionUnmarriedCategory2Factor(
			double _pAbortionUnmarriedCategory2Factor) {
		pAbortionUnmarriedCategory2Factor = _pAbortionUnmarriedCategory2Factor;
	}
	/**
	 * Gets the P Abortion Unmarried Category 4 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPAbortionUnmarriedCategory4Factor() {
		return pAbortionUnmarriedCategory4Factor;
	}

	/**
	 * Sets the P Abortion Unmarried Category 4 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pAbortionUnmarriedCategory4Factor the new P Abortion Unmarried Category 4 Factor value
	 */

	public void setPAbortionUnmarriedCategory4Factor(
			double _pAbortionUnmarriedCategory4Factor) {
		pAbortionUnmarriedCategory4Factor = _pAbortionUnmarriedCategory4Factor;
	}
	/**
	 * Gets the P Miscarriage Unmarried Factor Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageUnmarriedFactorBase() {
		return pMiscarriageUnmarriedFactorBase;
	}

	/**
	 * Sets the P Miscarriage Unmarried Factor Base property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageUnmarriedFactorBase the new P Miscarriage Unmarried Factor Base value
	 */

	public void setPMiscarriageUnmarriedFactorBase(
			double _pMiscarriageUnmarriedFactorBase) {
		pMiscarriageUnmarriedFactorBase = _pMiscarriageUnmarriedFactorBase;
	}
	/**
	 * Gets the P Miscarriage Unmarried 15 to 19 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageUnmarried15to19Factor() {
		return pMiscarriageUnmarried15to19Factor;
	}

	/**
	 * Sets the P Miscarriage Unmarried 15 to 19 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageUnmarried15to19Factor the new P Miscarriage Unmarried 15 to 19 Factor value
	 */

	public void setPMiscarriageUnmarried15to19Factor(
			double _pMiscarriageUnmarried15to19Factor) {
		pMiscarriageUnmarried15to19Factor = _pMiscarriageUnmarried15to19Factor;
	}
	/**
	 * Gets the P Miscarriage Unmarried 20 to 24 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageUnmarried20to24Factor() {
		return pMiscarriageUnmarried20to24Factor;
	}

	/**
	 * Sets the P Miscarriage Unmarried 20 to 24 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageUnmarried20to24Factor the new P Miscarriage Unmarried 20 to 24 Factor value
	 */

	public void setPMiscarriageUnmarried20to24Factor(
			double _pMiscarriageUnmarried20to24Factor) {
		pMiscarriageUnmarried20to24Factor = _pMiscarriageUnmarried20to24Factor;
	}
	/**
	 * Gets the P Miscarriage Unmarried 25 to 29 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageUnmarried25to29Factor() {
		return pMiscarriageUnmarried25to29Factor;
	}

	/**
	 * Sets the P Miscarriage Unmarried 25 to 29 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageUnmarried25to29Factor the new P Miscarriage Unmarried 25 to 29 Factor value
	 */

	public void setPMiscarriageUnmarried25to29Factor(
			double _pMiscarriageUnmarried25to29Factor) {
		pMiscarriageUnmarried25to29Factor = _pMiscarriageUnmarried25to29Factor;
	}
	/**
	 * Gets the P Miscarriage Unmarried 30 to 44 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageUnmarried30to44Factor() {
		return pMiscarriageUnmarried30to44Factor;
	}

	/**
	 * Sets the P Miscarriage Unmarried 30 to 44 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageUnmarried30to44Factor the new P Miscarriage Unmarried 30 to 44 Factor value
	 */

	public void setPMiscarriageUnmarried30to44Factor(
			double _pMiscarriageUnmarried30to44Factor) {
		pMiscarriageUnmarried30to44Factor = _pMiscarriageUnmarried30to44Factor;
	}
	/**
	 * Gets the P Miscarriage Unmarried NHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageUnmarriedNHSFactor() {
		return pMiscarriageUnmarriedNHSFactor;
	}

	/**
	 * Sets the P Miscarriage Unmarried NHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageUnmarriedNHSFactor the new P Miscarriage Unmarried NHS Factor value
	 */

	public void setPMiscarriageUnmarriedNHSFactor(
			double _pMiscarriageUnmarriedNHSFactor) {
		pMiscarriageUnmarriedNHSFactor = _pMiscarriageUnmarriedNHSFactor;
	}
	/**
	 * Gets the P Miscarriage Unmarried PHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageUnmarriedPHSFactor() {
		return pMiscarriageUnmarriedPHSFactor;
	}

	/**
	 * Sets the P Miscarriage Unmarried PHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageUnmarriedPHSFactor the new P Miscarriage Unmarried PHS Factor value
	 */

	public void setPMiscarriageUnmarriedPHSFactor(
			double _pMiscarriageUnmarriedPHSFactor) {
		pMiscarriageUnmarriedPHSFactor = _pMiscarriageUnmarriedPHSFactor;
	}
	/**
	 * Gets the P Miscarriage Unmarried HS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageUnmarriedHSFactor() {
		return pMiscarriageUnmarriedHSFactor;
	}

	/**
	 * Sets the P Miscarriage Unmarried HS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageUnmarriedHSFactor the new P Miscarriage Unmarried HS Factor value
	 */

	public void setPMiscarriageUnmarriedHSFactor(
			double _pMiscarriageUnmarriedHSFactor) {
		pMiscarriageUnmarriedHSFactor = _pMiscarriageUnmarriedHSFactor;
	}
	/**
	 * Gets the P Miscarriage Unmarried Other Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageUnmarriedOtherFactor() {
		return pMiscarriageUnmarriedOtherFactor;
	}

	/**
	 * Sets the P Miscarriage Unmarried Other Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageUnmarriedOtherFactor the new P Miscarriage Unmarried Other Factor value
	 */

	public void setPMiscarriageUnmarriedOtherFactor(
			double _pMiscarriageUnmarriedOtherFactor) {
		pMiscarriageUnmarriedOtherFactor = _pMiscarriageUnmarriedOtherFactor;
	}
	/**
	 * Gets the P Miscarriage Unmarried Black Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageUnmarriedBlackFactor() {
		return pMiscarriageUnmarriedBlackFactor;
	}

	/**
	 * Sets the P Miscarriage Unmarried Black Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageUnmarriedBlackFactor the new P Miscarriage Unmarried Black Factor value
	 */

	public void setPMiscarriageUnmarriedBlackFactor(
			double _pMiscarriageUnmarriedBlackFactor) {
		pMiscarriageUnmarriedBlackFactor = _pMiscarriageUnmarriedBlackFactor;
	}
	/**
	 * Gets the P Miscarriage Unmarried Hispanic Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageUnmarriedHispanicFactor() {
		return pMiscarriageUnmarriedHispanicFactor;
	}

	/**
	 * Sets the P Miscarriage Unmarried Hispanic Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageUnmarriedHispanicFactor the new P Miscarriage Unmarried Hispanic Factor value
	 */

	public void setPMiscarriageUnmarriedHispanicFactor(
			double _pMiscarriageUnmarriedHispanicFactor) {
		pMiscarriageUnmarriedHispanicFactor = _pMiscarriageUnmarriedHispanicFactor;
	}
	/**
	 * Gets the P Miscarriage Unmarried White Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageUnmarriedWhiteFactor() {
		return pMiscarriageUnmarriedWhiteFactor;
	}

	/**
	 * Sets the P Miscarriage Unmarried White Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageUnmarriedWhiteFactor the new P Miscarriage Unmarried White Factor value
	 */

	public void setPMiscarriageUnmarriedWhiteFactor(
			double _pMiscarriageUnmarriedWhiteFactor) {
		pMiscarriageUnmarriedWhiteFactor = _pMiscarriageUnmarriedWhiteFactor;
	}
	/**
	 * Gets the P Miscarriage Unmarried Category 1 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageUnmarriedCategory1Factor() {
		return pMiscarriageUnmarriedCategory1Factor;
	}

	/**
	 * Sets the P Miscarriage Unmarried Category 1 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageUnmarriedCategory1Factor the new P Miscarriage Unmarried Category 1 Factor value
	 */

	public void setPMiscarriageUnmarriedCategory1Factor(
			double _pMiscarriageUnmarriedCategory1Factor) {
		pMiscarriageUnmarriedCategory1Factor = _pMiscarriageUnmarriedCategory1Factor;
	}
	/**
	 * Gets the P Miscarriage Unmarried Category 3 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageUnmarriedCategory3Factor() {
		return pMiscarriageUnmarriedCategory3Factor;
	}

	/**
	 * Sets the P Miscarriage Unmarried Category 3 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageUnmarriedCategory3Factor the new P Miscarriage Unmarried Category 3 Factor value
	 */

	public void setPMiscarriageUnmarriedCategory3Factor(
			double _pMiscarriageUnmarriedCategory3Factor) {
		pMiscarriageUnmarriedCategory3Factor = _pMiscarriageUnmarriedCategory3Factor;
	}
	/**
	 * Gets the P Miscarriage Unmarried Category 2 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageUnmarriedCategory2Factor() {
		return pMiscarriageUnmarriedCategory2Factor;
	}

	/**
	 * Sets the P Miscarriage Unmarried Category 2 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageUnmarriedCategory2Factor the new P Miscarriage Unmarried Category 2 Factor value
	 */

	public void setPMiscarriageUnmarriedCategory2Factor(
			double _pMiscarriageUnmarriedCategory2Factor) {
		pMiscarriageUnmarriedCategory2Factor = _pMiscarriageUnmarriedCategory2Factor;
	}
	/**
	 * Gets the P Miscarriage Unmarried Category 4 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMiscarriageUnmarriedCategory4Factor() {
		return pMiscarriageUnmarriedCategory4Factor;
	}

	/**
	 * Sets the P Miscarriage Unmarried Category 4 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMiscarriageUnmarriedCategory4Factor the new P Miscarriage Unmarried Category 4 Factor value
	 */

	public void setPMiscarriageUnmarriedCategory4Factor(
			double _pMiscarriageUnmarriedCategory4Factor) {
		pMiscarriageUnmarriedCategory4Factor = _pMiscarriageUnmarriedCategory4Factor;
	}
	/**
	 * Gets the P Poor Birth Married Factor Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthMarriedFactorBase() {
		return pPoorBirthMarriedFactorBase;
	}

	/**
	 * Sets the P Poor Birth Married Factor Base property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthMarriedFactorBase the new P Poor Birth Married Factor Base value
	 */

	public void setPPoorBirthMarriedFactorBase(
			double _pPoorBirthMarriedFactorBase) {
		pPoorBirthMarriedFactorBase = _pPoorBirthMarriedFactorBase;
	}
	/**
	 * Gets the P Poor Birth Married 15 to 19 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthMarried15to19Factor() {
		return pPoorBirthMarried15to19Factor;
	}

	/**
	 * Sets the P Poor Birth Married 15 to 19 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthMarried15to19Factor the new P Poor Birth Married 15 to 19 Factor value
	 */

	public void setPPoorBirthMarried15to19Factor(
			double _pPoorBirthMarried15to19Factor) {
		pPoorBirthMarried15to19Factor = _pPoorBirthMarried15to19Factor;
	}
	/**
	 * Gets the P Poor Birth Married 20 to 24 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthMarried20to24Factor() {
		return pPoorBirthMarried20to24Factor;
	}

	/**
	 * Sets the P Poor Birth Married 20 to 24 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthMarried20to24Factor the new P Poor Birth Married 20 to 24 Factor value
	 */

	public void setPPoorBirthMarried20to24Factor(
			double _pPoorBirthMarried20to24Factor) {
		pPoorBirthMarried20to24Factor = _pPoorBirthMarried20to24Factor;
	}
	/**
	 * Gets the P Poor Birth Married 25 to 29 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthMarried25to29Factor() {
		return pPoorBirthMarried25to29Factor;
	}

	/**
	 * Sets the P Poor Birth Married 25 to 29 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthMarried25to29Factor the new P Poor Birth Married 25 to 29 Factor value
	 */

	public void setPPoorBirthMarried25to29Factor(
			double _pPoorBirthMarried25to29Factor) {
		pPoorBirthMarried25to29Factor = _pPoorBirthMarried25to29Factor;
	}
	/**
	 * Gets the P Poor Birth Married 30 to 44 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthMarried30to44Factor() {
		return pPoorBirthMarried30to44Factor;
	}

	/**
	 * Sets the P Poor Birth Married 30 to 44 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthMarried30to44Factor the new P Poor Birth Married 30 to 44 Factor value
	 */

	public void setPPoorBirthMarried30to44Factor(
			double _pPoorBirthMarried30to44Factor) {
		pPoorBirthMarried30to44Factor = _pPoorBirthMarried30to44Factor;
	}
	/**
	 * Gets the P Poor Birth Married NHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthMarriedNHSFactor() {
		return pPoorBirthMarriedNHSFactor;
	}

	/**
	 * Sets the P Poor Birth Married NHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthMarriedNHSFactor the new P Poor Birth Married NHS Factor value
	 */

	public void setPPoorBirthMarriedNHSFactor(double _pPoorBirthMarriedNHSFactor) {
		pPoorBirthMarriedNHSFactor = _pPoorBirthMarriedNHSFactor;
	}
	/**
	 * Gets the P Poor Birth Married PHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthMarriedPHSFactor() {
		return pPoorBirthMarriedPHSFactor;
	}

	/**
	 * Sets the P Poor Birth Married PHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthMarriedPHSFactor the new P Poor Birth Married PHS Factor value
	 */

	public void setPPoorBirthMarriedPHSFactor(double _pPoorBirthMarriedPHSFactor) {
		pPoorBirthMarriedPHSFactor = _pPoorBirthMarriedPHSFactor;
	}
	/**
	 * Gets the P Poor Birth Married HS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthMarriedHSFactor() {
		return pPoorBirthMarriedHSFactor;
	}

	/**
	 * Sets the P Poor Birth Married HS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthMarriedHSFactor the new P Poor Birth Married HS Factor value
	 */

	public void setPPoorBirthMarriedHSFactor(double _pPoorBirthMarriedHSFactor) {
		pPoorBirthMarriedHSFactor = _pPoorBirthMarriedHSFactor;
	}
	/**
	 * Gets the P Poor Birth Married Other Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthMarriedOtherFactor() {
		return pPoorBirthMarriedOtherFactor;
	}

	/**
	 * Sets the P Poor Birth Married Other Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthMarriedOtherFactor the new P Poor Birth Married Other Factor value
	 */

	public void setPPoorBirthMarriedOtherFactor(
			double _pPoorBirthMarriedOtherFactor) {
		pPoorBirthMarriedOtherFactor = _pPoorBirthMarriedOtherFactor;
	}
	/**
	 * Gets the P Poor Birth Married Black Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthMarriedBlackFactor() {
		return pPoorBirthMarriedBlackFactor;
	}

	/**
	 * Sets the P Poor Birth Married Black Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthMarriedBlackFactor the new P Poor Birth Married Black Factor value
	 */

	public void setPPoorBirthMarriedBlackFactor(
			double _pPoorBirthMarriedBlackFactor) {
		pPoorBirthMarriedBlackFactor = _pPoorBirthMarriedBlackFactor;
	}
	/**
	 * Gets the P Poor Birth Married Hispanic Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthMarriedHispanicFactor() {
		return pPoorBirthMarriedHispanicFactor;
	}

	/**
	 * Sets the P Poor Birth Married Hispanic Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthMarriedHispanicFactor the new P Poor Birth Married Hispanic Factor value
	 */

	public void setPPoorBirthMarriedHispanicFactor(
			double _pPoorBirthMarriedHispanicFactor) {
		pPoorBirthMarriedHispanicFactor = _pPoorBirthMarriedHispanicFactor;
	}
	/**
	 * Gets the P Poor Birth Married White Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthMarriedWhiteFactor() {
		return pPoorBirthMarriedWhiteFactor;
	}

	/**
	 * Sets the P Poor Birth Married White Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthMarriedWhiteFactor the new P Poor Birth Married White Factor value
	 */

	public void setPPoorBirthMarriedWhiteFactor(
			double _pPoorBirthMarriedWhiteFactor) {
		pPoorBirthMarriedWhiteFactor = _pPoorBirthMarriedWhiteFactor;
	}
	/**
	 * Gets the P Poor Birth Married Category 1 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthMarriedCategory1Factor() {
		return pPoorBirthMarriedCategory1Factor;
	}

	/**
	 * Sets the P Poor Birth Married Category 1 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthMarriedCategory1Factor the new P Poor Birth Married Category 1 Factor value
	 */

	public void setPPoorBirthMarriedCategory1Factor(
			double _pPoorBirthMarriedCategory1Factor) {
		pPoorBirthMarriedCategory1Factor = _pPoorBirthMarriedCategory1Factor;
	}
	/**
	 * Gets the P Poor Birth Married Category 3 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthMarriedCategory3Factor() {
		return pPoorBirthMarriedCategory3Factor;
	}

	/**
	 * Sets the P Poor Birth Married Category 3 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthMarriedCategory3Factor the new P Poor Birth Married Category 3 Factor value
	 */

	public void setPPoorBirthMarriedCategory3Factor(
			double _pPoorBirthMarriedCategory3Factor) {
		pPoorBirthMarriedCategory3Factor = _pPoorBirthMarriedCategory3Factor;
	}
	/**
	 * Gets the P Poor Birth Married Category 2 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthMarriedCategory2Factor() {
		return pPoorBirthMarriedCategory2Factor;
	}

	/**
	 * Sets the P Poor Birth Married Category 2 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthMarriedCategory2Factor the new P Poor Birth Married Category 2 Factor value
	 */

	public void setPPoorBirthMarriedCategory2Factor(
			double _pPoorBirthMarriedCategory2Factor) {
		pPoorBirthMarriedCategory2Factor = _pPoorBirthMarriedCategory2Factor;
	}
	/**
	 * Gets the P Poor Birth Married Category 4 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthMarriedCategory4Factor() {
		return pPoorBirthMarriedCategory4Factor;
	}

	/**
	 * Sets the P Poor Birth Married Category 4 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthMarriedCategory4Factor the new P Poor Birth Married Category 4 Factor value
	 */

	public void setPPoorBirthMarriedCategory4Factor(
			double _pPoorBirthMarriedCategory4Factor) {
		pPoorBirthMarriedCategory4Factor = _pPoorBirthMarriedCategory4Factor;
	}
	/**
	 * Gets the P Poor Birth Unmarried Factor Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthUnmarriedFactorBase() {
		return pPoorBirthUnmarriedFactorBase;
	}

	/**
	 * Sets the P Poor Birth Unmarried Factor Base property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthUnmarriedFactorBase the new P Poor Birth Unmarried Factor Base value
	 */

	public void setPPoorBirthUnmarriedFactorBase(
			double _pPoorBirthUnmarriedFactorBase) {
		pPoorBirthUnmarriedFactorBase = _pPoorBirthUnmarriedFactorBase;
	}
	/**
	 * Gets the P Poor Birth Unmarried 15 to 19 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthUnmarried15to19Factor() {
		return pPoorBirthUnmarried15to19Factor;
	}

	/**
	 * Sets the P Poor Birth Unmarried 15 to 19 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthUnmarried15to19Factor the new P Poor Birth Unmarried 15 to 19 Factor value
	 */

	public void setPPoorBirthUnmarried15to19Factor(
			double _pPoorBirthUnmarried15to19Factor) {
		pPoorBirthUnmarried15to19Factor = _pPoorBirthUnmarried15to19Factor;
	}
	/**
	 * Gets the P Poor Birth Unmarried 20 to 24 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthUnmarried20to24Factor() {
		return pPoorBirthUnmarried20to24Factor;
	}

	/**
	 * Sets the P Poor Birth Unmarried 20 to 24 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthUnmarried20to24Factor the new P Poor Birth Unmarried 20 to 24 Factor value
	 */

	public void setPPoorBirthUnmarried20to24Factor(
			double _pPoorBirthUnmarried20to24Factor) {
		pPoorBirthUnmarried20to24Factor = _pPoorBirthUnmarried20to24Factor;
	}
	/**
	 * Gets the P Poor Birth Unmarried 25 to 29 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthUnmarried25to29Factor() {
		return pPoorBirthUnmarried25to29Factor;
	}

	/**
	 * Sets the P Poor Birth Unmarried 25 to 29 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthUnmarried25to29Factor the new P Poor Birth Unmarried 25 to 29 Factor value
	 */

	public void setPPoorBirthUnmarried25to29Factor(
			double _pPoorBirthUnmarried25to29Factor) {
		pPoorBirthUnmarried25to29Factor = _pPoorBirthUnmarried25to29Factor;
	}
	/**
	 * Gets the P Poor Birth Unmarried 30 to 44 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthUnmarried30to44Factor() {
		return pPoorBirthUnmarried30to44Factor;
	}

	/**
	 * Sets the P Poor Birth Unmarried 30 to 44 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthUnmarried30to44Factor the new P Poor Birth Unmarried 30 to 44 Factor value
	 */

	public void setPPoorBirthUnmarried30to44Factor(
			double _pPoorBirthUnmarried30to44Factor) {
		pPoorBirthUnmarried30to44Factor = _pPoorBirthUnmarried30to44Factor;
	}
	/**
	 * Gets the P Poor Birth Unmarried NHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthUnmarriedNHSFactor() {
		return pPoorBirthUnmarriedNHSFactor;
	}

	/**
	 * Sets the P Poor Birth Unmarried NHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthUnmarriedNHSFactor the new P Poor Birth Unmarried NHS Factor value
	 */

	public void setPPoorBirthUnmarriedNHSFactor(
			double _pPoorBirthUnmarriedNHSFactor) {
		pPoorBirthUnmarriedNHSFactor = _pPoorBirthUnmarriedNHSFactor;
	}
	/**
	 * Gets the P Poor Birth Unmarried PHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthUnmarriedPHSFactor() {
		return pPoorBirthUnmarriedPHSFactor;
	}

	/**
	 * Sets the P Poor Birth Unmarried PHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthUnmarriedPHSFactor the new P Poor Birth Unmarried PHS Factor value
	 */

	public void setPPoorBirthUnmarriedPHSFactor(
			double _pPoorBirthUnmarriedPHSFactor) {
		pPoorBirthUnmarriedPHSFactor = _pPoorBirthUnmarriedPHSFactor;
	}
	/**
	 * Gets the P Poor Birth Unmarried HS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthUnmarriedHSFactor() {
		return pPoorBirthUnmarriedHSFactor;
	}

	/**
	 * Sets the P Poor Birth Unmarried HS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthUnmarriedHSFactor the new P Poor Birth Unmarried HS Factor value
	 */

	public void setPPoorBirthUnmarriedHSFactor(
			double _pPoorBirthUnmarriedHSFactor) {
		pPoorBirthUnmarriedHSFactor = _pPoorBirthUnmarriedHSFactor;
	}
	/**
	 * Gets the P Poor Birth Unmarried Other Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthUnmarriedOtherFactor() {
		return pPoorBirthUnmarriedOtherFactor;
	}

	/**
	 * Sets the P Poor Birth Unmarried Other Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthUnmarriedOtherFactor the new P Poor Birth Unmarried Other Factor value
	 */

	public void setPPoorBirthUnmarriedOtherFactor(
			double _pPoorBirthUnmarriedOtherFactor) {
		pPoorBirthUnmarriedOtherFactor = _pPoorBirthUnmarriedOtherFactor;
	}
	/**
	 * Gets the P Poor Birth Unmarried Black Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthUnmarriedBlackFactor() {
		return pPoorBirthUnmarriedBlackFactor;
	}

	/**
	 * Sets the P Poor Birth Unmarried Black Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthUnmarriedBlackFactor the new P Poor Birth Unmarried Black Factor value
	 */

	public void setPPoorBirthUnmarriedBlackFactor(
			double _pPoorBirthUnmarriedBlackFactor) {
		pPoorBirthUnmarriedBlackFactor = _pPoorBirthUnmarriedBlackFactor;
	}
	/**
	 * Gets the P Poor Birth Unmarried Hispanic Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthUnmarriedHispanicFactor() {
		return pPoorBirthUnmarriedHispanicFactor;
	}

	/**
	 * Sets the P Poor Birth Unmarried Hispanic Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthUnmarriedHispanicFactor the new P Poor Birth Unmarried Hispanic Factor value
	 */

	public void setPPoorBirthUnmarriedHispanicFactor(
			double _pPoorBirthUnmarriedHispanicFactor) {
		pPoorBirthUnmarriedHispanicFactor = _pPoorBirthUnmarriedHispanicFactor;
	}
	/**
	 * Gets the P Poor Birth Unmarried White Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthUnmarriedWhiteFactor() {
		return pPoorBirthUnmarriedWhiteFactor;
	}

	/**
	 * Sets the P Poor Birth Unmarried White Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthUnmarriedWhiteFactor the new P Poor Birth Unmarried White Factor value
	 */

	public void setPPoorBirthUnmarriedWhiteFactor(
			double _pPoorBirthUnmarriedWhiteFactor) {
		pPoorBirthUnmarriedWhiteFactor = _pPoorBirthUnmarriedWhiteFactor;
	}
	/**
	 * Gets the P Poor Birth Unmarried Category 1 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthUnmarriedCategory1Factor() {
		return pPoorBirthUnmarriedCategory1Factor;
	}

	/**
	 * Sets the P Poor Birth Unmarried Category 1 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthUnmarriedCategory1Factor the new P Poor Birth Unmarried Category 1 Factor value
	 */

	public void setPPoorBirthUnmarriedCategory1Factor(
			double _pPoorBirthUnmarriedCategory1Factor) {
		pPoorBirthUnmarriedCategory1Factor = _pPoorBirthUnmarriedCategory1Factor;
	}
	/**
	 * Gets the P Poor Birth Unmarried Category 3 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthUnmarriedCategory3Factor() {
		return pPoorBirthUnmarriedCategory3Factor;
	}

	/**
	 * Sets the P Poor Birth Unmarried Category 3 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthUnmarriedCategory3Factor the new P Poor Birth Unmarried Category 3 Factor value
	 */

	public void setPPoorBirthUnmarriedCategory3Factor(
			double _pPoorBirthUnmarriedCategory3Factor) {
		pPoorBirthUnmarriedCategory3Factor = _pPoorBirthUnmarriedCategory3Factor;
	}
	/**
	 * Gets the P Poor Birth Unmarried Category 2 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthUnmarriedCategory2Factor() {
		return pPoorBirthUnmarriedCategory2Factor;
	}

	/**
	 * Sets the P Poor Birth Unmarried Category 2 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthUnmarriedCategory2Factor the new P Poor Birth Unmarried Category 2 Factor value
	 */

	public void setPPoorBirthUnmarriedCategory2Factor(
			double _pPoorBirthUnmarriedCategory2Factor) {
		pPoorBirthUnmarriedCategory2Factor = _pPoorBirthUnmarriedCategory2Factor;
	}
	/**
	 * Gets the P Poor Birth Unmarried Category 4 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPoorBirthUnmarriedCategory4Factor() {
		return pPoorBirthUnmarriedCategory4Factor;
	}

	/**
	 * Sets the P Poor Birth Unmarried Category 4 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPoorBirthUnmarriedCategory4Factor the new P Poor Birth Unmarried Category 4 Factor value
	 */

	public void setPPoorBirthUnmarriedCategory4Factor(
			double _pPoorBirthUnmarriedCategory4Factor) {
		pPoorBirthUnmarriedCategory4Factor = _pPoorBirthUnmarriedCategory4Factor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Unmarried Factor Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateUnmarriedFactorBase() {
		return pCoitalFrequencyModerateUnmarriedFactorBase;
	}

	/**
	 * Sets the P Coital Frequency Moderate Unmarried Factor Base property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateUnmarriedFactorBase the new P Coital Frequency Moderate Unmarried Factor Base value
	 */

	public void setPCoitalFrequencyModerateUnmarriedFactorBase(
			double _pCoitalFrequencyModerateUnmarriedFactorBase) {
		pCoitalFrequencyModerateUnmarriedFactorBase = _pCoitalFrequencyModerateUnmarriedFactorBase;
	}
	/**
	 * Gets the P Coital Frequency Moderate Unmarried Female Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateUnmarriedFemaleFactor() {
		return pCoitalFrequencyModerateUnmarriedFemaleFactor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Unmarried Female Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateUnmarriedFemaleFactor the new P Coital Frequency Moderate Unmarried Female Factor value
	 */

	public void setPCoitalFrequencyModerateUnmarriedFemaleFactor(
			double _pCoitalFrequencyModerateUnmarriedFemaleFactor) {
		pCoitalFrequencyModerateUnmarriedFemaleFactor = _pCoitalFrequencyModerateUnmarriedFemaleFactor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Unmarried Male Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateUnmarriedMaleFactor() {
		return pCoitalFrequencyModerateUnmarriedMaleFactor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Unmarried Male Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateUnmarriedMaleFactor the new P Coital Frequency Moderate Unmarried Male Factor value
	 */

	public void setPCoitalFrequencyModerateUnmarriedMaleFactor(
			double _pCoitalFrequencyModerateUnmarriedMaleFactor) {
		pCoitalFrequencyModerateUnmarriedMaleFactor = _pCoitalFrequencyModerateUnmarriedMaleFactor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Unmarried 15 to 19 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateUnmarried15to19Factor() {
		return pCoitalFrequencyModerateUnmarried15to19Factor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Unmarried 15 to 19 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateUnmarried15to19Factor the new P Coital Frequency Moderate Unmarried 15 to 19 Factor value
	 */

	public void setPCoitalFrequencyModerateUnmarried15to19Factor(
			double _pCoitalFrequencyModerateUnmarried15to19Factor) {
		pCoitalFrequencyModerateUnmarried15to19Factor = _pCoitalFrequencyModerateUnmarried15to19Factor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Unmarried 20 to 24 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateUnmarried20to24Factor() {
		return pCoitalFrequencyModerateUnmarried20to24Factor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Unmarried 20 to 24 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateUnmarried20to24Factor the new P Coital Frequency Moderate Unmarried 20 to 24 Factor value
	 */

	public void setPCoitalFrequencyModerateUnmarried20to24Factor(
			double _pCoitalFrequencyModerateUnmarried20to24Factor) {
		pCoitalFrequencyModerateUnmarried20to24Factor = _pCoitalFrequencyModerateUnmarried20to24Factor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Unmarried 25 to 29 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateUnmarried25to29Factor() {
		return pCoitalFrequencyModerateUnmarried25to29Factor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Unmarried 25 to 29 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateUnmarried25to29Factor the new P Coital Frequency Moderate Unmarried 25 to 29 Factor value
	 */

	public void setPCoitalFrequencyModerateUnmarried25to29Factor(
			double _pCoitalFrequencyModerateUnmarried25to29Factor) {
		pCoitalFrequencyModerateUnmarried25to29Factor = _pCoitalFrequencyModerateUnmarried25to29Factor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Unmarried 30 to 44 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateUnmarried30to44Factor() {
		return pCoitalFrequencyModerateUnmarried30to44Factor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Unmarried 30 to 44 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateUnmarried30to44Factor the new P Coital Frequency Moderate Unmarried 30 to 44 Factor value
	 */

	public void setPCoitalFrequencyModerateUnmarried30to44Factor(
			double _pCoitalFrequencyModerateUnmarried30to44Factor) {
		pCoitalFrequencyModerateUnmarried30to44Factor = _pCoitalFrequencyModerateUnmarried30to44Factor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Unmarried NHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateUnmarriedNHSFactor() {
		return pCoitalFrequencyModerateUnmarriedNHSFactor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Unmarried NHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateUnmarriedNHSFactor the new P Coital Frequency Moderate Unmarried NHS Factor value
	 */

	public void setPCoitalFrequencyModerateUnmarriedNHSFactor(
			double _pCoitalFrequencyModerateUnmarriedNHSFactor) {
		pCoitalFrequencyModerateUnmarriedNHSFactor = _pCoitalFrequencyModerateUnmarriedNHSFactor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Unmarried PHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateUnmarriedPHSFactor() {
		return pCoitalFrequencyModerateUnmarriedPHSFactor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Unmarried PHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateUnmarriedPHSFactor the new P Coital Frequency Moderate Unmarried PHS Factor value
	 */

	public void setPCoitalFrequencyModerateUnmarriedPHSFactor(
			double _pCoitalFrequencyModerateUnmarriedPHSFactor) {
		pCoitalFrequencyModerateUnmarriedPHSFactor = _pCoitalFrequencyModerateUnmarriedPHSFactor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Unmarried HS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateUnmarriedHSFactor() {
		return pCoitalFrequencyModerateUnmarriedHSFactor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Unmarried HS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateUnmarriedHSFactor the new P Coital Frequency Moderate Unmarried HS Factor value
	 */

	public void setPCoitalFrequencyModerateUnmarriedHSFactor(
			double _pCoitalFrequencyModerateUnmarriedHSFactor) {
		pCoitalFrequencyModerateUnmarriedHSFactor = _pCoitalFrequencyModerateUnmarriedHSFactor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Unmarried Other Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateUnmarriedOtherFactor() {
		return pCoitalFrequencyModerateUnmarriedOtherFactor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Unmarried Other Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateUnmarriedOtherFactor the new P Coital Frequency Moderate Unmarried Other Factor value
	 */

	public void setPCoitalFrequencyModerateUnmarriedOtherFactor(
			double _pCoitalFrequencyModerateUnmarriedOtherFactor) {
		pCoitalFrequencyModerateUnmarriedOtherFactor = _pCoitalFrequencyModerateUnmarriedOtherFactor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Unmarried Black Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateUnmarriedBlackFactor() {
		return pCoitalFrequencyModerateUnmarriedBlackFactor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Unmarried Black Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateUnmarriedBlackFactor the new P Coital Frequency Moderate Unmarried Black Factor value
	 */

	public void setPCoitalFrequencyModerateUnmarriedBlackFactor(
			double _pCoitalFrequencyModerateUnmarriedBlackFactor) {
		pCoitalFrequencyModerateUnmarriedBlackFactor = _pCoitalFrequencyModerateUnmarriedBlackFactor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Unmarried Hispanic Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateUnmarriedHispanicFactor() {
		return pCoitalFrequencyModerateUnmarriedHispanicFactor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Unmarried Hispanic Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateUnmarriedHispanicFactor the new P Coital Frequency Moderate Unmarried Hispanic Factor value
	 */

	public void setPCoitalFrequencyModerateUnmarriedHispanicFactor(
			double _pCoitalFrequencyModerateUnmarriedHispanicFactor) {
		pCoitalFrequencyModerateUnmarriedHispanicFactor = _pCoitalFrequencyModerateUnmarriedHispanicFactor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Unmarried White Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateUnmarriedWhiteFactor() {
		return pCoitalFrequencyModerateUnmarriedWhiteFactor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Unmarried White Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateUnmarriedWhiteFactor the new P Coital Frequency Moderate Unmarried White Factor value
	 */

	public void setPCoitalFrequencyModerateUnmarriedWhiteFactor(
			double _pCoitalFrequencyModerateUnmarriedWhiteFactor) {
		pCoitalFrequencyModerateUnmarriedWhiteFactor = _pCoitalFrequencyModerateUnmarriedWhiteFactor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Unmarried Category 1 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateUnmarriedCategory1Factor() {
		return pCoitalFrequencyModerateUnmarriedCategory1Factor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Unmarried Category 1 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateUnmarriedCategory1Factor the new P Coital Frequency Moderate Unmarried Category 1 Factor value
	 */

	public void setPCoitalFrequencyModerateUnmarriedCategory1Factor(
			double _pCoitalFrequencyModerateUnmarriedCategory1Factor) {
		pCoitalFrequencyModerateUnmarriedCategory1Factor = _pCoitalFrequencyModerateUnmarriedCategory1Factor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Unmarried Category 3 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateUnmarriedCategory3Factor() {
		return pCoitalFrequencyModerateUnmarriedCategory3Factor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Unmarried Category 3 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateUnmarriedCategory3Factor the new P Coital Frequency Moderate Unmarried Category 3 Factor value
	 */

	public void setPCoitalFrequencyModerateUnmarriedCategory3Factor(
			double _pCoitalFrequencyModerateUnmarriedCategory3Factor) {
		pCoitalFrequencyModerateUnmarriedCategory3Factor = _pCoitalFrequencyModerateUnmarriedCategory3Factor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Unmarried Category 2 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateUnmarriedCategory2Factor() {
		return pCoitalFrequencyModerateUnmarriedCategory2Factor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Unmarried Category 2 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateUnmarriedCategory2Factor the new P Coital Frequency Moderate Unmarried Category 2 Factor value
	 */

	public void setPCoitalFrequencyModerateUnmarriedCategory2Factor(
			double _pCoitalFrequencyModerateUnmarriedCategory2Factor) {
		pCoitalFrequencyModerateUnmarriedCategory2Factor = _pCoitalFrequencyModerateUnmarriedCategory2Factor;
	}
	/**
	 * Gets the P Coital Frequency Moderate Unmarried Category 4 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPCoitalFrequencyModerateUnmarriedCategory4Factor() {
		return pCoitalFrequencyModerateUnmarriedCategory4Factor;
	}

	/**
	 * Sets the P Coital Frequency Moderate Unmarried Category 4 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pCoitalFrequencyModerateUnmarriedCategory4Factor the new P Coital Frequency Moderate Unmarried Category 4 Factor value
	 */

	public void setPCoitalFrequencyModerateUnmarriedCategory4Factor(
			double _pCoitalFrequencyModerateUnmarriedCategory4Factor) {
		pCoitalFrequencyModerateUnmarriedCategory4Factor = _pCoitalFrequencyModerateUnmarriedCategory4Factor;
	}
	/**
	 * Gets the All Output File property for Relationships And Pregnancy.
	 * @return 
	 */

	public String getAllOutputFile() {
		return allOutputFile;
	}

	/**
	 * Sets the All Output File property for Relationships And Pregnancy.
	 * 
	 * @param _allOutputFile the new All Output File value
	 */

	public void setAllOutputFile(String _allOutputFile) {
		allOutputFile = _allOutputFile;
	}
	/**
	 * Gets the Output Data property for Relationships And Pregnancy.
	 * @return 
	 */

	public boolean isOutputData() {
		return outputData;
	}

	/**
	 * Sets the Output Data property for Relationships And Pregnancy.
	 * 
	 * @param _outputData the new Output Data value
	 */

	public void setOutputData(boolean _outputData) {
		outputData = _outputData;
	}
	/**
	 * Gets the Write Periods property for Relationships And Pregnancy.
	 * @return 
	 */

	public String getWritePeriods() {
		return writePeriods;
	}

	/**
	 * Sets the Write Periods property for Relationships And Pregnancy.
	 * 
	 * @param _writePeriods the new Write Periods value
	 */

	public void setWritePeriods(String _writePeriods) {
		writePeriods = _writePeriods;
	}
	/**
	 * Gets the P Sterilize Male Married Factor Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleMarriedFactorBase() {
		return pSterilizeMaleMarriedFactorBase;
	}

	/**
	 * Sets the P Sterilize Male Married Factor Base property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleMarriedFactorBase the new P Sterilize Male Married Factor Base value
	 */

	public void setPSterilizeMaleMarriedFactorBase(
			double _pSterilizeMaleMarriedFactorBase) {
		pSterilizeMaleMarriedFactorBase = _pSterilizeMaleMarriedFactorBase;
	}
	/**
	 * Gets the P Sterilize Male Married 15 to 19 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleMarried15to19Factor() {
		return pSterilizeMaleMarried15to19Factor;
	}

	/**
	 * Sets the P Sterilize Male Married 15 to 19 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleMarried15to19Factor the new P Sterilize Male Married 15 to 19 Factor value
	 */

	public void setPSterilizeMaleMarried15to19Factor(
			double _pSterilizeMaleMarried15to19Factor) {
		pSterilizeMaleMarried15to19Factor = _pSterilizeMaleMarried15to19Factor;
	}
	/**
	 * Gets the P Sterilize Male Married 20 to 24 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleMarried20to24Factor() {
		return pSterilizeMaleMarried20to24Factor;
	}

	/**
	 * Sets the P Sterilize Male Married 20 to 24 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleMarried20to24Factor the new P Sterilize Male Married 20 to 24 Factor value
	 */

	public void setPSterilizeMaleMarried20to24Factor(
			double _pSterilizeMaleMarried20to24Factor) {
		pSterilizeMaleMarried20to24Factor = _pSterilizeMaleMarried20to24Factor;
	}
	/**
	 * Gets the P Sterilize Male Married 25 to 29 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleMarried25to29Factor() {
		return pSterilizeMaleMarried25to29Factor;
	}

	/**
	 * Sets the P Sterilize Male Married 25 to 29 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleMarried25to29Factor the new P Sterilize Male Married 25 to 29 Factor value
	 */

	public void setPSterilizeMaleMarried25to29Factor(
			double _pSterilizeMaleMarried25to29Factor) {
		pSterilizeMaleMarried25to29Factor = _pSterilizeMaleMarried25to29Factor;
	}
	/**
	 * Gets the P Sterilize Male Married 30 to 44 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleMarried30to44Factor() {
		return pSterilizeMaleMarried30to44Factor;
	}

	/**
	 * Sets the P Sterilize Male Married 30 to 44 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleMarried30to44Factor the new P Sterilize Male Married 30 to 44 Factor value
	 */

	public void setPSterilizeMaleMarried30to44Factor(
			double _pSterilizeMaleMarried30to44Factor) {
		pSterilizeMaleMarried30to44Factor = _pSterilizeMaleMarried30to44Factor;
	}
	/**
	 * Gets the P Sterilize Male Married NHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleMarriedNHSFactor() {
		return pSterilizeMaleMarriedNHSFactor;
	}

	/**
	 * Sets the P Sterilize Male Married NHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleMarriedNHSFactor the new P Sterilize Male Married NHS Factor value
	 */

	public void setPSterilizeMaleMarriedNHSFactor(
			double _pSterilizeMaleMarriedNHSFactor) {
		pSterilizeMaleMarriedNHSFactor = _pSterilizeMaleMarriedNHSFactor;
	}
	/**
	 * Gets the P Sterilize Male Married PHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleMarriedPHSFactor() {
		return pSterilizeMaleMarriedPHSFactor;
	}

	/**
	 * Sets the P Sterilize Male Married PHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleMarriedPHSFactor the new P Sterilize Male Married PHS Factor value
	 */

	public void setPSterilizeMaleMarriedPHSFactor(
			double _pSterilizeMaleMarriedPHSFactor) {
		pSterilizeMaleMarriedPHSFactor = _pSterilizeMaleMarriedPHSFactor;
	}
	/**
	 * Gets the P Sterilize Male Married HS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleMarriedHSFactor() {
		return pSterilizeMaleMarriedHSFactor;
	}

	/**
	 * Sets the P Sterilize Male Married HS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleMarriedHSFactor the new P Sterilize Male Married HS Factor value
	 */

	public void setPSterilizeMaleMarriedHSFactor(
			double _pSterilizeMaleMarriedHSFactor) {
		pSterilizeMaleMarriedHSFactor = _pSterilizeMaleMarriedHSFactor;
	}
	/**
	 * Gets the P Sterilize Male Married Other Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleMarriedOtherFactor() {
		return pSterilizeMaleMarriedOtherFactor;
	}

	/**
	 * Sets the P Sterilize Male Married Other Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleMarriedOtherFactor the new P Sterilize Male Married Other Factor value
	 */

	public void setPSterilizeMaleMarriedOtherFactor(
			double _pSterilizeMaleMarriedOtherFactor) {
		pSterilizeMaleMarriedOtherFactor = _pSterilizeMaleMarriedOtherFactor;
	}
	/**
	 * Gets the P Sterilize Male Married Black Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleMarriedBlackFactor() {
		return pSterilizeMaleMarriedBlackFactor;
	}

	/**
	 * Sets the P Sterilize Male Married Black Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleMarriedBlackFactor the new P Sterilize Male Married Black Factor value
	 */

	public void setPSterilizeMaleMarriedBlackFactor(
			double _pSterilizeMaleMarriedBlackFactor) {
		pSterilizeMaleMarriedBlackFactor = _pSterilizeMaleMarriedBlackFactor;
	}
	/**
	 * Gets the P Sterilize Male Married Hispanic Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleMarriedHispanicFactor() {
		return pSterilizeMaleMarriedHispanicFactor;
	}

	/**
	 * Sets the P Sterilize Male Married Hispanic Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleMarriedHispanicFactor the new P Sterilize Male Married Hispanic Factor value
	 */

	public void setPSterilizeMaleMarriedHispanicFactor(
			double _pSterilizeMaleMarriedHispanicFactor) {
		pSterilizeMaleMarriedHispanicFactor = _pSterilizeMaleMarriedHispanicFactor;
	}
	/**
	 * Gets the P Sterilize Male Married White Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleMarriedWhiteFactor() {
		return pSterilizeMaleMarriedWhiteFactor;
	}

	/**
	 * Sets the P Sterilize Male Married White Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleMarriedWhiteFactor the new P Sterilize Male Married White Factor value
	 */

	public void setPSterilizeMaleMarriedWhiteFactor(
			double _pSterilizeMaleMarriedWhiteFactor) {
		pSterilizeMaleMarriedWhiteFactor = _pSterilizeMaleMarriedWhiteFactor;
	}
	/**
	 * Gets the P Sterilize Male Married Category 1 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleMarriedCategory1Factor() {
		return pSterilizeMaleMarriedCategory1Factor;
	}

	/**
	 * Sets the P Sterilize Male Married Category 1 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleMarriedCategory1Factor the new P Sterilize Male Married Category 1 Factor value
	 */

	public void setPSterilizeMaleMarriedCategory1Factor(
			double _pSterilizeMaleMarriedCategory1Factor) {
		pSterilizeMaleMarriedCategory1Factor = _pSterilizeMaleMarriedCategory1Factor;
	}
	/**
	 * Gets the P Sterilize Male Married Category 3 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleMarriedCategory3Factor() {
		return pSterilizeMaleMarriedCategory3Factor;
	}

	/**
	 * Sets the P Sterilize Male Married Category 3 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleMarriedCategory3Factor the new P Sterilize Male Married Category 3 Factor value
	 */

	public void setPSterilizeMaleMarriedCategory3Factor(
			double _pSterilizeMaleMarriedCategory3Factor) {
		pSterilizeMaleMarriedCategory3Factor = _pSterilizeMaleMarriedCategory3Factor;
	}
	/**
	 * Gets the P Sterilize Male Married Category 2 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleMarriedCategory2Factor() {
		return pSterilizeMaleMarriedCategory2Factor;
	}

	/**
	 * Sets the P Sterilize Male Married Category 2 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleMarriedCategory2Factor the new P Sterilize Male Married Category 2 Factor value
	 */

	public void setPSterilizeMaleMarriedCategory2Factor(
			double _pSterilizeMaleMarriedCategory2Factor) {
		pSterilizeMaleMarriedCategory2Factor = _pSterilizeMaleMarriedCategory2Factor;
	}
	/**
	 * Gets the P Sterilize Male Married Category 4 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleMarriedCategory4Factor() {
		return pSterilizeMaleMarriedCategory4Factor;
	}

	/**
	 * Sets the P Sterilize Male Married Category 4 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleMarriedCategory4Factor the new P Sterilize Male Married Category 4 Factor value
	 */

	public void setPSterilizeMaleMarriedCategory4Factor(
			double _pSterilizeMaleMarriedCategory4Factor) {
		pSterilizeMaleMarriedCategory4Factor = _pSterilizeMaleMarriedCategory4Factor;
	}
	/**
	 * Gets the P Sterilize Male Married Very Low Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleMarriedVeryLowFrequencyFactor() {
		return pSterilizeMaleMarriedVeryLowFrequencyFactor;
	}

	/**
	 * Sets the P Sterilize Male Married Very Low Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleMarriedVeryLowFrequencyFactor the new P Sterilize Male Married Very Low Frequency Factor value
	 */

	public void setPSterilizeMaleMarriedVeryLowFrequencyFactor(
			double _pSterilizeMaleMarriedVeryLowFrequencyFactor) {
		pSterilizeMaleMarriedVeryLowFrequencyFactor = _pSterilizeMaleMarriedVeryLowFrequencyFactor;
	}
	/**
	 * Gets the P Sterilize Male Married High Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleMarriedHighFrequencyFactor() {
		return pSterilizeMaleMarriedHighFrequencyFactor;
	}

	/**
	 * Sets the P Sterilize Male Married High Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleMarriedHighFrequencyFactor the new P Sterilize Male Married High Frequency Factor value
	 */

	public void setPSterilizeMaleMarriedHighFrequencyFactor(
			double _pSterilizeMaleMarriedHighFrequencyFactor) {
		pSterilizeMaleMarriedHighFrequencyFactor = _pSterilizeMaleMarriedHighFrequencyFactor;
	}
	/**
	 * Gets the P Sterilize Male Married Moderate Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleMarriedModerateFrequencyFactor() {
		return pSterilizeMaleMarriedModerateFrequencyFactor;
	}

	/**
	 * Sets the P Sterilize Male Married Moderate Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleMarriedModerateFrequencyFactor the new P Sterilize Male Married Moderate Frequency Factor value
	 */

	public void setPSterilizeMaleMarriedModerateFrequencyFactor(
			double _pSterilizeMaleMarriedModerateFrequencyFactor) {
		pSterilizeMaleMarriedModerateFrequencyFactor = _pSterilizeMaleMarriedModerateFrequencyFactor;
	}
	/**
	 * Gets the P Sterilize Male Married Partner Sterilized Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleMarriedPartnerSterilizedFactor() {
		return pSterilizeMaleMarriedPartnerSterilizedFactor;
	}

	/**
	 * Sets the P Sterilize Male Married Partner Sterilized Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleMarriedPartnerSterilizedFactor the new P Sterilize Male Married Partner Sterilized Factor value
	 */

	public void setPSterilizeMaleMarriedPartnerSterilizedFactor(
			double _pSterilizeMaleMarriedPartnerSterilizedFactor) {
		pSterilizeMaleMarriedPartnerSterilizedFactor = _pSterilizeMaleMarriedPartnerSterilizedFactor;
	}
	/**
	 * Gets the P Sterilize Male Married Other Contraception Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleMarriedOtherContraceptionFactor() {
		return pSterilizeMaleMarriedOtherContraceptionFactor;
	}

	/**
	 * Sets the P Sterilize Male Married Other Contraception Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleMarriedOtherContraceptionFactor the new P Sterilize Male Married Other Contraception Factor value
	 */

	public void setPSterilizeMaleMarriedOtherContraceptionFactor(
			double _pSterilizeMaleMarriedOtherContraceptionFactor) {
		pSterilizeMaleMarriedOtherContraceptionFactor = _pSterilizeMaleMarriedOtherContraceptionFactor;
	}
	/**
	 * Gets the P Sterilize Female Married Factor Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleMarriedFactorBase() {
		return pSterilizeFemaleMarriedFactorBase;
	}

	/**
	 * Sets the P Sterilize Female Married Factor Base property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleMarriedFactorBase the new P Sterilize Female Married Factor Base value
	 */

	public void setPSterilizeFemaleMarriedFactorBase(
			double _pSterilizeFemaleMarriedFactorBase) {
		pSterilizeFemaleMarriedFactorBase = _pSterilizeFemaleMarriedFactorBase;
	}
	/**
	 * Gets the P Sterilize Female Married 15 to 19 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleMarried15to19Factor() {
		return pSterilizeFemaleMarried15to19Factor;
	}

	/**
	 * Sets the P Sterilize Female Married 15 to 19 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleMarried15to19Factor the new P Sterilize Female Married 15 to 19 Factor value
	 */

	public void setPSterilizeFemaleMarried15to19Factor(
			double _pSterilizeFemaleMarried15to19Factor) {
		pSterilizeFemaleMarried15to19Factor = _pSterilizeFemaleMarried15to19Factor;
	}
	/**
	 * Gets the P Sterilize Female Married 20 to 24 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleMarried20to24Factor() {
		return pSterilizeFemaleMarried20to24Factor;
	}

	/**
	 * Sets the P Sterilize Female Married 20 to 24 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleMarried20to24Factor the new P Sterilize Female Married 20 to 24 Factor value
	 */

	public void setPSterilizeFemaleMarried20to24Factor(
			double _pSterilizeFemaleMarried20to24Factor) {
		pSterilizeFemaleMarried20to24Factor = _pSterilizeFemaleMarried20to24Factor;
	}
	/**
	 * Gets the P Sterilize Female Married 25 to 29 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleMarried25to29Factor() {
		return pSterilizeFemaleMarried25to29Factor;
	}

	/**
	 * Sets the P Sterilize Female Married 25 to 29 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleMarried25to29Factor the new P Sterilize Female Married 25 to 29 Factor value
	 */

	public void setPSterilizeFemaleMarried25to29Factor(
			double _pSterilizeFemaleMarried25to29Factor) {
		pSterilizeFemaleMarried25to29Factor = _pSterilizeFemaleMarried25to29Factor;
	}
	/**
	 * Gets the P Sterilize Female Married 30 to 44 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleMarried30to44Factor() {
		return pSterilizeFemaleMarried30to44Factor;
	}

	/**
	 * Sets the P Sterilize Female Married 30 to 44 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleMarried30to44Factor the new P Sterilize Female Married 30 to 44 Factor value
	 */

	public void setPSterilizeFemaleMarried30to44Factor(
			double _pSterilizeFemaleMarried30to44Factor) {
		pSterilizeFemaleMarried30to44Factor = _pSterilizeFemaleMarried30to44Factor;
	}
	/**
	 * Gets the P Sterilize Female Married NHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleMarriedNHSFactor() {
		return pSterilizeFemaleMarriedNHSFactor;
	}

	/**
	 * Sets the P Sterilize Female Married NHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleMarriedNHSFactor the new P Sterilize Female Married NHS Factor value
	 */

	public void setPSterilizeFemaleMarriedNHSFactor(
			double _pSterilizeFemaleMarriedNHSFactor) {
		pSterilizeFemaleMarriedNHSFactor = _pSterilizeFemaleMarriedNHSFactor;
	}
	/**
	 * Gets the P Sterilize Female Married PHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleMarriedPHSFactor() {
		return pSterilizeFemaleMarriedPHSFactor;
	}

	/**
	 * Sets the P Sterilize Female Married PHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleMarriedPHSFactor the new P Sterilize Female Married PHS Factor value
	 */

	public void setPSterilizeFemaleMarriedPHSFactor(
			double _pSterilizeFemaleMarriedPHSFactor) {
		pSterilizeFemaleMarriedPHSFactor = _pSterilizeFemaleMarriedPHSFactor;
	}
	/**
	 * Gets the P Sterilize Female Married HS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleMarriedHSFactor() {
		return pSterilizeFemaleMarriedHSFactor;
	}

	/**
	 * Sets the P Sterilize Female Married HS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleMarriedHSFactor the new P Sterilize Female Married HS Factor value
	 */

	public void setPSterilizeFemaleMarriedHSFactor(
			double _pSterilizeFemaleMarriedHSFactor) {
		pSterilizeFemaleMarriedHSFactor = _pSterilizeFemaleMarriedHSFactor;
	}
	/**
	 * Gets the P Sterilize Female Married Other Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleMarriedOtherFactor() {
		return pSterilizeFemaleMarriedOtherFactor;
	}

	/**
	 * Sets the P Sterilize Female Married Other Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleMarriedOtherFactor the new P Sterilize Female Married Other Factor value
	 */

	public void setPSterilizeFemaleMarriedOtherFactor(
			double _pSterilizeFemaleMarriedOtherFactor) {
		pSterilizeFemaleMarriedOtherFactor = _pSterilizeFemaleMarriedOtherFactor;
	}
	/**
	 * Gets the P Sterilize Female Married Black Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleMarriedBlackFactor() {
		return pSterilizeFemaleMarriedBlackFactor;
	}

	/**
	 * Sets the P Sterilize Female Married Black Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleMarriedBlackFactor the new P Sterilize Female Married Black Factor value
	 */

	public void setPSterilizeFemaleMarriedBlackFactor(
			double _pSterilizeFemaleMarriedBlackFactor) {
		pSterilizeFemaleMarriedBlackFactor = _pSterilizeFemaleMarriedBlackFactor;
	}
	/**
	 * Gets the P Sterilize Female Married Hispanic Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleMarriedHispanicFactor() {
		return pSterilizeFemaleMarriedHispanicFactor;
	}

	/**
	 * Sets the P Sterilize Female Married Hispanic Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleMarriedHispanicFactor the new P Sterilize Female Married Hispanic Factor value
	 */

	public void setPSterilizeFemaleMarriedHispanicFactor(
			double _pSterilizeFemaleMarriedHispanicFactor) {
		pSterilizeFemaleMarriedHispanicFactor = _pSterilizeFemaleMarriedHispanicFactor;
	}
	/**
	 * Gets the P Sterilize Female Married White Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleMarriedWhiteFactor() {
		return pSterilizeFemaleMarriedWhiteFactor;
	}

	/**
	 * Sets the P Sterilize Female Married White Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleMarriedWhiteFactor the new P Sterilize Female Married White Factor value
	 */

	public void setPSterilizeFemaleMarriedWhiteFactor(
			double _pSterilizeFemaleMarriedWhiteFactor) {
		pSterilizeFemaleMarriedWhiteFactor = _pSterilizeFemaleMarriedWhiteFactor;
	}
	/**
	 * Gets the P Sterilize Female Married Category 1 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleMarriedCategory1Factor() {
		return pSterilizeFemaleMarriedCategory1Factor;
	}

	/**
	 * Sets the P Sterilize Female Married Category 1 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleMarriedCategory1Factor the new P Sterilize Female Married Category 1 Factor value
	 */

	public void setPSterilizeFemaleMarriedCategory1Factor(
			double _pSterilizeFemaleMarriedCategory1Factor) {
		pSterilizeFemaleMarriedCategory1Factor = _pSterilizeFemaleMarriedCategory1Factor;
	}
	/**
	 * Gets the P Sterilize Female Married Category 3 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleMarriedCategory3Factor() {
		return pSterilizeFemaleMarriedCategory3Factor;
	}

	/**
	 * Sets the P Sterilize Female Married Category 3 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleMarriedCategory3Factor the new P Sterilize Female Married Category 3 Factor value
	 */

	public void setPSterilizeFemaleMarriedCategory3Factor(
			double _pSterilizeFemaleMarriedCategory3Factor) {
		pSterilizeFemaleMarriedCategory3Factor = _pSterilizeFemaleMarriedCategory3Factor;
	}
	/**
	 * Gets the P Sterilize Female Married Category 2 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleMarriedCategory2Factor() {
		return pSterilizeFemaleMarriedCategory2Factor;
	}

	/**
	 * Sets the P Sterilize Female Married Category 2 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleMarriedCategory2Factor the new P Sterilize Female Married Category 2 Factor value
	 */

	public void setPSterilizeFemaleMarriedCategory2Factor(
			double _pSterilizeFemaleMarriedCategory2Factor) {
		pSterilizeFemaleMarriedCategory2Factor = _pSterilizeFemaleMarriedCategory2Factor;
	}
	/**
	 * Gets the P Sterilize Female Married Category 4 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleMarriedCategory4Factor() {
		return pSterilizeFemaleMarriedCategory4Factor;
	}

	/**
	 * Sets the P Sterilize Female Married Category 4 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleMarriedCategory4Factor the new P Sterilize Female Married Category 4 Factor value
	 */

	public void setPSterilizeFemaleMarriedCategory4Factor(
			double _pSterilizeFemaleMarriedCategory4Factor) {
		pSterilizeFemaleMarriedCategory4Factor = _pSterilizeFemaleMarriedCategory4Factor;
	}
	/**
	 * Gets the P Sterilize Female Married Very Low Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleMarriedVeryLowFrequencyFactor() {
		return pSterilizeFemaleMarriedVeryLowFrequencyFactor;
	}

	/**
	 * Sets the P Sterilize Female Married Very Low Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleMarriedVeryLowFrequencyFactor the new P Sterilize Female Married Very Low Frequency Factor value
	 */

	public void setPSterilizeFemaleMarriedVeryLowFrequencyFactor(
			double _pSterilizeFemaleMarriedVeryLowFrequencyFactor) {
		pSterilizeFemaleMarriedVeryLowFrequencyFactor = _pSterilizeFemaleMarriedVeryLowFrequencyFactor;
	}
	/**
	 * Gets the P Sterilize Female Married High Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleMarriedHighFrequencyFactor() {
		return pSterilizeFemaleMarriedHighFrequencyFactor;
	}

	/**
	 * Sets the P Sterilize Female Married High Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleMarriedHighFrequencyFactor the new P Sterilize Female Married High Frequency Factor value
	 */

	public void setPSterilizeFemaleMarriedHighFrequencyFactor(
			double _pSterilizeFemaleMarriedHighFrequencyFactor) {
		pSterilizeFemaleMarriedHighFrequencyFactor = _pSterilizeFemaleMarriedHighFrequencyFactor;
	}
	/**
	 * Gets the P Sterilize Female Married Moderate Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleMarriedModerateFrequencyFactor() {
		return pSterilizeFemaleMarriedModerateFrequencyFactor;
	}

	/**
	 * Sets the P Sterilize Female Married Moderate Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleMarriedModerateFrequencyFactor the new P Sterilize Female Married Moderate Frequency Factor value
	 */

	public void setPSterilizeFemaleMarriedModerateFrequencyFactor(
			double _pSterilizeFemaleMarriedModerateFrequencyFactor) {
		pSterilizeFemaleMarriedModerateFrequencyFactor = _pSterilizeFemaleMarriedModerateFrequencyFactor;
	}
	/**
	 * Gets the P Sterilize Female Married Partner Sterilized Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleMarriedPartnerSterilizedFactor() {
		return pSterilizeFemaleMarriedPartnerSterilizedFactor;
	}

	/**
	 * Sets the P Sterilize Female Married Partner Sterilized Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleMarriedPartnerSterilizedFactor the new P Sterilize Female Married Partner Sterilized Factor value
	 */

	public void setPSterilizeFemaleMarriedPartnerSterilizedFactor(
			double _pSterilizeFemaleMarriedPartnerSterilizedFactor) {
		pSterilizeFemaleMarriedPartnerSterilizedFactor = _pSterilizeFemaleMarriedPartnerSterilizedFactor;
	}
	/**
	 * Gets the P Sterilize Female Married Other Contraception Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleMarriedOtherContraceptionFactor() {
		return pSterilizeFemaleMarriedOtherContraceptionFactor;
	}

	/**
	 * Sets the P Sterilize Female Married Other Contraception Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleMarriedOtherContraceptionFactor the new P Sterilize Female Married Other Contraception Factor value
	 */

	public void setPSterilizeFemaleMarriedOtherContraceptionFactor(
			double _pSterilizeFemaleMarriedOtherContraceptionFactor) {
		pSterilizeFemaleMarriedOtherContraceptionFactor = _pSterilizeFemaleMarriedOtherContraceptionFactor;
	}
	/**
	 * Gets the P Sterilize Male Unmarried Factor Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleUnmarriedFactorBase() {
		return pSterilizeMaleUnmarriedFactorBase;
	}

	/**
	 * Sets the P Sterilize Male Unmarried Factor Base property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleUnmarriedFactorBase the new P Sterilize Male Unmarried Factor Base value
	 */

	public void setPSterilizeMaleUnmarriedFactorBase(
			double _pSterilizeMaleUnmarriedFactorBase) {
		pSterilizeMaleUnmarriedFactorBase = _pSterilizeMaleUnmarriedFactorBase;
	}
	/**
	 * Gets the P Sterilize Male Unmarried 15 to 19 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleUnmarried15to19Factor() {
		return pSterilizeMaleUnmarried15to19Factor;
	}

	/**
	 * Sets the P Sterilize Male Unmarried 15 to 19 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleUnmarried15to19Factor the new P Sterilize Male Unmarried 15 to 19 Factor value
	 */

	public void setPSterilizeMaleUnmarried15to19Factor(
			double _pSterilizeMaleUnmarried15to19Factor) {
		pSterilizeMaleUnmarried15to19Factor = _pSterilizeMaleUnmarried15to19Factor;
	}
	/**
	 * Gets the P Sterilize Male Unmarried 20 to 24 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleUnmarried20to24Factor() {
		return pSterilizeMaleUnmarried20to24Factor;
	}

	/**
	 * Sets the P Sterilize Male Unmarried 20 to 24 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleUnmarried20to24Factor the new P Sterilize Male Unmarried 20 to 24 Factor value
	 */

	public void setPSterilizeMaleUnmarried20to24Factor(
			double _pSterilizeMaleUnmarried20to24Factor) {
		pSterilizeMaleUnmarried20to24Factor = _pSterilizeMaleUnmarried20to24Factor;
	}
	/**
	 * Gets the P Sterilize Male Unmarried 25 to 29 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleUnmarried25to29Factor() {
		return pSterilizeMaleUnmarried25to29Factor;
	}

	/**
	 * Sets the P Sterilize Male Unmarried 25 to 29 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleUnmarried25to29Factor the new P Sterilize Male Unmarried 25 to 29 Factor value
	 */

	public void setPSterilizeMaleUnmarried25to29Factor(
			double _pSterilizeMaleUnmarried25to29Factor) {
		pSterilizeMaleUnmarried25to29Factor = _pSterilizeMaleUnmarried25to29Factor;
	}
	/**
	 * Gets the P Sterilize Male Unmarried 30 to 44 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleUnmarried30to44Factor() {
		return pSterilizeMaleUnmarried30to44Factor;
	}

	/**
	 * Sets the P Sterilize Male Unmarried 30 to 44 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleUnmarried30to44Factor the new P Sterilize Male Unmarried 30 to 44 Factor value
	 */

	public void setPSterilizeMaleUnmarried30to44Factor(
			double _pSterilizeMaleUnmarried30to44Factor) {
		pSterilizeMaleUnmarried30to44Factor = _pSterilizeMaleUnmarried30to44Factor;
	}
	/**
	 * Gets the P Sterilize Male Unmarried NHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleUnmarriedNHSFactor() {
		return pSterilizeMaleUnmarriedNHSFactor;
	}

	/**
	 * Sets the P Sterilize Male Unmarried NHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleUnmarriedNHSFactor the new P Sterilize Male Unmarried NHS Factor value
	 */

	public void setPSterilizeMaleUnmarriedNHSFactor(
			double _pSterilizeMaleUnmarriedNHSFactor) {
		pSterilizeMaleUnmarriedNHSFactor = _pSterilizeMaleUnmarriedNHSFactor;
	}
	/**
	 * Gets the P Sterilize Male Unmarried PHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleUnmarriedPHSFactor() {
		return pSterilizeMaleUnmarriedPHSFactor;
	}

	/**
	 * Sets the P Sterilize Male Unmarried PHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleUnmarriedPHSFactor the new P Sterilize Male Unmarried PHS Factor value
	 */

	public void setPSterilizeMaleUnmarriedPHSFactor(
			double _pSterilizeMaleUnmarriedPHSFactor) {
		pSterilizeMaleUnmarriedPHSFactor = _pSterilizeMaleUnmarriedPHSFactor;
	}
	/**
	 * Gets the P Sterilize Male Unmarried HS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleUnmarriedHSFactor() {
		return pSterilizeMaleUnmarriedHSFactor;
	}

	/**
	 * Sets the P Sterilize Male Unmarried HS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleUnmarriedHSFactor the new P Sterilize Male Unmarried HS Factor value
	 */

	public void setPSterilizeMaleUnmarriedHSFactor(
			double _pSterilizeMaleUnmarriedHSFactor) {
		pSterilizeMaleUnmarriedHSFactor = _pSterilizeMaleUnmarriedHSFactor;
	}
	/**
	 * Gets the P Sterilize Male Unmarried Other Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleUnmarriedOtherFactor() {
		return pSterilizeMaleUnmarriedOtherFactor;
	}

	/**
	 * Sets the P Sterilize Male Unmarried Other Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleUnmarriedOtherFactor the new P Sterilize Male Unmarried Other Factor value
	 */

	public void setPSterilizeMaleUnmarriedOtherFactor(
			double _pSterilizeMaleUnmarriedOtherFactor) {
		pSterilizeMaleUnmarriedOtherFactor = _pSterilizeMaleUnmarriedOtherFactor;
	}
	/**
	 * Gets the P Sterilize Male Unmarried Black Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleUnmarriedBlackFactor() {
		return pSterilizeMaleUnmarriedBlackFactor;
	}

	/**
	 * Sets the P Sterilize Male Unmarried Black Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleUnmarriedBlackFactor the new P Sterilize Male Unmarried Black Factor value
	 */

	public void setPSterilizeMaleUnmarriedBlackFactor(
			double _pSterilizeMaleUnmarriedBlackFactor) {
		pSterilizeMaleUnmarriedBlackFactor = _pSterilizeMaleUnmarriedBlackFactor;
	}
	/**
	 * Gets the P Sterilize Male Unmarried Hispanic Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleUnmarriedHispanicFactor() {
		return pSterilizeMaleUnmarriedHispanicFactor;
	}

	/**
	 * Sets the P Sterilize Male Unmarried Hispanic Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleUnmarriedHispanicFactor the new P Sterilize Male Unmarried Hispanic Factor value
	 */

	public void setPSterilizeMaleUnmarriedHispanicFactor(
			double _pSterilizeMaleUnmarriedHispanicFactor) {
		pSterilizeMaleUnmarriedHispanicFactor = _pSterilizeMaleUnmarriedHispanicFactor;
	}
	/**
	 * Gets the P Sterilize Male Unmarried White Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleUnmarriedWhiteFactor() {
		return pSterilizeMaleUnmarriedWhiteFactor;
	}

	/**
	 * Sets the P Sterilize Male Unmarried White Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleUnmarriedWhiteFactor the new P Sterilize Male Unmarried White Factor value
	 */

	public void setPSterilizeMaleUnmarriedWhiteFactor(
			double _pSterilizeMaleUnmarriedWhiteFactor) {
		pSterilizeMaleUnmarriedWhiteFactor = _pSterilizeMaleUnmarriedWhiteFactor;
	}
	/**
	 * Gets the P Sterilize Male Unmarried Category 1 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleUnmarriedCategory1Factor() {
		return pSterilizeMaleUnmarriedCategory1Factor;
	}

	/**
	 * Sets the P Sterilize Male Unmarried Category 1 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleUnmarriedCategory1Factor the new P Sterilize Male Unmarried Category 1 Factor value
	 */

	public void setPSterilizeMaleUnmarriedCategory1Factor(
			double _pSterilizeMaleUnmarriedCategory1Factor) {
		pSterilizeMaleUnmarriedCategory1Factor = _pSterilizeMaleUnmarriedCategory1Factor;
	}
	/**
	 * Gets the P Sterilize Male Unmarried Category 3 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleUnmarriedCategory3Factor() {
		return pSterilizeMaleUnmarriedCategory3Factor;
	}

	/**
	 * Sets the P Sterilize Male Unmarried Category 3 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleUnmarriedCategory3Factor the new P Sterilize Male Unmarried Category 3 Factor value
	 */

	public void setPSterilizeMaleUnmarriedCategory3Factor(
			double _pSterilizeMaleUnmarriedCategory3Factor) {
		pSterilizeMaleUnmarriedCategory3Factor = _pSterilizeMaleUnmarriedCategory3Factor;
	}
	/**
	 * Gets the P Sterilize Male Unmarried Category 2 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleUnmarriedCategory2Factor() {
		return pSterilizeMaleUnmarriedCategory2Factor;
	}

	/**
	 * Sets the P Sterilize Male Unmarried Category 2 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleUnmarriedCategory2Factor the new P Sterilize Male Unmarried Category 2 Factor value
	 */

	public void setPSterilizeMaleUnmarriedCategory2Factor(
			double _pSterilizeMaleUnmarriedCategory2Factor) {
		pSterilizeMaleUnmarriedCategory2Factor = _pSterilizeMaleUnmarriedCategory2Factor;
	}
	/**
	 * Gets the P Sterilize Male Unmarried Category 4 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleUnmarriedCategory4Factor() {
		return pSterilizeMaleUnmarriedCategory4Factor;
	}

	/**
	 * Sets the P Sterilize Male Unmarried Category 4 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleUnmarriedCategory4Factor the new P Sterilize Male Unmarried Category 4 Factor value
	 */

	public void setPSterilizeMaleUnmarriedCategory4Factor(
			double _pSterilizeMaleUnmarriedCategory4Factor) {
		pSterilizeMaleUnmarriedCategory4Factor = _pSterilizeMaleUnmarriedCategory4Factor;
	}
	/**
	 * Gets the P Sterilize Male Unmarried Very Low Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleUnmarriedVeryLowFrequencyFactor() {
		return pSterilizeMaleUnmarriedVeryLowFrequencyFactor;
	}

	/**
	 * Sets the P Sterilize Male Unmarried Very Low Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleUnmarriedVeryLowFrequencyFactor the new P Sterilize Male Unmarried Very Low Frequency Factor value
	 */

	public void setPSterilizeMaleUnmarriedVeryLowFrequencyFactor(
			double _pSterilizeMaleUnmarriedVeryLowFrequencyFactor) {
		pSterilizeMaleUnmarriedVeryLowFrequencyFactor = _pSterilizeMaleUnmarriedVeryLowFrequencyFactor;
	}
	/**
	 * Gets the P Sterilize Male Unmarried High Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleUnmarriedHighFrequencyFactor() {
		return pSterilizeMaleUnmarriedHighFrequencyFactor;
	}

	/**
	 * Sets the P Sterilize Male Unmarried High Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleUnmarriedHighFrequencyFactor the new P Sterilize Male Unmarried High Frequency Factor value
	 */

	public void setPSterilizeMaleUnmarriedHighFrequencyFactor(
			double _pSterilizeMaleUnmarriedHighFrequencyFactor) {
		pSterilizeMaleUnmarriedHighFrequencyFactor = _pSterilizeMaleUnmarriedHighFrequencyFactor;
	}
	/**
	 * Gets the P Sterilize Male Unmarried Moderate Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleUnmarriedModerateFrequencyFactor() {
		return pSterilizeMaleUnmarriedModerateFrequencyFactor;
	}

	/**
	 * Sets the P Sterilize Male Unmarried Moderate Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleUnmarriedModerateFrequencyFactor the new P Sterilize Male Unmarried Moderate Frequency Factor value
	 */

	public void setPSterilizeMaleUnmarriedModerateFrequencyFactor(
			double _pSterilizeMaleUnmarriedModerateFrequencyFactor) {
		pSterilizeMaleUnmarriedModerateFrequencyFactor = _pSterilizeMaleUnmarriedModerateFrequencyFactor;
	}
	/**
	 * Gets the P Sterilize Male Unmarried Partner Sterilized Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleUnmarriedPartnerSterilizedFactor() {
		return pSterilizeMaleUnmarriedPartnerSterilizedFactor;
	}

	/**
	 * Sets the P Sterilize Male Unmarried Partner Sterilized Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleUnmarriedPartnerSterilizedFactor the new P Sterilize Male Unmarried Partner Sterilized Factor value
	 */

	public void setPSterilizeMaleUnmarriedPartnerSterilizedFactor(
			double _pSterilizeMaleUnmarriedPartnerSterilizedFactor) {
		pSterilizeMaleUnmarriedPartnerSterilizedFactor = _pSterilizeMaleUnmarriedPartnerSterilizedFactor;
	}
	/**
	 * Gets the P Sterilize Male Unmarried Other Contraception Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeMaleUnmarriedOtherContraceptionFactor() {
		return pSterilizeMaleUnmarriedOtherContraceptionFactor;
	}

	/**
	 * Sets the P Sterilize Male Unmarried Other Contraception Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeMaleUnmarriedOtherContraceptionFactor the new P Sterilize Male Unmarried Other Contraception Factor value
	 */

	public void setPSterilizeMaleUnmarriedOtherContraceptionFactor(
			double _pSterilizeMaleUnmarriedOtherContraceptionFactor) {
		pSterilizeMaleUnmarriedOtherContraceptionFactor = _pSterilizeMaleUnmarriedOtherContraceptionFactor;
	}
	/**
	 * Gets the P Sterilize Female Unmarried Factor Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleUnmarriedFactorBase() {
		return pSterilizeFemaleUnmarriedFactorBase;
	}

	/**
	 * Sets the P Sterilize Female Unmarried Factor Base property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleUnmarriedFactorBase the new P Sterilize Female Unmarried Factor Base value
	 */

	public void setPSterilizeFemaleUnmarriedFactorBase(
			double _pSterilizeFemaleUnmarriedFactorBase) {
		pSterilizeFemaleUnmarriedFactorBase = _pSterilizeFemaleUnmarriedFactorBase;
	}
	/**
	 * Gets the P Sterilize Female Unmarried 15 to 19 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleUnmarried15to19Factor() {
		return pSterilizeFemaleUnmarried15to19Factor;
	}

	/**
	 * Sets the P Sterilize Female Unmarried 15 to 19 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleUnmarried15to19Factor the new P Sterilize Female Unmarried 15 to 19 Factor value
	 */

	public void setPSterilizeFemaleUnmarried15to19Factor(
			double _pSterilizeFemaleUnmarried15to19Factor) {
		pSterilizeFemaleUnmarried15to19Factor = _pSterilizeFemaleUnmarried15to19Factor;
	}
	/**
	 * Gets the P Sterilize Female Unmarried 20 to 24 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleUnmarried20to24Factor() {
		return pSterilizeFemaleUnmarried20to24Factor;
	}

	/**
	 * Sets the P Sterilize Female Unmarried 20 to 24 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleUnmarried20to24Factor the new P Sterilize Female Unmarried 20 to 24 Factor value
	 */

	public void setPSterilizeFemaleUnmarried20to24Factor(
			double _pSterilizeFemaleUnmarried20to24Factor) {
		pSterilizeFemaleUnmarried20to24Factor = _pSterilizeFemaleUnmarried20to24Factor;
	}
	/**
	 * Gets the P Sterilize Female Unmarried 25 to 29 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleUnmarried25to29Factor() {
		return pSterilizeFemaleUnmarried25to29Factor;
	}

	/**
	 * Sets the P Sterilize Female Unmarried 25 to 29 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleUnmarried25to29Factor the new P Sterilize Female Unmarried 25 to 29 Factor value
	 */

	public void setPSterilizeFemaleUnmarried25to29Factor(
			double _pSterilizeFemaleUnmarried25to29Factor) {
		pSterilizeFemaleUnmarried25to29Factor = _pSterilizeFemaleUnmarried25to29Factor;
	}
	/**
	 * Gets the P Sterilize Female Unmarried 30 to 44 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleUnmarried30to44Factor() {
		return pSterilizeFemaleUnmarried30to44Factor;
	}

	/**
	 * Sets the P Sterilize Female Unmarried 30 to 44 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleUnmarried30to44Factor the new P Sterilize Female Unmarried 30 to 44 Factor value
	 */

	public void setPSterilizeFemaleUnmarried30to44Factor(
			double _pSterilizeFemaleUnmarried30to44Factor) {
		pSterilizeFemaleUnmarried30to44Factor = _pSterilizeFemaleUnmarried30to44Factor;
	}
	/**
	 * Gets the P Sterilize Female Unmarried NHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleUnmarriedNHSFactor() {
		return pSterilizeFemaleUnmarriedNHSFactor;
	}

	/**
	 * Sets the P Sterilize Female Unmarried NHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleUnmarriedNHSFactor the new P Sterilize Female Unmarried NHS Factor value
	 */

	public void setPSterilizeFemaleUnmarriedNHSFactor(
			double _pSterilizeFemaleUnmarriedNHSFactor) {
		pSterilizeFemaleUnmarriedNHSFactor = _pSterilizeFemaleUnmarriedNHSFactor;
	}
	/**
	 * Gets the P Sterilize Female Unmarried PHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleUnmarriedPHSFactor() {
		return pSterilizeFemaleUnmarriedPHSFactor;
	}

	/**
	 * Sets the P Sterilize Female Unmarried PHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleUnmarriedPHSFactor the new P Sterilize Female Unmarried PHS Factor value
	 */

	public void setPSterilizeFemaleUnmarriedPHSFactor(
			double _pSterilizeFemaleUnmarriedPHSFactor) {
		pSterilizeFemaleUnmarriedPHSFactor = _pSterilizeFemaleUnmarriedPHSFactor;
	}
	/**
	 * Gets the P Sterilize Female Unmarried HS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleUnmarriedHSFactor() {
		return pSterilizeFemaleUnmarriedHSFactor;
	}

	/**
	 * Sets the P Sterilize Female Unmarried HS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleUnmarriedHSFactor the new P Sterilize Female Unmarried HS Factor value
	 */

	public void setPSterilizeFemaleUnmarriedHSFactor(
			double _pSterilizeFemaleUnmarriedHSFactor) {
		pSterilizeFemaleUnmarriedHSFactor = _pSterilizeFemaleUnmarriedHSFactor;
	}
	/**
	 * Gets the P Sterilize Female Unmarried Other Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleUnmarriedOtherFactor() {
		return pSterilizeFemaleUnmarriedOtherFactor;
	}

	/**
	 * Sets the P Sterilize Female Unmarried Other Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleUnmarriedOtherFactor the new P Sterilize Female Unmarried Other Factor value
	 */

	public void setPSterilizeFemaleUnmarriedOtherFactor(
			double _pSterilizeFemaleUnmarriedOtherFactor) {
		pSterilizeFemaleUnmarriedOtherFactor = _pSterilizeFemaleUnmarriedOtherFactor;
	}
	/**
	 * Gets the P Sterilize Female Unmarried Black Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleUnmarriedBlackFactor() {
		return pSterilizeFemaleUnmarriedBlackFactor;
	}

	/**
	 * Sets the P Sterilize Female Unmarried Black Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleUnmarriedBlackFactor the new P Sterilize Female Unmarried Black Factor value
	 */

	public void setPSterilizeFemaleUnmarriedBlackFactor(
			double _pSterilizeFemaleUnmarriedBlackFactor) {
		pSterilizeFemaleUnmarriedBlackFactor = _pSterilizeFemaleUnmarriedBlackFactor;
	}
	/**
	 * Gets the P Sterilize Female Unmarried Hispanic Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleUnmarriedHispanicFactor() {
		return pSterilizeFemaleUnmarriedHispanicFactor;
	}

	/**
	 * Sets the P Sterilize Female Unmarried Hispanic Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleUnmarriedHispanicFactor the new P Sterilize Female Unmarried Hispanic Factor value
	 */

	public void setPSterilizeFemaleUnmarriedHispanicFactor(
			double _pSterilizeFemaleUnmarriedHispanicFactor) {
		pSterilizeFemaleUnmarriedHispanicFactor = _pSterilizeFemaleUnmarriedHispanicFactor;
	}
	/**
	 * Gets the P Sterilize Female Unmarried White Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleUnmarriedWhiteFactor() {
		return pSterilizeFemaleUnmarriedWhiteFactor;
	}

	/**
	 * Sets the P Sterilize Female Unmarried White Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleUnmarriedWhiteFactor the new P Sterilize Female Unmarried White Factor value
	 */

	public void setPSterilizeFemaleUnmarriedWhiteFactor(
			double _pSterilizeFemaleUnmarriedWhiteFactor) {
		pSterilizeFemaleUnmarriedWhiteFactor = _pSterilizeFemaleUnmarriedWhiteFactor;
	}
	/**
	 * Gets the P Sterilize Female Unmarried Category 1 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleUnmarriedCategory1Factor() {
		return pSterilizeFemaleUnmarriedCategory1Factor;
	}

	/**
	 * Sets the P Sterilize Female Unmarried Category 1 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleUnmarriedCategory1Factor the new P Sterilize Female Unmarried Category 1 Factor value
	 */

	public void setPSterilizeFemaleUnmarriedCategory1Factor(
			double _pSterilizeFemaleUnmarriedCategory1Factor) {
		pSterilizeFemaleUnmarriedCategory1Factor = _pSterilizeFemaleUnmarriedCategory1Factor;
	}
	/**
	 * Gets the P Sterilize Female Unmarried Category 3 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleUnmarriedCategory3Factor() {
		return pSterilizeFemaleUnmarriedCategory3Factor;
	}

	/**
	 * Sets the P Sterilize Female Unmarried Category 3 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleUnmarriedCategory3Factor the new P Sterilize Female Unmarried Category 3 Factor value
	 */

	public void setPSterilizeFemaleUnmarriedCategory3Factor(
			double _pSterilizeFemaleUnmarriedCategory3Factor) {
		pSterilizeFemaleUnmarriedCategory3Factor = _pSterilizeFemaleUnmarriedCategory3Factor;
	}
	/**
	 * Gets the P Sterilize Female Unmarried Category 2 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleUnmarriedCategory2Factor() {
		return pSterilizeFemaleUnmarriedCategory2Factor;
	}

	/**
	 * Sets the P Sterilize Female Unmarried Category 2 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleUnmarriedCategory2Factor the new P Sterilize Female Unmarried Category 2 Factor value
	 */

	public void setPSterilizeFemaleUnmarriedCategory2Factor(
			double _pSterilizeFemaleUnmarriedCategory2Factor) {
		pSterilizeFemaleUnmarriedCategory2Factor = _pSterilizeFemaleUnmarriedCategory2Factor;
	}
	/**
	 * Gets the P Sterilize Female Unmarried Category 4 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleUnmarriedCategory4Factor() {
		return pSterilizeFemaleUnmarriedCategory4Factor;
	}

	/**
	 * Sets the P Sterilize Female Unmarried Category 4 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleUnmarriedCategory4Factor the new P Sterilize Female Unmarried Category 4 Factor value
	 */

	public void setPSterilizeFemaleUnmarriedCategory4Factor(
			double _pSterilizeFemaleUnmarriedCategory4Factor) {
		pSterilizeFemaleUnmarriedCategory4Factor = _pSterilizeFemaleUnmarriedCategory4Factor;
	}
	/**
	 * Gets the P Sterilize Female Unmarried Very Low Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleUnmarriedVeryLowFrequencyFactor() {
		return pSterilizeFemaleUnmarriedVeryLowFrequencyFactor;
	}

	/**
	 * Sets the P Sterilize Female Unmarried Very Low Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleUnmarriedVeryLowFrequencyFactor the new P Sterilize Female Unmarried Very Low Frequency Factor value
	 */

	public void setPSterilizeFemaleUnmarriedVeryLowFrequencyFactor(
			double _pSterilizeFemaleUnmarriedVeryLowFrequencyFactor) {
		pSterilizeFemaleUnmarriedVeryLowFrequencyFactor = _pSterilizeFemaleUnmarriedVeryLowFrequencyFactor;
	}
	/**
	 * Gets the P Sterilize Female Unmarried High Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleUnmarriedHighFrequencyFactor() {
		return pSterilizeFemaleUnmarriedHighFrequencyFactor;
	}

	/**
	 * Sets the P Sterilize Female Unmarried High Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleUnmarriedHighFrequencyFactor the new P Sterilize Female Unmarried High Frequency Factor value
	 */

	public void setPSterilizeFemaleUnmarriedHighFrequencyFactor(
			double _pSterilizeFemaleUnmarriedHighFrequencyFactor) {
		pSterilizeFemaleUnmarriedHighFrequencyFactor = _pSterilizeFemaleUnmarriedHighFrequencyFactor;
	}
	/**
	 * Gets the P Sterilize Female Unmarried Moderate Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleUnmarriedModerateFrequencyFactor() {
		return pSterilizeFemaleUnmarriedModerateFrequencyFactor;
	}

	/**
	 * Sets the P Sterilize Female Unmarried Moderate Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleUnmarriedModerateFrequencyFactor the new P Sterilize Female Unmarried Moderate Frequency Factor value
	 */

	public void setPSterilizeFemaleUnmarriedModerateFrequencyFactor(
			double _pSterilizeFemaleUnmarriedModerateFrequencyFactor) {
		pSterilizeFemaleUnmarriedModerateFrequencyFactor = _pSterilizeFemaleUnmarriedModerateFrequencyFactor;
	}
	/**
	 * Gets the P Sterilize Female Unmarried Partner Sterilized Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleUnmarriedPartnerSterilizedFactor() {
		return pSterilizeFemaleUnmarriedPartnerSterilizedFactor;
	}

	/**
	 * Sets the P Sterilize Female Unmarried Partner Sterilized Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleUnmarriedPartnerSterilizedFactor the new P Sterilize Female Unmarried Partner Sterilized Factor value
	 */

	public void setPSterilizeFemaleUnmarriedPartnerSterilizedFactor(
			double _pSterilizeFemaleUnmarriedPartnerSterilizedFactor) {
		pSterilizeFemaleUnmarriedPartnerSterilizedFactor = _pSterilizeFemaleUnmarriedPartnerSterilizedFactor;
	}
	/**
	 * Gets the P Sterilize Female Unmarried Other Contraception Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPSterilizeFemaleUnmarriedOtherContraceptionFactor() {
		return pSterilizeFemaleUnmarriedOtherContraceptionFactor;
	}

	/**
	 * Sets the P Sterilize Female Unmarried Other Contraception Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pSterilizeFemaleUnmarriedOtherContraceptionFactor the new P Sterilize Female Unmarried Other Contraception Factor value
	 */

	public void setPSterilizeFemaleUnmarriedOtherContraceptionFactor(
			double _pSterilizeFemaleUnmarriedOtherContraceptionFactor) {
		pSterilizeFemaleUnmarriedOtherContraceptionFactor = _pSterilizeFemaleUnmarriedOtherContraceptionFactor;
	}
	/**
	 * Gets the P Pill Use Married Factor Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseMarriedFactorBase() {
		return pPillUseMarriedFactorBase;
	}

	/**
	 * Sets the P Pill Use Married Factor Base property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseMarriedFactorBase the new P Pill Use Married Factor Base value
	 */

	public void setPPillUseMarriedFactorBase(double _pPillUseMarriedFactorBase) {
		pPillUseMarriedFactorBase = _pPillUseMarriedFactorBase;
	}
	/**
	 * Gets the P Pill Use Married 15 to 19 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseMarried15to19Factor() {
		return pPillUseMarried15to19Factor;
	}

	/**
	 * Sets the P Pill Use Married 15 to 19 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseMarried15to19Factor the new P Pill Use Married 15 to 19 Factor value
	 */

	public void setPPillUseMarried15to19Factor(
			double _pPillUseMarried15to19Factor) {
		pPillUseMarried15to19Factor = _pPillUseMarried15to19Factor;
	}
	/**
	 * Gets the P Pill Use Married 20 to 24 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseMarried20to24Factor() {
		return pPillUseMarried20to24Factor;
	}

	/**
	 * Sets the P Pill Use Married 20 to 24 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseMarried20to24Factor the new P Pill Use Married 20 to 24 Factor value
	 */

	public void setPPillUseMarried20to24Factor(
			double _pPillUseMarried20to24Factor) {
		pPillUseMarried20to24Factor = _pPillUseMarried20to24Factor;
	}
	/**
	 * Gets the P Pill Use Married 25 to 29 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseMarried25to29Factor() {
		return pPillUseMarried25to29Factor;
	}

	/**
	 * Sets the P Pill Use Married 25 to 29 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseMarried25to29Factor the new P Pill Use Married 25 to 29 Factor value
	 */

	public void setPPillUseMarried25to29Factor(
			double _pPillUseMarried25to29Factor) {
		pPillUseMarried25to29Factor = _pPillUseMarried25to29Factor;
	}
	/**
	 * Gets the P Pill Use Married 30 to 44 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseMarried30to44Factor() {
		return pPillUseMarried30to44Factor;
	}

	/**
	 * Sets the P Pill Use Married 30 to 44 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseMarried30to44Factor the new P Pill Use Married 30 to 44 Factor value
	 */

	public void setPPillUseMarried30to44Factor(
			double _pPillUseMarried30to44Factor) {
		pPillUseMarried30to44Factor = _pPillUseMarried30to44Factor;
	}
	/**
	 * Gets the P Pill Use Married NHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseMarriedNHSFactor() {
		return pPillUseMarriedNHSFactor;
	}

	/**
	 * Sets the P Pill Use Married NHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseMarriedNHSFactor the new P Pill Use Married NHS Factor value
	 */

	public void setPPillUseMarriedNHSFactor(double _pPillUseMarriedNHSFactor) {
		pPillUseMarriedNHSFactor = _pPillUseMarriedNHSFactor;
	}
	/**
	 * Gets the P Pill Use Married PHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseMarriedPHSFactor() {
		return pPillUseMarriedPHSFactor;
	}

	/**
	 * Sets the P Pill Use Married PHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseMarriedPHSFactor the new P Pill Use Married PHS Factor value
	 */

	public void setPPillUseMarriedPHSFactor(double _pPillUseMarriedPHSFactor) {
		pPillUseMarriedPHSFactor = _pPillUseMarriedPHSFactor;
	}
	/**
	 * Gets the P Pill Use Married HS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseMarriedHSFactor() {
		return pPillUseMarriedHSFactor;
	}

	/**
	 * Sets the P Pill Use Married HS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseMarriedHSFactor the new P Pill Use Married HS Factor value
	 */

	public void setPPillUseMarriedHSFactor(double _pPillUseMarriedHSFactor) {
		pPillUseMarriedHSFactor = _pPillUseMarriedHSFactor;
	}
	/**
	 * Gets the P Pill Use Married Other Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseMarriedOtherFactor() {
		return pPillUseMarriedOtherFactor;
	}

	/**
	 * Sets the P Pill Use Married Other Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseMarriedOtherFactor the new P Pill Use Married Other Factor value
	 */

	public void setPPillUseMarriedOtherFactor(double _pPillUseMarriedOtherFactor) {
		pPillUseMarriedOtherFactor = _pPillUseMarriedOtherFactor;
	}
	/**
	 * Gets the P Pill Use Married Black Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseMarriedBlackFactor() {
		return pPillUseMarriedBlackFactor;
	}

	/**
	 * Sets the P Pill Use Married Black Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseMarriedBlackFactor the new P Pill Use Married Black Factor value
	 */

	public void setPPillUseMarriedBlackFactor(double _pPillUseMarriedBlackFactor) {
		pPillUseMarriedBlackFactor = _pPillUseMarriedBlackFactor;
	}
	/**
	 * Gets the P Pill Use Married Hispanic Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseMarriedHispanicFactor() {
		return pPillUseMarriedHispanicFactor;
	}

	/**
	 * Sets the P Pill Use Married Hispanic Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseMarriedHispanicFactor the new P Pill Use Married Hispanic Factor value
	 */

	public void setPPillUseMarriedHispanicFactor(
			double _pPillUseMarriedHispanicFactor) {
		pPillUseMarriedHispanicFactor = _pPillUseMarriedHispanicFactor;
	}
	/**
	 * Gets the P Pill Use Married White Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseMarriedWhiteFactor() {
		return pPillUseMarriedWhiteFactor;
	}

	/**
	 * Sets the P Pill Use Married White Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseMarriedWhiteFactor the new P Pill Use Married White Factor value
	 */

	public void setPPillUseMarriedWhiteFactor(double _pPillUseMarriedWhiteFactor) {
		pPillUseMarriedWhiteFactor = _pPillUseMarriedWhiteFactor;
	}
	/**
	 * Gets the P Pill Use Married Category 1 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseMarriedCategory1Factor() {
		return pPillUseMarriedCategory1Factor;
	}

	/**
	 * Sets the P Pill Use Married Category 1 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseMarriedCategory1Factor the new P Pill Use Married Category 1 Factor value
	 */

	public void setPPillUseMarriedCategory1Factor(
			double _pPillUseMarriedCategory1Factor) {
		pPillUseMarriedCategory1Factor = _pPillUseMarriedCategory1Factor;
	}
	/**
	 * Gets the P Pill Use Married Category 3 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseMarriedCategory3Factor() {
		return pPillUseMarriedCategory3Factor;
	}

	/**
	 * Sets the P Pill Use Married Category 3 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseMarriedCategory3Factor the new P Pill Use Married Category 3 Factor value
	 */

	public void setPPillUseMarriedCategory3Factor(
			double _pPillUseMarriedCategory3Factor) {
		pPillUseMarriedCategory3Factor = _pPillUseMarriedCategory3Factor;
	}
	/**
	 * Gets the P Pill Use Married Category 2 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseMarriedCategory2Factor() {
		return pPillUseMarriedCategory2Factor;
	}

	/**
	 * Sets the P Pill Use Married Category 2 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseMarriedCategory2Factor the new P Pill Use Married Category 2 Factor value
	 */

	public void setPPillUseMarriedCategory2Factor(
			double _pPillUseMarriedCategory2Factor) {
		pPillUseMarriedCategory2Factor = _pPillUseMarriedCategory2Factor;
	}
	/**
	 * Gets the P Pill Use Married Category 4 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseMarriedCategory4Factor() {
		return pPillUseMarriedCategory4Factor;
	}

	/**
	 * Sets the P Pill Use Married Category 4 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseMarriedCategory4Factor the new P Pill Use Married Category 4 Factor value
	 */

	public void setPPillUseMarriedCategory4Factor(
			double _pPillUseMarriedCategory4Factor) {
		pPillUseMarriedCategory4Factor = _pPillUseMarriedCategory4Factor;
	}
	/**
	 * Gets the P Pill Use Married Very Low Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseMarriedVeryLowFrequencyFactor() {
		return pPillUseMarriedVeryLowFrequencyFactor;
	}

	/**
	 * Sets the P Pill Use Married Very Low Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseMarriedVeryLowFrequencyFactor the new P Pill Use Married Very Low Frequency Factor value
	 */

	public void setPPillUseMarriedVeryLowFrequencyFactor(
			double _pPillUseMarriedVeryLowFrequencyFactor) {
		pPillUseMarriedVeryLowFrequencyFactor = _pPillUseMarriedVeryLowFrequencyFactor;
	}
	/**
	 * Gets the P Pill Use Married High Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseMarriedHighFrequencyFactor() {
		return pPillUseMarriedHighFrequencyFactor;
	}

	/**
	 * Sets the P Pill Use Married High Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseMarriedHighFrequencyFactor the new P Pill Use Married High Frequency Factor value
	 */

	public void setPPillUseMarriedHighFrequencyFactor(
			double _pPillUseMarriedHighFrequencyFactor) {
		pPillUseMarriedHighFrequencyFactor = _pPillUseMarriedHighFrequencyFactor;
	}
	/**
	 * Gets the P Pill Use Married Moderate Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseMarriedModerateFrequencyFactor() {
		return pPillUseMarriedModerateFrequencyFactor;
	}

	/**
	 * Sets the P Pill Use Married Moderate Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseMarriedModerateFrequencyFactor the new P Pill Use Married Moderate Frequency Factor value
	 */

	public void setPPillUseMarriedModerateFrequencyFactor(
			double _pPillUseMarriedModerateFrequencyFactor) {
		pPillUseMarriedModerateFrequencyFactor = _pPillUseMarriedModerateFrequencyFactor;
	}
	/**
	 * Gets the P Pill Use Married Partner Sterilized Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseMarriedPartnerSterilizedFactor() {
		return pPillUseMarriedPartnerSterilizedFactor;
	}

	/**
	 * Sets the P Pill Use Married Partner Sterilized Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseMarriedPartnerSterilizedFactor the new P Pill Use Married Partner Sterilized Factor value
	 */

	public void setPPillUseMarriedPartnerSterilizedFactor(
			double _pPillUseMarriedPartnerSterilizedFactor) {
		pPillUseMarriedPartnerSterilizedFactor = _pPillUseMarriedPartnerSterilizedFactor;
	}
	/**
	 * Gets the P Pill Use Married Other Contraception Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseMarriedOtherContraceptionFactor() {
		return pPillUseMarriedOtherContraceptionFactor;
	}

	/**
	 * Sets the P Pill Use Married Other Contraception Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseMarriedOtherContraceptionFactor the new P Pill Use Married Other Contraception Factor value
	 */

	public void setPPillUseMarriedOtherContraceptionFactor(
			double _pPillUseMarriedOtherContraceptionFactor) {
		pPillUseMarriedOtherContraceptionFactor = _pPillUseMarriedOtherContraceptionFactor;
	}
	/**
	 * Gets the P Pill Use Unmarried Factor Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseUnmarriedFactorBase() {
		return pPillUseUnmarriedFactorBase;
	}

	/**
	 * Sets the P Pill Use Unmarried Factor Base property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseUnmarriedFactorBase the new P Pill Use Unmarried Factor Base value
	 */

	public void setPPillUseUnmarriedFactorBase(
			double _pPillUseUnmarriedFactorBase) {
		pPillUseUnmarriedFactorBase = _pPillUseUnmarriedFactorBase;
	}
	/**
	 * Gets the P Pill Use Unmarried 15 to 19 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseUnmarried15to19Factor() {
		return pPillUseUnmarried15to19Factor;
	}

	/**
	 * Sets the P Pill Use Unmarried 15 to 19 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseUnmarried15to19Factor the new P Pill Use Unmarried 15 to 19 Factor value
	 */

	public void setPPillUseUnmarried15to19Factor(
			double _pPillUseUnmarried15to19Factor) {
		pPillUseUnmarried15to19Factor = _pPillUseUnmarried15to19Factor;
	}
	/**
	 * Gets the P Pill Use Unmarried 20 to 24 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseUnmarried20to24Factor() {
		return pPillUseUnmarried20to24Factor;
	}

	/**
	 * Sets the P Pill Use Unmarried 20 to 24 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseUnmarried20to24Factor the new P Pill Use Unmarried 20 to 24 Factor value
	 */

	public void setPPillUseUnmarried20to24Factor(
			double _pPillUseUnmarried20to24Factor) {
		pPillUseUnmarried20to24Factor = _pPillUseUnmarried20to24Factor;
	}
	/**
	 * Gets the P Pill Use Unmarried 25 to 29 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseUnmarried25to29Factor() {
		return pPillUseUnmarried25to29Factor;
	}

	/**
	 * Sets the P Pill Use Unmarried 25 to 29 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseUnmarried25to29Factor the new P Pill Use Unmarried 25 to 29 Factor value
	 */

	public void setPPillUseUnmarried25to29Factor(
			double _pPillUseUnmarried25to29Factor) {
		pPillUseUnmarried25to29Factor = _pPillUseUnmarried25to29Factor;
	}
	/**
	 * Gets the P Pill Use Unmarried 30 to 44 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseUnmarried30to44Factor() {
		return pPillUseUnmarried30to44Factor;
	}

	/**
	 * Sets the P Pill Use Unmarried 30 to 44 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseUnmarried30to44Factor the new P Pill Use Unmarried 30 to 44 Factor value
	 */

	public void setPPillUseUnmarried30to44Factor(
			double _pPillUseUnmarried30to44Factor) {
		pPillUseUnmarried30to44Factor = _pPillUseUnmarried30to44Factor;
	}
	/**
	 * Gets the P Pill Use Unmarried NHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseUnmarriedNHSFactor() {
		return pPillUseUnmarriedNHSFactor;
	}

	/**
	 * Sets the P Pill Use Unmarried NHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseUnmarriedNHSFactor the new P Pill Use Unmarried NHS Factor value
	 */

	public void setPPillUseUnmarriedNHSFactor(double _pPillUseUnmarriedNHSFactor) {
		pPillUseUnmarriedNHSFactor = _pPillUseUnmarriedNHSFactor;
	}
	/**
	 * Gets the P Pill Use Unmarried PHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseUnmarriedPHSFactor() {
		return pPillUseUnmarriedPHSFactor;
	}

	/**
	 * Sets the P Pill Use Unmarried PHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseUnmarriedPHSFactor the new P Pill Use Unmarried PHS Factor value
	 */

	public void setPPillUseUnmarriedPHSFactor(double _pPillUseUnmarriedPHSFactor) {
		pPillUseUnmarriedPHSFactor = _pPillUseUnmarriedPHSFactor;
	}
	/**
	 * Gets the P Pill Use Unmarried HS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseUnmarriedHSFactor() {
		return pPillUseUnmarriedHSFactor;
	}

	/**
	 * Sets the P Pill Use Unmarried HS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseUnmarriedHSFactor the new P Pill Use Unmarried HS Factor value
	 */

	public void setPPillUseUnmarriedHSFactor(double _pPillUseUnmarriedHSFactor) {
		pPillUseUnmarriedHSFactor = _pPillUseUnmarriedHSFactor;
	}
	/**
	 * Gets the P Pill Use Unmarried Other Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseUnmarriedOtherFactor() {
		return pPillUseUnmarriedOtherFactor;
	}

	/**
	 * Sets the P Pill Use Unmarried Other Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseUnmarriedOtherFactor the new P Pill Use Unmarried Other Factor value
	 */

	public void setPPillUseUnmarriedOtherFactor(
			double _pPillUseUnmarriedOtherFactor) {
		pPillUseUnmarriedOtherFactor = _pPillUseUnmarriedOtherFactor;
	}
	/**
	 * Gets the P Pill Use Unmarried Black Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseUnmarriedBlackFactor() {
		return pPillUseUnmarriedBlackFactor;
	}

	/**
	 * Sets the P Pill Use Unmarried Black Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseUnmarriedBlackFactor the new P Pill Use Unmarried Black Factor value
	 */

	public void setPPillUseUnmarriedBlackFactor(
			double _pPillUseUnmarriedBlackFactor) {
		pPillUseUnmarriedBlackFactor = _pPillUseUnmarriedBlackFactor;
	}
	/**
	 * Gets the P Pill Use Unmarried Hispanic Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseUnmarriedHispanicFactor() {
		return pPillUseUnmarriedHispanicFactor;
	}

	/**
	 * Sets the P Pill Use Unmarried Hispanic Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseUnmarriedHispanicFactor the new P Pill Use Unmarried Hispanic Factor value
	 */

	public void setPPillUseUnmarriedHispanicFactor(
			double _pPillUseUnmarriedHispanicFactor) {
		pPillUseUnmarriedHispanicFactor = _pPillUseUnmarriedHispanicFactor;
	}
	/**
	 * Gets the P Pill Use Unmarried White Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseUnmarriedWhiteFactor() {
		return pPillUseUnmarriedWhiteFactor;
	}

	/**
	 * Sets the P Pill Use Unmarried White Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseUnmarriedWhiteFactor the new P Pill Use Unmarried White Factor value
	 */

	public void setPPillUseUnmarriedWhiteFactor(
			double _pPillUseUnmarriedWhiteFactor) {
		pPillUseUnmarriedWhiteFactor = _pPillUseUnmarriedWhiteFactor;
	}
	/**
	 * Gets the P Pill Use Unmarried Category 1 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseUnmarriedCategory1Factor() {
		return pPillUseUnmarriedCategory1Factor;
	}

	/**
	 * Sets the P Pill Use Unmarried Category 1 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseUnmarriedCategory1Factor the new P Pill Use Unmarried Category 1 Factor value
	 */

	public void setPPillUseUnmarriedCategory1Factor(
			double _pPillUseUnmarriedCategory1Factor) {
		pPillUseUnmarriedCategory1Factor = _pPillUseUnmarriedCategory1Factor;
	}
	/**
	 * Gets the P Pill Use Unmarried Category 3 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseUnmarriedCategory3Factor() {
		return pPillUseUnmarriedCategory3Factor;
	}

	/**
	 * Sets the P Pill Use Unmarried Category 3 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseUnmarriedCategory3Factor the new P Pill Use Unmarried Category 3 Factor value
	 */

	public void setPPillUseUnmarriedCategory3Factor(
			double _pPillUseUnmarriedCategory3Factor) {
		pPillUseUnmarriedCategory3Factor = _pPillUseUnmarriedCategory3Factor;
	}
	/**
	 * Gets the P Pill Use Unmarried Category 2 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseUnmarriedCategory2Factor() {
		return pPillUseUnmarriedCategory2Factor;
	}

	/**
	 * Sets the P Pill Use Unmarried Category 2 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseUnmarriedCategory2Factor the new P Pill Use Unmarried Category 2 Factor value
	 */

	public void setPPillUseUnmarriedCategory2Factor(
			double _pPillUseUnmarriedCategory2Factor) {
		pPillUseUnmarriedCategory2Factor = _pPillUseUnmarriedCategory2Factor;
	}
	/**
	 * Gets the P Pill Use Unmarried Category 4 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseUnmarriedCategory4Factor() {
		return pPillUseUnmarriedCategory4Factor;
	}

	/**
	 * Sets the P Pill Use Unmarried Category 4 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseUnmarriedCategory4Factor the new P Pill Use Unmarried Category 4 Factor value
	 */

	public void setPPillUseUnmarriedCategory4Factor(
			double _pPillUseUnmarriedCategory4Factor) {
		pPillUseUnmarriedCategory4Factor = _pPillUseUnmarriedCategory4Factor;
	}
	/**
	 * Gets the P Pill Use Unmarried Very Low Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseUnmarriedVeryLowFrequencyFactor() {
		return pPillUseUnmarriedVeryLowFrequencyFactor;
	}

	/**
	 * Sets the P Pill Use Unmarried Very Low Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseUnmarriedVeryLowFrequencyFactor the new P Pill Use Unmarried Very Low Frequency Factor value
	 */

	public void setPPillUseUnmarriedVeryLowFrequencyFactor(
			double _pPillUseUnmarriedVeryLowFrequencyFactor) {
		pPillUseUnmarriedVeryLowFrequencyFactor = _pPillUseUnmarriedVeryLowFrequencyFactor;
	}
	/**
	 * Gets the P Pill Use Unmarried High Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseUnmarriedHighFrequencyFactor() {
		return pPillUseUnmarriedHighFrequencyFactor;
	}

	/**
	 * Sets the P Pill Use Unmarried High Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseUnmarriedHighFrequencyFactor the new P Pill Use Unmarried High Frequency Factor value
	 */

	public void setPPillUseUnmarriedHighFrequencyFactor(
			double _pPillUseUnmarriedHighFrequencyFactor) {
		pPillUseUnmarriedHighFrequencyFactor = _pPillUseUnmarriedHighFrequencyFactor;
	}
	/**
	 * Gets the P Pill Use Unmarried Moderate Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseUnmarriedModerateFrequencyFactor() {
		return pPillUseUnmarriedModerateFrequencyFactor;
	}

	/**
	 * Sets the P Pill Use Unmarried Moderate Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseUnmarriedModerateFrequencyFactor the new P Pill Use Unmarried Moderate Frequency Factor value
	 */

	public void setPPillUseUnmarriedModerateFrequencyFactor(
			double _pPillUseUnmarriedModerateFrequencyFactor) {
		pPillUseUnmarriedModerateFrequencyFactor = _pPillUseUnmarriedModerateFrequencyFactor;
	}
	/**
	 * Gets the P Pill Use Unmarried Partner Sterilized Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseUnmarriedPartnerSterilizedFactor() {
		return pPillUseUnmarriedPartnerSterilizedFactor;
	}

	/**
	 * Sets the P Pill Use Unmarried Partner Sterilized Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseUnmarriedPartnerSterilizedFactor the new P Pill Use Unmarried Partner Sterilized Factor value
	 */

	public void setPPillUseUnmarriedPartnerSterilizedFactor(
			double _pPillUseUnmarriedPartnerSterilizedFactor) {
		pPillUseUnmarriedPartnerSterilizedFactor = _pPillUseUnmarriedPartnerSterilizedFactor;
	}
	/**
	 * Gets the P Pill Use Unmarried Other Contraception Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPPillUseUnmarriedOtherContraceptionFactor() {
		return pPillUseUnmarriedOtherContraceptionFactor;
	}

	/**
	 * Sets the P Pill Use Unmarried Other Contraception Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pPillUseUnmarriedOtherContraceptionFactor the new P Pill Use Unmarried Other Contraception Factor value
	 */

	public void setPPillUseUnmarriedOtherContraceptionFactor(
			double _pPillUseUnmarriedOtherContraceptionFactor) {
		pPillUseUnmarriedOtherContraceptionFactor = _pPillUseUnmarriedOtherContraceptionFactor;
	}
	/**
	 * Gets the P High Condom Use Married Value property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseMarriedValue() {
		return pHighCondomUseMarriedValue;
	}

	/**
	 * Sets the P High Condom Use Married Value property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseMarriedValue the new P High Condom Use Married Value value
	 */

	public void setPHighCondomUseMarriedValue(double _pHighCondomUseMarriedValue) {
		pHighCondomUseMarriedValue = _pHighCondomUseMarriedValue;
	}
	/**
	 * Gets the P High Condom Use Unmarried Factor Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseUnmarriedFactorBase() {
		return pHighCondomUseUnmarriedFactorBase;
	}

	/**
	 * Sets the P High Condom Use Unmarried Factor Base property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseUnmarriedFactorBase the new P High Condom Use Unmarried Factor Base value
	 */

	public void setPHighCondomUseUnmarriedFactorBase(
			double _pHighCondomUseUnmarriedFactorBase) {
		pHighCondomUseUnmarriedFactorBase = _pHighCondomUseUnmarriedFactorBase;
	}
	/**
	 * Gets the P High Condom Use Unmarried 15 to 19 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseUnmarried15to19Factor() {
		return pHighCondomUseUnmarried15to19Factor;
	}

	/**
	 * Sets the P High Condom Use Unmarried 15 to 19 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseUnmarried15to19Factor the new P High Condom Use Unmarried 15 to 19 Factor value
	 */

	public void setPHighCondomUseUnmarried15to19Factor(
			double _pHighCondomUseUnmarried15to19Factor) {
		pHighCondomUseUnmarried15to19Factor = _pHighCondomUseUnmarried15to19Factor;
	}
	/**
	 * Gets the P High Condom Use Unmarried 20 to 24 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseUnmarried20to24Factor() {
		return pHighCondomUseUnmarried20to24Factor;
	}

	/**
	 * Sets the P High Condom Use Unmarried 20 to 24 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseUnmarried20to24Factor the new P High Condom Use Unmarried 20 to 24 Factor value
	 */

	public void setPHighCondomUseUnmarried20to24Factor(
			double _pHighCondomUseUnmarried20to24Factor) {
		pHighCondomUseUnmarried20to24Factor = _pHighCondomUseUnmarried20to24Factor;
	}
	/**
	 * Gets the P High Condom Use Unmarried 25 to 29 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseUnmarried25to29Factor() {
		return pHighCondomUseUnmarried25to29Factor;
	}

	/**
	 * Sets the P High Condom Use Unmarried 25 to 29 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseUnmarried25to29Factor the new P High Condom Use Unmarried 25 to 29 Factor value
	 */

	public void setPHighCondomUseUnmarried25to29Factor(
			double _pHighCondomUseUnmarried25to29Factor) {
		pHighCondomUseUnmarried25to29Factor = _pHighCondomUseUnmarried25to29Factor;
	}
	/**
	 * Gets the P High Condom Use Unmarried 30 to 44 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseUnmarried30to44Factor() {
		return pHighCondomUseUnmarried30to44Factor;
	}

	/**
	 * Sets the P High Condom Use Unmarried 30 to 44 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseUnmarried30to44Factor the new P High Condom Use Unmarried 30 to 44 Factor value
	 */

	public void setPHighCondomUseUnmarried30to44Factor(
			double _pHighCondomUseUnmarried30to44Factor) {
		pHighCondomUseUnmarried30to44Factor = _pHighCondomUseUnmarried30to44Factor;
	}
	/**
	 * Gets the P High Condom Use Unmarried NHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseUnmarriedNHSFactor() {
		return pHighCondomUseUnmarriedNHSFactor;
	}

	/**
	 * Sets the P High Condom Use Unmarried NHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseUnmarriedNHSFactor the new P High Condom Use Unmarried NHS Factor value
	 */

	public void setPHighCondomUseUnmarriedNHSFactor(
			double _pHighCondomUseUnmarriedNHSFactor) {
		pHighCondomUseUnmarriedNHSFactor = _pHighCondomUseUnmarriedNHSFactor;
	}
	/**
	 * Gets the P High Condom Use Unmarried PHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseUnmarriedPHSFactor() {
		return pHighCondomUseUnmarriedPHSFactor;
	}

	/**
	 * Sets the P High Condom Use Unmarried PHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseUnmarriedPHSFactor the new P High Condom Use Unmarried PHS Factor value
	 */

	public void setPHighCondomUseUnmarriedPHSFactor(
			double _pHighCondomUseUnmarriedPHSFactor) {
		pHighCondomUseUnmarriedPHSFactor = _pHighCondomUseUnmarriedPHSFactor;
	}
	/**
	 * Gets the P High Condom Use Unmarried HS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseUnmarriedHSFactor() {
		return pHighCondomUseUnmarriedHSFactor;
	}

	/**
	 * Sets the P High Condom Use Unmarried HS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseUnmarriedHSFactor the new P High Condom Use Unmarried HS Factor value
	 */

	public void setPHighCondomUseUnmarriedHSFactor(
			double _pHighCondomUseUnmarriedHSFactor) {
		pHighCondomUseUnmarriedHSFactor = _pHighCondomUseUnmarriedHSFactor;
	}
	/**
	 * Gets the P High Condom Use Unmarried Other Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseUnmarriedOtherFactor() {
		return pHighCondomUseUnmarriedOtherFactor;
	}

	/**
	 * Sets the P High Condom Use Unmarried Other Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseUnmarriedOtherFactor the new P High Condom Use Unmarried Other Factor value
	 */

	public void setPHighCondomUseUnmarriedOtherFactor(
			double _pHighCondomUseUnmarriedOtherFactor) {
		pHighCondomUseUnmarriedOtherFactor = _pHighCondomUseUnmarriedOtherFactor;
	}
	/**
	 * Gets the P High Condom Use Unmarried Black Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseUnmarriedBlackFactor() {
		return pHighCondomUseUnmarriedBlackFactor;
	}

	/**
	 * Sets the P High Condom Use Unmarried Black Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseUnmarriedBlackFactor the new P High Condom Use Unmarried Black Factor value
	 */

	public void setPHighCondomUseUnmarriedBlackFactor(
			double _pHighCondomUseUnmarriedBlackFactor) {
		pHighCondomUseUnmarriedBlackFactor = _pHighCondomUseUnmarriedBlackFactor;
	}
	/**
	 * Gets the P High Condom Use Unmarried Hispanic Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseUnmarriedHispanicFactor() {
		return pHighCondomUseUnmarriedHispanicFactor;
	}

	/**
	 * Sets the P High Condom Use Unmarried Hispanic Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseUnmarriedHispanicFactor the new P High Condom Use Unmarried Hispanic Factor value
	 */

	public void setPHighCondomUseUnmarriedHispanicFactor(
			double _pHighCondomUseUnmarriedHispanicFactor) {
		pHighCondomUseUnmarriedHispanicFactor = _pHighCondomUseUnmarriedHispanicFactor;
	}
	/**
	 * Gets the P High Condom Use Unmarried White Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseUnmarriedWhiteFactor() {
		return pHighCondomUseUnmarriedWhiteFactor;
	}

	/**
	 * Sets the P High Condom Use Unmarried White Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseUnmarriedWhiteFactor the new P High Condom Use Unmarried White Factor value
	 */

	public void setPHighCondomUseUnmarriedWhiteFactor(
			double _pHighCondomUseUnmarriedWhiteFactor) {
		pHighCondomUseUnmarriedWhiteFactor = _pHighCondomUseUnmarriedWhiteFactor;
	}
	/**
	 * Gets the P High Condom Use Unmarried Category 1 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseUnmarriedCategory1Factor() {
		return pHighCondomUseUnmarriedCategory1Factor;
	}

	/**
	 * Sets the P High Condom Use Unmarried Category 1 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseUnmarriedCategory1Factor the new P High Condom Use Unmarried Category 1 Factor value
	 */

	public void setPHighCondomUseUnmarriedCategory1Factor(
			double _pHighCondomUseUnmarriedCategory1Factor) {
		pHighCondomUseUnmarriedCategory1Factor = _pHighCondomUseUnmarriedCategory1Factor;
	}
	/**
	 * Gets the P High Condom Use Unmarried Category 3 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseUnmarriedCategory3Factor() {
		return pHighCondomUseUnmarriedCategory3Factor;
	}

	/**
	 * Sets the P High Condom Use Unmarried Category 3 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseUnmarriedCategory3Factor the new P High Condom Use Unmarried Category 3 Factor value
	 */

	public void setPHighCondomUseUnmarriedCategory3Factor(
			double _pHighCondomUseUnmarriedCategory3Factor) {
		pHighCondomUseUnmarriedCategory3Factor = _pHighCondomUseUnmarriedCategory3Factor;
	}
	/**
	 * Gets the P High Condom Use Unmarried Category 2 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseUnmarriedCategory2Factor() {
		return pHighCondomUseUnmarriedCategory2Factor;
	}

	/**
	 * Sets the P High Condom Use Unmarried Category 2 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseUnmarriedCategory2Factor the new P High Condom Use Unmarried Category 2 Factor value
	 */

	public void setPHighCondomUseUnmarriedCategory2Factor(
			double _pHighCondomUseUnmarriedCategory2Factor) {
		pHighCondomUseUnmarriedCategory2Factor = _pHighCondomUseUnmarriedCategory2Factor;
	}
	/**
	 * Gets the P High Condom Use Unmarried Category 4 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseUnmarriedCategory4Factor() {
		return pHighCondomUseUnmarriedCategory4Factor;
	}

	/**
	 * Sets the P High Condom Use Unmarried Category 4 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseUnmarriedCategory4Factor the new P High Condom Use Unmarried Category 4 Factor value
	 */

	public void setPHighCondomUseUnmarriedCategory4Factor(
			double _pHighCondomUseUnmarriedCategory4Factor) {
		pHighCondomUseUnmarriedCategory4Factor = _pHighCondomUseUnmarriedCategory4Factor;
	}
	/**
	 * Gets the P High Condom Use Unmarried Very Low Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseUnmarriedVeryLowFrequencyFactor() {
		return pHighCondomUseUnmarriedVeryLowFrequencyFactor;
	}

	/**
	 * Sets the P High Condom Use Unmarried Very Low Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseUnmarriedVeryLowFrequencyFactor the new P High Condom Use Unmarried Very Low Frequency Factor value
	 */

	public void setPHighCondomUseUnmarriedVeryLowFrequencyFactor(
			double _pHighCondomUseUnmarriedVeryLowFrequencyFactor) {
		pHighCondomUseUnmarriedVeryLowFrequencyFactor = _pHighCondomUseUnmarriedVeryLowFrequencyFactor;
	}
	/**
	 * Gets the P High Condom Use Unmarried High Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseUnmarriedHighFrequencyFactor() {
		return pHighCondomUseUnmarriedHighFrequencyFactor;
	}

	/**
	 * Sets the P High Condom Use Unmarried High Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseUnmarriedHighFrequencyFactor the new P High Condom Use Unmarried High Frequency Factor value
	 */

	public void setPHighCondomUseUnmarriedHighFrequencyFactor(
			double _pHighCondomUseUnmarriedHighFrequencyFactor) {
		pHighCondomUseUnmarriedHighFrequencyFactor = _pHighCondomUseUnmarriedHighFrequencyFactor;
	}
	/**
	 * Gets the P High Condom Use Unmarried Moderate Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseUnmarriedModerateFrequencyFactor() {
		return pHighCondomUseUnmarriedModerateFrequencyFactor;
	}

	/**
	 * Sets the P High Condom Use Unmarried Moderate Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseUnmarriedModerateFrequencyFactor the new P High Condom Use Unmarried Moderate Frequency Factor value
	 */

	public void setPHighCondomUseUnmarriedModerateFrequencyFactor(
			double _pHighCondomUseUnmarriedModerateFrequencyFactor) {
		pHighCondomUseUnmarriedModerateFrequencyFactor = _pHighCondomUseUnmarriedModerateFrequencyFactor;
	}
	/**
	 * Gets the P High Condom Use Unmarried Partner Sterilized Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseUnmarriedPartnerSterilizedFactor() {
		return pHighCondomUseUnmarriedPartnerSterilizedFactor;
	}

	/**
	 * Sets the P High Condom Use Unmarried Partner Sterilized Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseUnmarriedPartnerSterilizedFactor the new P High Condom Use Unmarried Partner Sterilized Factor value
	 */

	public void setPHighCondomUseUnmarriedPartnerSterilizedFactor(
			double _pHighCondomUseUnmarriedPartnerSterilizedFactor) {
		pHighCondomUseUnmarriedPartnerSterilizedFactor = _pHighCondomUseUnmarriedPartnerSterilizedFactor;
	}
	/**
	 * Gets the P High Condom Use Unmarried Other Contraception Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseUnmarriedOtherContraceptionFactor() {
		return pHighCondomUseUnmarriedOtherContraceptionFactor;
	}

	/**
	 * Sets the P High Condom Use Unmarried Other Contraception Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseUnmarriedOtherContraceptionFactor the new P High Condom Use Unmarried Other Contraception Factor value
	 */

	public void setPHighCondomUseUnmarriedOtherContraceptionFactor(
			double _pHighCondomUseUnmarriedOtherContraceptionFactor) {
		pHighCondomUseUnmarriedOtherContraceptionFactor = _pHighCondomUseUnmarriedOtherContraceptionFactor;
	}
	/**
	 * Gets the P Medium Condom Use Married Factor Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseMarriedFactorBase() {
		return pMediumCondomUseMarriedFactorBase;
	}

	/**
	 * Sets the P Medium Condom Use Married Factor Base property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseMarriedFactorBase the new P Medium Condom Use Married Factor Base value
	 */

	public void setPMediumCondomUseMarriedFactorBase(
			double _pMediumCondomUseMarriedFactorBase) {
		pMediumCondomUseMarriedFactorBase = _pMediumCondomUseMarriedFactorBase;
	}
	/**
	 * Gets the P Medium Condom Use Married 15 to 19 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseMarried15to19Factor() {
		return pMediumCondomUseMarried15to19Factor;
	}

	/**
	 * Sets the P Medium Condom Use Married 15 to 19 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseMarried15to19Factor the new P Medium Condom Use Married 15 to 19 Factor value
	 */

	public void setPMediumCondomUseMarried15to19Factor(
			double _pMediumCondomUseMarried15to19Factor) {
		pMediumCondomUseMarried15to19Factor = _pMediumCondomUseMarried15to19Factor;
	}
	/**
	 * Gets the P Medium Condom Use Married 20 to 24 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseMarried20to24Factor() {
		return pMediumCondomUseMarried20to24Factor;
	}

	/**
	 * Sets the P Medium Condom Use Married 20 to 24 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseMarried20to24Factor the new P Medium Condom Use Married 20 to 24 Factor value
	 */

	public void setPMediumCondomUseMarried20to24Factor(
			double _pMediumCondomUseMarried20to24Factor) {
		pMediumCondomUseMarried20to24Factor = _pMediumCondomUseMarried20to24Factor;
	}
	/**
	 * Gets the P Medium Condom Use Married 25 to 29 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseMarried25to29Factor() {
		return pMediumCondomUseMarried25to29Factor;
	}

	/**
	 * Sets the P Medium Condom Use Married 25 to 29 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseMarried25to29Factor the new P Medium Condom Use Married 25 to 29 Factor value
	 */

	public void setPMediumCondomUseMarried25to29Factor(
			double _pMediumCondomUseMarried25to29Factor) {
		pMediumCondomUseMarried25to29Factor = _pMediumCondomUseMarried25to29Factor;
	}
	/**
	 * Gets the P Medium Condom Use Married 30 to 44 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseMarried30to44Factor() {
		return pMediumCondomUseMarried30to44Factor;
	}

	/**
	 * Sets the P Medium Condom Use Married 30 to 44 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseMarried30to44Factor the new P Medium Condom Use Married 30 to 44 Factor value
	 */

	public void setPMediumCondomUseMarried30to44Factor(
			double _pMediumCondomUseMarried30to44Factor) {
		pMediumCondomUseMarried30to44Factor = _pMediumCondomUseMarried30to44Factor;
	}
	/**
	 * Gets the P Medium Condom Use Married NHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseMarriedNHSFactor() {
		return pMediumCondomUseMarriedNHSFactor;
	}

	/**
	 * Sets the P Medium Condom Use Married NHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseMarriedNHSFactor the new P Medium Condom Use Married NHS Factor value
	 */

	public void setPMediumCondomUseMarriedNHSFactor(
			double _pMediumCondomUseMarriedNHSFactor) {
		pMediumCondomUseMarriedNHSFactor = _pMediumCondomUseMarriedNHSFactor;
	}
	/**
	 * Gets the P Medium Condom Use Married PHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseMarriedPHSFactor() {
		return pMediumCondomUseMarriedPHSFactor;
	}

	/**
	 * Sets the P Medium Condom Use Married PHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseMarriedPHSFactor the new P Medium Condom Use Married PHS Factor value
	 */

	public void setPMediumCondomUseMarriedPHSFactor(
			double _pMediumCondomUseMarriedPHSFactor) {
		pMediumCondomUseMarriedPHSFactor = _pMediumCondomUseMarriedPHSFactor;
	}
	/**
	 * Gets the P Medium Condom Use Married HS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseMarriedHSFactor() {
		return pMediumCondomUseMarriedHSFactor;
	}

	/**
	 * Sets the P Medium Condom Use Married HS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseMarriedHSFactor the new P Medium Condom Use Married HS Factor value
	 */

	public void setPMediumCondomUseMarriedHSFactor(
			double _pMediumCondomUseMarriedHSFactor) {
		pMediumCondomUseMarriedHSFactor = _pMediumCondomUseMarriedHSFactor;
	}
	/**
	 * Gets the P Medium Condom Use Married Other Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseMarriedOtherFactor() {
		return pMediumCondomUseMarriedOtherFactor;
	}

	/**
	 * Sets the P Medium Condom Use Married Other Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseMarriedOtherFactor the new P Medium Condom Use Married Other Factor value
	 */

	public void setPMediumCondomUseMarriedOtherFactor(
			double _pMediumCondomUseMarriedOtherFactor) {
		pMediumCondomUseMarriedOtherFactor = _pMediumCondomUseMarriedOtherFactor;
	}
	/**
	 * Gets the P Medium Condom Use Married Black Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseMarriedBlackFactor() {
		return pMediumCondomUseMarriedBlackFactor;
	}

	/**
	 * Sets the P Medium Condom Use Married Black Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseMarriedBlackFactor the new P Medium Condom Use Married Black Factor value
	 */

	public void setPMediumCondomUseMarriedBlackFactor(
			double _pMediumCondomUseMarriedBlackFactor) {
		pMediumCondomUseMarriedBlackFactor = _pMediumCondomUseMarriedBlackFactor;
	}
	/**
	 * Gets the P Medium Condom Use Married Hispanic Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseMarriedHispanicFactor() {
		return pMediumCondomUseMarriedHispanicFactor;
	}

	/**
	 * Sets the P Medium Condom Use Married Hispanic Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseMarriedHispanicFactor the new P Medium Condom Use Married Hispanic Factor value
	 */

	public void setPMediumCondomUseMarriedHispanicFactor(
			double _pMediumCondomUseMarriedHispanicFactor) {
		pMediumCondomUseMarriedHispanicFactor = _pMediumCondomUseMarriedHispanicFactor;
	}
	/**
	 * Gets the P Medium Condom Use Married White Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseMarriedWhiteFactor() {
		return pMediumCondomUseMarriedWhiteFactor;
	}

	/**
	 * Sets the P Medium Condom Use Married White Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseMarriedWhiteFactor the new P Medium Condom Use Married White Factor value
	 */

	public void setPMediumCondomUseMarriedWhiteFactor(
			double _pMediumCondomUseMarriedWhiteFactor) {
		pMediumCondomUseMarriedWhiteFactor = _pMediumCondomUseMarriedWhiteFactor;
	}
	/**
	 * Gets the P Medium Condom Use Married Category 1 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseMarriedCategory1Factor() {
		return pMediumCondomUseMarriedCategory1Factor;
	}

	/**
	 * Sets the P Medium Condom Use Married Category 1 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseMarriedCategory1Factor the new P Medium Condom Use Married Category 1 Factor value
	 */

	public void setPMediumCondomUseMarriedCategory1Factor(
			double _pMediumCondomUseMarriedCategory1Factor) {
		pMediumCondomUseMarriedCategory1Factor = _pMediumCondomUseMarriedCategory1Factor;
	}
	/**
	 * Gets the P Medium Condom Use Married Category 3 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseMarriedCategory3Factor() {
		return pMediumCondomUseMarriedCategory3Factor;
	}

	/**
	 * Sets the P Medium Condom Use Married Category 3 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseMarriedCategory3Factor the new P Medium Condom Use Married Category 3 Factor value
	 */

	public void setPMediumCondomUseMarriedCategory3Factor(
			double _pMediumCondomUseMarriedCategory3Factor) {
		pMediumCondomUseMarriedCategory3Factor = _pMediumCondomUseMarriedCategory3Factor;
	}
	/**
	 * Gets the P Medium Condom Use Married Category 2 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseMarriedCategory2Factor() {
		return pMediumCondomUseMarriedCategory2Factor;
	}

	/**
	 * Sets the P Medium Condom Use Married Category 2 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseMarriedCategory2Factor the new P Medium Condom Use Married Category 2 Factor value
	 */

	public void setPMediumCondomUseMarriedCategory2Factor(
			double _pMediumCondomUseMarriedCategory2Factor) {
		pMediumCondomUseMarriedCategory2Factor = _pMediumCondomUseMarriedCategory2Factor;
	}
	/**
	 * Gets the P Medium Condom Use Married Category 4 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseMarriedCategory4Factor() {
		return pMediumCondomUseMarriedCategory4Factor;
	}

	/**
	 * Sets the P Medium Condom Use Married Category 4 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseMarriedCategory4Factor the new P Medium Condom Use Married Category 4 Factor value
	 */

	public void setPMediumCondomUseMarriedCategory4Factor(
			double _pMediumCondomUseMarriedCategory4Factor) {
		pMediumCondomUseMarriedCategory4Factor = _pMediumCondomUseMarriedCategory4Factor;
	}
	/**
	 * Gets the P Medium Condom Use Married Very Low Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseMarriedVeryLowFrequencyFactor() {
		return pMediumCondomUseMarriedVeryLowFrequencyFactor;
	}

	/**
	 * Sets the P Medium Condom Use Married Very Low Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseMarriedVeryLowFrequencyFactor the new P Medium Condom Use Married Very Low Frequency Factor value
	 */

	public void setPMediumCondomUseMarriedVeryLowFrequencyFactor(
			double _pMediumCondomUseMarriedVeryLowFrequencyFactor) {
		pMediumCondomUseMarriedVeryLowFrequencyFactor = _pMediumCondomUseMarriedVeryLowFrequencyFactor;
	}
	/**
	 * Gets the P Medium Condom Use Married High Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseMarriedHighFrequencyFactor() {
		return pMediumCondomUseMarriedHighFrequencyFactor;
	}

	/**
	 * Sets the P Medium Condom Use Married High Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseMarriedHighFrequencyFactor the new P Medium Condom Use Married High Frequency Factor value
	 */

	public void setPMediumCondomUseMarriedHighFrequencyFactor(
			double _pMediumCondomUseMarriedHighFrequencyFactor) {
		pMediumCondomUseMarriedHighFrequencyFactor = _pMediumCondomUseMarriedHighFrequencyFactor;
	}
	/**
	 * Gets the P Medium Condom Use Married Moderate Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseMarriedModerateFrequencyFactor() {
		return pMediumCondomUseMarriedModerateFrequencyFactor;
	}

	/**
	 * Sets the P Medium Condom Use Married Moderate Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseMarriedModerateFrequencyFactor the new P Medium Condom Use Married Moderate Frequency Factor value
	 */

	public void setPMediumCondomUseMarriedModerateFrequencyFactor(
			double _pMediumCondomUseMarriedModerateFrequencyFactor) {
		pMediumCondomUseMarriedModerateFrequencyFactor = _pMediumCondomUseMarriedModerateFrequencyFactor;
	}
	/**
	 * Gets the P Medium Condom Use Married Partner Sterilized Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseMarriedPartnerSterilizedFactor() {
		return pMediumCondomUseMarriedPartnerSterilizedFactor;
	}

	/**
	 * Sets the P Medium Condom Use Married Partner Sterilized Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseMarriedPartnerSterilizedFactor the new P Medium Condom Use Married Partner Sterilized Factor value
	 */

	public void setPMediumCondomUseMarriedPartnerSterilizedFactor(
			double _pMediumCondomUseMarriedPartnerSterilizedFactor) {
		pMediumCondomUseMarriedPartnerSterilizedFactor = _pMediumCondomUseMarriedPartnerSterilizedFactor;
	}
	/**
	 * Gets the P Medium Condom Use Married Other Contraception Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseMarriedOtherContraceptionFactor() {
		return pMediumCondomUseMarriedOtherContraceptionFactor;
	}

	/**
	 * Sets the P Medium Condom Use Married Other Contraception Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseMarriedOtherContraceptionFactor the new P Medium Condom Use Married Other Contraception Factor value
	 */

	public void setPMediumCondomUseMarriedOtherContraceptionFactor(
			double _pMediumCondomUseMarriedOtherContraceptionFactor) {
		pMediumCondomUseMarriedOtherContraceptionFactor = _pMediumCondomUseMarriedOtherContraceptionFactor;
	}
	/**
	 * Gets the P Medium Condom Use Unmarried Factor Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseUnmarriedFactorBase() {
		return pMediumCondomUseUnmarriedFactorBase;
	}

	/**
	 * Sets the P Medium Condom Use Unmarried Factor Base property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseUnmarriedFactorBase the new P Medium Condom Use Unmarried Factor Base value
	 */

	public void setPMediumCondomUseUnmarriedFactorBase(
			double _pMediumCondomUseUnmarriedFactorBase) {
		pMediumCondomUseUnmarriedFactorBase = _pMediumCondomUseUnmarriedFactorBase;
	}
	/**
	 * Gets the P Medium Condom Use Unmarried 15 to 19 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseUnmarried15to19Factor() {
		return pMediumCondomUseUnmarried15to19Factor;
	}

	/**
	 * Sets the P Medium Condom Use Unmarried 15 to 19 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseUnmarried15to19Factor the new P Medium Condom Use Unmarried 15 to 19 Factor value
	 */

	public void setPMediumCondomUseUnmarried15to19Factor(
			double _pMediumCondomUseUnmarried15to19Factor) {
		pMediumCondomUseUnmarried15to19Factor = _pMediumCondomUseUnmarried15to19Factor;
	}
	/**
	 * Gets the P Medium Condom Use Unmarried 20 to 24 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseUnmarried20to24Factor() {
		return pMediumCondomUseUnmarried20to24Factor;
	}

	/**
	 * Sets the P Medium Condom Use Unmarried 20 to 24 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseUnmarried20to24Factor the new P Medium Condom Use Unmarried 20 to 24 Factor value
	 */

	public void setPMediumCondomUseUnmarried20to24Factor(
			double _pMediumCondomUseUnmarried20to24Factor) {
		pMediumCondomUseUnmarried20to24Factor = _pMediumCondomUseUnmarried20to24Factor;
	}
	/**
	 * Gets the P Medium Condom Use Unmarried 25 to 29 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseUnmarried25to29Factor() {
		return pMediumCondomUseUnmarried25to29Factor;
	}

	/**
	 * Sets the P Medium Condom Use Unmarried 25 to 29 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseUnmarried25to29Factor the new P Medium Condom Use Unmarried 25 to 29 Factor value
	 */

	public void setPMediumCondomUseUnmarried25to29Factor(
			double _pMediumCondomUseUnmarried25to29Factor) {
		pMediumCondomUseUnmarried25to29Factor = _pMediumCondomUseUnmarried25to29Factor;
	}
	/**
	 * Gets the P Medium Condom Use Unmarried 30 to 44 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseUnmarried30to44Factor() {
		return pMediumCondomUseUnmarried30to44Factor;
	}

	/**
	 * Sets the P Medium Condom Use Unmarried 30 to 44 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseUnmarried30to44Factor the new P Medium Condom Use Unmarried 30 to 44 Factor value
	 */

	public void setPMediumCondomUseUnmarried30to44Factor(
			double _pMediumCondomUseUnmarried30to44Factor) {
		pMediumCondomUseUnmarried30to44Factor = _pMediumCondomUseUnmarried30to44Factor;
	}
	/**
	 * Gets the P Medium Condom Use Unmarried NHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseUnmarriedNHSFactor() {
		return pMediumCondomUseUnmarriedNHSFactor;
	}

	/**
	 * Sets the P Medium Condom Use Unmarried NHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseUnmarriedNHSFactor the new P Medium Condom Use Unmarried NHS Factor value
	 */

	public void setPMediumCondomUseUnmarriedNHSFactor(
			double _pMediumCondomUseUnmarriedNHSFactor) {
		pMediumCondomUseUnmarriedNHSFactor = _pMediumCondomUseUnmarriedNHSFactor;
	}
	/**
	 * Gets the P Medium Condom Use Unmarried PHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseUnmarriedPHSFactor() {
		return pMediumCondomUseUnmarriedPHSFactor;
	}

	/**
	 * Sets the P Medium Condom Use Unmarried PHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseUnmarriedPHSFactor the new P Medium Condom Use Unmarried PHS Factor value
	 */

	public void setPMediumCondomUseUnmarriedPHSFactor(
			double _pMediumCondomUseUnmarriedPHSFactor) {
		pMediumCondomUseUnmarriedPHSFactor = _pMediumCondomUseUnmarriedPHSFactor;
	}
	/**
	 * Gets the P Medium Condom Use Unmarried HS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseUnmarriedHSFactor() {
		return pMediumCondomUseUnmarriedHSFactor;
	}

	/**
	 * Sets the P Medium Condom Use Unmarried HS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseUnmarriedHSFactor the new P Medium Condom Use Unmarried HS Factor value
	 */

	public void setPMediumCondomUseUnmarriedHSFactor(
			double _pMediumCondomUseUnmarriedHSFactor) {
		pMediumCondomUseUnmarriedHSFactor = _pMediumCondomUseUnmarriedHSFactor;
	}
	/**
	 * Gets the P Medium Condom Use Unmarried Other Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseUnmarriedOtherFactor() {
		return pMediumCondomUseUnmarriedOtherFactor;
	}

	/**
	 * Sets the P Medium Condom Use Unmarried Other Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseUnmarriedOtherFactor the new P Medium Condom Use Unmarried Other Factor value
	 */

	public void setPMediumCondomUseUnmarriedOtherFactor(
			double _pMediumCondomUseUnmarriedOtherFactor) {
		pMediumCondomUseUnmarriedOtherFactor = _pMediumCondomUseUnmarriedOtherFactor;
	}
	/**
	 * Gets the P Medium Condom Use Unmarried Black Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseUnmarriedBlackFactor() {
		return pMediumCondomUseUnmarriedBlackFactor;
	}

	/**
	 * Sets the P Medium Condom Use Unmarried Black Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseUnmarriedBlackFactor the new P Medium Condom Use Unmarried Black Factor value
	 */

	public void setPMediumCondomUseUnmarriedBlackFactor(
			double _pMediumCondomUseUnmarriedBlackFactor) {
		pMediumCondomUseUnmarriedBlackFactor = _pMediumCondomUseUnmarriedBlackFactor;
	}
	/**
	 * Gets the P Medium Condom Use Unmarried Hispanic Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseUnmarriedHispanicFactor() {
		return pMediumCondomUseUnmarriedHispanicFactor;
	}

	/**
	 * Sets the P Medium Condom Use Unmarried Hispanic Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseUnmarriedHispanicFactor the new P Medium Condom Use Unmarried Hispanic Factor value
	 */

	public void setPMediumCondomUseUnmarriedHispanicFactor(
			double _pMediumCondomUseUnmarriedHispanicFactor) {
		pMediumCondomUseUnmarriedHispanicFactor = _pMediumCondomUseUnmarriedHispanicFactor;
	}
	/**
	 * Gets the P Medium Condom Use Unmarried White Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseUnmarriedWhiteFactor() {
		return pMediumCondomUseUnmarriedWhiteFactor;
	}

	/**
	 * Sets the P Medium Condom Use Unmarried White Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseUnmarriedWhiteFactor the new P Medium Condom Use Unmarried White Factor value
	 */

	public void setPMediumCondomUseUnmarriedWhiteFactor(
			double _pMediumCondomUseUnmarriedWhiteFactor) {
		pMediumCondomUseUnmarriedWhiteFactor = _pMediumCondomUseUnmarriedWhiteFactor;
	}
	/**
	 * Gets the P Medium Condom Use Unmarried Category 1 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseUnmarriedCategory1Factor() {
		return pMediumCondomUseUnmarriedCategory1Factor;
	}

	/**
	 * Sets the P Medium Condom Use Unmarried Category 1 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseUnmarriedCategory1Factor the new P Medium Condom Use Unmarried Category 1 Factor value
	 */

	public void setPMediumCondomUseUnmarriedCategory1Factor(
			double _pMediumCondomUseUnmarriedCategory1Factor) {
		pMediumCondomUseUnmarriedCategory1Factor = _pMediumCondomUseUnmarriedCategory1Factor;
	}
	/**
	 * Gets the P Medium Condom Use Unmarried Category 3 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseUnmarriedCategory3Factor() {
		return pMediumCondomUseUnmarriedCategory3Factor;
	}

	/**
	 * Sets the P Medium Condom Use Unmarried Category 3 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseUnmarriedCategory3Factor the new P Medium Condom Use Unmarried Category 3 Factor value
	 */

	public void setPMediumCondomUseUnmarriedCategory3Factor(
			double _pMediumCondomUseUnmarriedCategory3Factor) {
		pMediumCondomUseUnmarriedCategory3Factor = _pMediumCondomUseUnmarriedCategory3Factor;
	}
	/**
	 * Gets the P Medium Condom Use Unmarried Category 2 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseUnmarriedCategory2Factor() {
		return pMediumCondomUseUnmarriedCategory2Factor;
	}

	/**
	 * Sets the P Medium Condom Use Unmarried Category 2 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseUnmarriedCategory2Factor the new P Medium Condom Use Unmarried Category 2 Factor value
	 */

	public void setPMediumCondomUseUnmarriedCategory2Factor(
			double _pMediumCondomUseUnmarriedCategory2Factor) {
		pMediumCondomUseUnmarriedCategory2Factor = _pMediumCondomUseUnmarriedCategory2Factor;
	}
	/**
	 * Gets the P Medium Condom Use Unmarried Category 4 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseUnmarriedCategory4Factor() {
		return pMediumCondomUseUnmarriedCategory4Factor;
	}

	/**
	 * Sets the P Medium Condom Use Unmarried Category 4 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseUnmarriedCategory4Factor the new P Medium Condom Use Unmarried Category 4 Factor value
	 */

	public void setPMediumCondomUseUnmarriedCategory4Factor(
			double _pMediumCondomUseUnmarriedCategory4Factor) {
		pMediumCondomUseUnmarriedCategory4Factor = _pMediumCondomUseUnmarriedCategory4Factor;
	}
	/**
	 * Gets the P Medium Condom Use Unmarried Very Low Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseUnmarriedVeryLowFrequencyFactor() {
		return pMediumCondomUseUnmarriedVeryLowFrequencyFactor;
	}

	/**
	 * Sets the P Medium Condom Use Unmarried Very Low Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseUnmarriedVeryLowFrequencyFactor the new P Medium Condom Use Unmarried Very Low Frequency Factor value
	 */

	public void setPMediumCondomUseUnmarriedVeryLowFrequencyFactor(
			double _pMediumCondomUseUnmarriedVeryLowFrequencyFactor) {
		pMediumCondomUseUnmarriedVeryLowFrequencyFactor = _pMediumCondomUseUnmarriedVeryLowFrequencyFactor;
	}
	/**
	 * Gets the P Medium Condom Use Unmarried High Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseUnmarriedHighFrequencyFactor() {
		return pMediumCondomUseUnmarriedHighFrequencyFactor;
	}

	/**
	 * Sets the P Medium Condom Use Unmarried High Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseUnmarriedHighFrequencyFactor the new P Medium Condom Use Unmarried High Frequency Factor value
	 */

	public void setPMediumCondomUseUnmarriedHighFrequencyFactor(
			double _pMediumCondomUseUnmarriedHighFrequencyFactor) {
		pMediumCondomUseUnmarriedHighFrequencyFactor = _pMediumCondomUseUnmarriedHighFrequencyFactor;
	}
	/**
	 * Gets the P Medium Condom Use Unmarried Moderate Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseUnmarriedModerateFrequencyFactor() {
		return pMediumCondomUseUnmarriedModerateFrequencyFactor;
	}

	/**
	 * Sets the P Medium Condom Use Unmarried Moderate Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseUnmarriedModerateFrequencyFactor the new P Medium Condom Use Unmarried Moderate Frequency Factor value
	 */

	public void setPMediumCondomUseUnmarriedModerateFrequencyFactor(
			double _pMediumCondomUseUnmarriedModerateFrequencyFactor) {
		pMediumCondomUseUnmarriedModerateFrequencyFactor = _pMediumCondomUseUnmarriedModerateFrequencyFactor;
	}
	/**
	 * Gets the P Medium Condom Use Unmarried Partner Sterilized Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseUnmarriedPartnerSterilizedFactor() {
		return pMediumCondomUseUnmarriedPartnerSterilizedFactor;
	}

	/**
	 * Sets the P Medium Condom Use Unmarried Partner Sterilized Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseUnmarriedPartnerSterilizedFactor the new P Medium Condom Use Unmarried Partner Sterilized Factor value
	 */

	public void setPMediumCondomUseUnmarriedPartnerSterilizedFactor(
			double _pMediumCondomUseUnmarriedPartnerSterilizedFactor) {
		pMediumCondomUseUnmarriedPartnerSterilizedFactor = _pMediumCondomUseUnmarriedPartnerSterilizedFactor;
	}
	/**
	 * Gets the P Medium Condom Use Unmarried Other Contraception Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMediumCondomUseUnmarriedOtherContraceptionFactor() {
		return pMediumCondomUseUnmarriedOtherContraceptionFactor;
	}

	/**
	 * Sets the P Medium Condom Use Unmarried Other Contraception Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pMediumCondomUseUnmarriedOtherContraceptionFactor the new P Medium Condom Use Unmarried Other Contraception Factor value
	 */

	public void setPMediumCondomUseUnmarriedOtherContraceptionFactor(
			double _pMediumCondomUseUnmarriedOtherContraceptionFactor) {
		pMediumCondomUseUnmarriedOtherContraceptionFactor = _pMediumCondomUseUnmarriedOtherContraceptionFactor;
	}
	/**
	 * Gets the Coital Days Married Minimum Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getCoitalDaysMarriedMinimumBase() {
		return coitalDaysMarriedMinimumBase;
	}

	/**
	 * Sets the Coital Days Married Minimum Base property for Relationships And Pregnancy.
	 * 
	 * @param _coitalDaysMarriedMinimumBase the new Coital Days Married Minimum Base value
	 */

	public void setCoitalDaysMarriedMinimumBase(
			double _coitalDaysMarriedMinimumBase) {
		coitalDaysMarriedMinimumBase = _coitalDaysMarriedMinimumBase;
	}
	/**
	 * Gets the Coital Days Married Maximum Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getCoitalDaysMarriedMaximumBase() {
		return coitalDaysMarriedMaximumBase;
	}

	/**
	 * Sets the Coital Days Married Maximum Base property for Relationships And Pregnancy.
	 * 
	 * @param _coitalDaysMarriedMaximumBase the new Coital Days Married Maximum Base value
	 */

	public void setCoitalDaysMarriedMaximumBase(
			double _coitalDaysMarriedMaximumBase) {
		coitalDaysMarriedMaximumBase = _coitalDaysMarriedMaximumBase;
	}
	/**
	 * Gets the Coital Days Married Very Low Frequency Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getCoitalDaysMarriedVeryLowFrequencyMinimum() {
		return coitalDaysMarriedVeryLowFrequencyMinimum;
	}

	/**
	 * Sets the Coital Days Married Very Low Frequency Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _coitalDaysMarriedVeryLowFrequencyMinimum the new Coital Days Married Very Low Frequency Minimum value
	 */

	public void setCoitalDaysMarriedVeryLowFrequencyMinimum(
			double _coitalDaysMarriedVeryLowFrequencyMinimum) {
		coitalDaysMarriedVeryLowFrequencyMinimum = _coitalDaysMarriedVeryLowFrequencyMinimum;
	}
	/**
	 * Gets the Coital Days Married Very Low Frequency Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getCoitalDaysMarriedVeryLowFrequencyMaximum() {
		return coitalDaysMarriedVeryLowFrequencyMaximum;
	}

	/**
	 * Sets the Coital Days Married Very Low Frequency Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _coitalDaysMarriedVeryLowFrequencyMaximum the new Coital Days Married Very Low Frequency Maximum value
	 */

	public void setCoitalDaysMarriedVeryLowFrequencyMaximum(
			double _coitalDaysMarriedVeryLowFrequencyMaximum) {
		coitalDaysMarriedVeryLowFrequencyMaximum = _coitalDaysMarriedVeryLowFrequencyMaximum;
	}
	/**
	 * Gets the Coital Days Married High Frequency Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getCoitalDaysMarriedHighFrequencyMinimum() {
		return coitalDaysMarriedHighFrequencyMinimum;
	}

	/**
	 * Sets the Coital Days Married High Frequency Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _coitalDaysMarriedHighFrequencyMinimum the new Coital Days Married High Frequency Minimum value
	 */

	public void setCoitalDaysMarriedHighFrequencyMinimum(
			double _coitalDaysMarriedHighFrequencyMinimum) {
		coitalDaysMarriedHighFrequencyMinimum = _coitalDaysMarriedHighFrequencyMinimum;
	}
	/**
	 * Gets the Coital Days Married High Frequency Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getCoitalDaysMarriedHighFrequencyMaximum() {
		return coitalDaysMarriedHighFrequencyMaximum;
	}

	/**
	 * Sets the Coital Days Married High Frequency Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _coitalDaysMarriedHighFrequencyMaximum the new Coital Days Married High Frequency Maximum value
	 */

	public void setCoitalDaysMarriedHighFrequencyMaximum(
			double _coitalDaysMarriedHighFrequencyMaximum) {
		coitalDaysMarriedHighFrequencyMaximum = _coitalDaysMarriedHighFrequencyMaximum;
	}
	/**
	 * Gets the Coital Days Married Moderate Frequency Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getCoitalDaysMarriedModerateFrequencyMinimum() {
		return coitalDaysMarriedModerateFrequencyMinimum;
	}

	/**
	 * Sets the Coital Days Married Moderate Frequency Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _coitalDaysMarriedModerateFrequencyMinimum the new Coital Days Married Moderate Frequency Minimum value
	 */

	public void setCoitalDaysMarriedModerateFrequencyMinimum(
			double _coitalDaysMarriedModerateFrequencyMinimum) {
		coitalDaysMarriedModerateFrequencyMinimum = _coitalDaysMarriedModerateFrequencyMinimum;
	}
	/**
	 * Gets the Coital Days Married Moderate Frequency Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getCoitalDaysMarriedModerateFrequencyMaximum() {
		return coitalDaysMarriedModerateFrequencyMaximum;
	}

	/**
	 * Sets the Coital Days Married Moderate Frequency Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _coitalDaysMarriedModerateFrequencyMaximum the new Coital Days Married Moderate Frequency Maximum value
	 */

	public void setCoitalDaysMarriedModerateFrequencyMaximum(
			double _coitalDaysMarriedModerateFrequencyMaximum) {
		coitalDaysMarriedModerateFrequencyMaximum = _coitalDaysMarriedModerateFrequencyMaximum;
	}
	/**
	 * Gets the Coital Days Unmarried Minimum Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getCoitalDaysUnmarriedMinimumBase() {
		return coitalDaysUnmarriedMinimumBase;
	}

	/**
	 * Sets the Coital Days Unmarried Minimum Base property for Relationships And Pregnancy.
	 * 
	 * @param _coitalDaysUnmarriedMinimumBase the new Coital Days Unmarried Minimum Base value
	 */

	public void setCoitalDaysUnmarriedMinimumBase(
			double _coitalDaysUnmarriedMinimumBase) {
		coitalDaysUnmarriedMinimumBase = _coitalDaysUnmarriedMinimumBase;
	}
	/**
	 * Gets the Coital Days Unmarried Maximum Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getCoitalDaysUnmarriedMaximumBase() {
		return coitalDaysUnmarriedMaximumBase;
	}

	/**
	 * Sets the Coital Days Unmarried Maximum Base property for Relationships And Pregnancy.
	 * 
	 * @param _coitalDaysUnmarriedMaximumBase the new Coital Days Unmarried Maximum Base value
	 */

	public void setCoitalDaysUnmarriedMaximumBase(
			double _coitalDaysUnmarriedMaximumBase) {
		coitalDaysUnmarriedMaximumBase = _coitalDaysUnmarriedMaximumBase;
	}
	/**
	 * Gets the Coital Days Unmarried Very Low Frequency Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getCoitalDaysUnmarriedVeryLowFrequencyMinimum() {
		return coitalDaysUnmarriedVeryLowFrequencyMinimum;
	}

	/**
	 * Sets the Coital Days Unmarried Very Low Frequency Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _coitalDaysUnmarriedVeryLowFrequencyMinimum the new Coital Days Unmarried Very Low Frequency Minimum value
	 */

	public void setCoitalDaysUnmarriedVeryLowFrequencyMinimum(
			double _coitalDaysUnmarriedVeryLowFrequencyMinimum) {
		coitalDaysUnmarriedVeryLowFrequencyMinimum = _coitalDaysUnmarriedVeryLowFrequencyMinimum;
	}
	/**
	 * Gets the Coital Days Unmarried Very Low Frequency Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getCoitalDaysUnmarriedVeryLowFrequencyMaximum() {
		return coitalDaysUnmarriedVeryLowFrequencyMaximum;
	}

	/**
	 * Sets the Coital Days Unmarried Very Low Frequency Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _coitalDaysUnmarriedVeryLowFrequencyMaximum the new Coital Days Unmarried Very Low Frequency Maximum value
	 */

	public void setCoitalDaysUnmarriedVeryLowFrequencyMaximum(
			double _coitalDaysUnmarriedVeryLowFrequencyMaximum) {
		coitalDaysUnmarriedVeryLowFrequencyMaximum = _coitalDaysUnmarriedVeryLowFrequencyMaximum;
	}
	/**
	 * Gets the Coital Days Unmarried High Frequency Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getCoitalDaysUnmarriedHighFrequencyMinimum() {
		return coitalDaysUnmarriedHighFrequencyMinimum;
	}

	/**
	 * Sets the Coital Days Unmarried High Frequency Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _coitalDaysUnmarriedHighFrequencyMinimum the new Coital Days Unmarried High Frequency Minimum value
	 */

	public void setCoitalDaysUnmarriedHighFrequencyMinimum(
			double _coitalDaysUnmarriedHighFrequencyMinimum) {
		coitalDaysUnmarriedHighFrequencyMinimum = _coitalDaysUnmarriedHighFrequencyMinimum;
	}
	/**
	 * Gets the Coital Days Unmarried High Frequency Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getCoitalDaysUnmarriedHighFrequencyMaximum() {
		return coitalDaysUnmarriedHighFrequencyMaximum;
	}

	/**
	 * Sets the Coital Days Unmarried High Frequency Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _coitalDaysUnmarriedHighFrequencyMaximum the new Coital Days Unmarried High Frequency Maximum value
	 */

	public void setCoitalDaysUnmarriedHighFrequencyMaximum(
			double _coitalDaysUnmarriedHighFrequencyMaximum) {
		coitalDaysUnmarriedHighFrequencyMaximum = _coitalDaysUnmarriedHighFrequencyMaximum;
	}
	/**
	 * Gets the Coital Days Unmarried Moderate Frequency Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getCoitalDaysUnmarriedModerateFrequencyMinimum() {
		return coitalDaysUnmarriedModerateFrequencyMinimum;
	}

	/**
	 * Sets the Coital Days Unmarried Moderate Frequency Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _coitalDaysUnmarriedModerateFrequencyMinimum the new Coital Days Unmarried Moderate Frequency Minimum value
	 */

	public void setCoitalDaysUnmarriedModerateFrequencyMinimum(
			double _coitalDaysUnmarriedModerateFrequencyMinimum) {
		coitalDaysUnmarriedModerateFrequencyMinimum = _coitalDaysUnmarriedModerateFrequencyMinimum;
	}
	/**
	 * Gets the Coital Days Unmarried Moderate Frequency Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getCoitalDaysUnmarriedModerateFrequencyMaximum() {
		return coitalDaysUnmarriedModerateFrequencyMaximum;
	}

	/**
	 * Sets the Coital Days Unmarried Moderate Frequency Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _coitalDaysUnmarriedModerateFrequencyMaximum the new Coital Days Unmarried Moderate Frequency Maximum value
	 */

	public void setCoitalDaysUnmarriedModerateFrequencyMaximum(
			double _coitalDaysUnmarriedModerateFrequencyMaximum) {
		coitalDaysUnmarriedModerateFrequencyMaximum = _coitalDaysUnmarriedModerateFrequencyMaximum;
	}
	/**
	 * Gets the P High Condom Use Married Factor Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseMarriedFactorBase() {
		return pHighCondomUseMarriedFactorBase;
	}

	/**
	 * Sets the P High Condom Use Married Factor Base property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseMarriedFactorBase the new P High Condom Use Married Factor Base value
	 */

	public void setPHighCondomUseMarriedFactorBase(
			double _pHighCondomUseMarriedFactorBase) {
		pHighCondomUseMarriedFactorBase = _pHighCondomUseMarriedFactorBase;
	}
	/**
	 * Gets the P High Condom Use Married 15 to 19 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseMarried15to19Factor() {
		return pHighCondomUseMarried15to19Factor;
	}

	/**
	 * Sets the P High Condom Use Married 15 to 19 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseMarried15to19Factor the new P High Condom Use Married 15 to 19 Factor value
	 */

	public void setPHighCondomUseMarried15to19Factor(
			double _pHighCondomUseMarried15to19Factor) {
		pHighCondomUseMarried15to19Factor = _pHighCondomUseMarried15to19Factor;
	}
	/**
	 * Gets the P High Condom Use Married 20 to 24 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseMarried20to24Factor() {
		return pHighCondomUseMarried20to24Factor;
	}

	/**
	 * Sets the P High Condom Use Married 20 to 24 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseMarried20to24Factor the new P High Condom Use Married 20 to 24 Factor value
	 */

	public void setPHighCondomUseMarried20to24Factor(
			double _pHighCondomUseMarried20to24Factor) {
		pHighCondomUseMarried20to24Factor = _pHighCondomUseMarried20to24Factor;
	}
	/**
	 * Gets the P High Condom Use Married 25 to 29 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseMarried25to29Factor() {
		return pHighCondomUseMarried25to29Factor;
	}

	/**
	 * Sets the P High Condom Use Married 25 to 29 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseMarried25to29Factor the new P High Condom Use Married 25 to 29 Factor value
	 */

	public void setPHighCondomUseMarried25to29Factor(
			double _pHighCondomUseMarried25to29Factor) {
		pHighCondomUseMarried25to29Factor = _pHighCondomUseMarried25to29Factor;
	}
	/**
	 * Gets the P High Condom Use Married 30 to 44 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseMarried30to44Factor() {
		return pHighCondomUseMarried30to44Factor;
	}

	/**
	 * Sets the P High Condom Use Married 30 to 44 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseMarried30to44Factor the new P High Condom Use Married 30 to 44 Factor value
	 */

	public void setPHighCondomUseMarried30to44Factor(
			double _pHighCondomUseMarried30to44Factor) {
		pHighCondomUseMarried30to44Factor = _pHighCondomUseMarried30to44Factor;
	}
	/**
	 * Gets the P High Condom Use Married NHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseMarriedNHSFactor() {
		return pHighCondomUseMarriedNHSFactor;
	}

	/**
	 * Sets the P High Condom Use Married NHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseMarriedNHSFactor the new P High Condom Use Married NHS Factor value
	 */

	public void setPHighCondomUseMarriedNHSFactor(
			double _pHighCondomUseMarriedNHSFactor) {
		pHighCondomUseMarriedNHSFactor = _pHighCondomUseMarriedNHSFactor;
	}
	/**
	 * Gets the P High Condom Use Married PHS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseMarriedPHSFactor() {
		return pHighCondomUseMarriedPHSFactor;
	}

	/**
	 * Sets the P High Condom Use Married PHS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseMarriedPHSFactor the new P High Condom Use Married PHS Factor value
	 */

	public void setPHighCondomUseMarriedPHSFactor(
			double _pHighCondomUseMarriedPHSFactor) {
		pHighCondomUseMarriedPHSFactor = _pHighCondomUseMarriedPHSFactor;
	}
	/**
	 * Gets the P High Condom Use Married HS Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseMarriedHSFactor() {
		return pHighCondomUseMarriedHSFactor;
	}

	/**
	 * Sets the P High Condom Use Married HS Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseMarriedHSFactor the new P High Condom Use Married HS Factor value
	 */

	public void setPHighCondomUseMarriedHSFactor(
			double _pHighCondomUseMarriedHSFactor) {
		pHighCondomUseMarriedHSFactor = _pHighCondomUseMarriedHSFactor;
	}
	/**
	 * Gets the P High Condom Use Married Other Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseMarriedOtherFactor() {
		return pHighCondomUseMarriedOtherFactor;
	}

	/**
	 * Sets the P High Condom Use Married Other Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseMarriedOtherFactor the new P High Condom Use Married Other Factor value
	 */

	public void setPHighCondomUseMarriedOtherFactor(
			double _pHighCondomUseMarriedOtherFactor) {
		pHighCondomUseMarriedOtherFactor = _pHighCondomUseMarriedOtherFactor;
	}
	/**
	 * Gets the P High Condom Use Married Black Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseMarriedBlackFactor() {
		return pHighCondomUseMarriedBlackFactor;
	}

	/**
	 * Sets the P High Condom Use Married Black Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseMarriedBlackFactor the new P High Condom Use Married Black Factor value
	 */

	public void setPHighCondomUseMarriedBlackFactor(
			double _pHighCondomUseMarriedBlackFactor) {
		pHighCondomUseMarriedBlackFactor = _pHighCondomUseMarriedBlackFactor;
	}
	/**
	 * Gets the P High Condom Use Married Hispanic Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseMarriedHispanicFactor() {
		return pHighCondomUseMarriedHispanicFactor;
	}

	/**
	 * Sets the P High Condom Use Married Hispanic Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseMarriedHispanicFactor the new P High Condom Use Married Hispanic Factor value
	 */

	public void setPHighCondomUseMarriedHispanicFactor(
			double _pHighCondomUseMarriedHispanicFactor) {
		pHighCondomUseMarriedHispanicFactor = _pHighCondomUseMarriedHispanicFactor;
	}
	/**
	 * Gets the P High Condom Use Married White Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseMarriedWhiteFactor() {
		return pHighCondomUseMarriedWhiteFactor;
	}

	/**
	 * Sets the P High Condom Use Married White Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseMarriedWhiteFactor the new P High Condom Use Married White Factor value
	 */

	public void setPHighCondomUseMarriedWhiteFactor(
			double _pHighCondomUseMarriedWhiteFactor) {
		pHighCondomUseMarriedWhiteFactor = _pHighCondomUseMarriedWhiteFactor;
	}
	/**
	 * Gets the P High Condom Use Married Category 1 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseMarriedCategory1Factor() {
		return pHighCondomUseMarriedCategory1Factor;
	}

	/**
	 * Sets the P High Condom Use Married Category 1 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseMarriedCategory1Factor the new P High Condom Use Married Category 1 Factor value
	 */

	public void setPHighCondomUseMarriedCategory1Factor(
			double _pHighCondomUseMarriedCategory1Factor) {
		pHighCondomUseMarriedCategory1Factor = _pHighCondomUseMarriedCategory1Factor;
	}
	/**
	 * Gets the P High Condom Use Married Category 3 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseMarriedCategory3Factor() {
		return pHighCondomUseMarriedCategory3Factor;
	}

	/**
	 * Sets the P High Condom Use Married Category 3 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseMarriedCategory3Factor the new P High Condom Use Married Category 3 Factor value
	 */

	public void setPHighCondomUseMarriedCategory3Factor(
			double _pHighCondomUseMarriedCategory3Factor) {
		pHighCondomUseMarriedCategory3Factor = _pHighCondomUseMarriedCategory3Factor;
	}
	/**
	 * Gets the P High Condom Use Married Category 2 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseMarriedCategory2Factor() {
		return pHighCondomUseMarriedCategory2Factor;
	}

	/**
	 * Sets the P High Condom Use Married Category 2 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseMarriedCategory2Factor the new P High Condom Use Married Category 2 Factor value
	 */

	public void setPHighCondomUseMarriedCategory2Factor(
			double _pHighCondomUseMarriedCategory2Factor) {
		pHighCondomUseMarriedCategory2Factor = _pHighCondomUseMarriedCategory2Factor;
	}
	/**
	 * Gets the P High Condom Use Married Category 4 Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseMarriedCategory4Factor() {
		return pHighCondomUseMarriedCategory4Factor;
	}

	/**
	 * Sets the P High Condom Use Married Category 4 Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseMarriedCategory4Factor the new P High Condom Use Married Category 4 Factor value
	 */

	public void setPHighCondomUseMarriedCategory4Factor(
			double _pHighCondomUseMarriedCategory4Factor) {
		pHighCondomUseMarriedCategory4Factor = _pHighCondomUseMarriedCategory4Factor;
	}
	/**
	 * Gets the P High Condom Use Married Partner Sterilized Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseMarriedPartnerSterilizedFactor() {
		return pHighCondomUseMarriedPartnerSterilizedFactor;
	}

	/**
	 * Sets the P High Condom Use Married Partner Sterilized Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseMarriedPartnerSterilizedFactor the new P High Condom Use Married Partner Sterilized Factor value
	 */

	public void setPHighCondomUseMarriedPartnerSterilizedFactor(
			double _pHighCondomUseMarriedPartnerSterilizedFactor) {
		pHighCondomUseMarriedPartnerSterilizedFactor = _pHighCondomUseMarriedPartnerSterilizedFactor;
	}
	/**
	 * Gets the P High Condom Use Married Other Contraception Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseMarriedOtherContraceptionFactor() {
		return pHighCondomUseMarriedOtherContraceptionFactor;
	}

	/**
	 * Sets the P High Condom Use Married Other Contraception Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseMarriedOtherContraceptionFactor the new P High Condom Use Married Other Contraception Factor value
	 */

	public void setPHighCondomUseMarriedOtherContraceptionFactor(
			double _pHighCondomUseMarriedOtherContraceptionFactor) {
		pHighCondomUseMarriedOtherContraceptionFactor = _pHighCondomUseMarriedOtherContraceptionFactor;
	}
	/**
	 * Gets the P High Condom Use Married Very Low Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseMarriedVeryLowFrequencyFactor() {
		return pHighCondomUseMarriedVeryLowFrequencyFactor;
	}

	/**
	 * Sets the P High Condom Use Married Very Low Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseMarriedVeryLowFrequencyFactor the new P High Condom Use Married Very Low Frequency Factor value
	 */

	public void setPHighCondomUseMarriedVeryLowFrequencyFactor(
			double _pHighCondomUseMarriedVeryLowFrequencyFactor) {
		pHighCondomUseMarriedVeryLowFrequencyFactor = _pHighCondomUseMarriedVeryLowFrequencyFactor;
	}
	/**
	 * Gets the P High Condom Use Married High Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseMarriedHighFrequencyFactor() {
		return pHighCondomUseMarriedHighFrequencyFactor;
	}

	/**
	 * Sets the P High Condom Use Married High Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseMarriedHighFrequencyFactor the new P High Condom Use Married High Frequency Factor value
	 */

	public void setPHighCondomUseMarriedHighFrequencyFactor(
			double _pHighCondomUseMarriedHighFrequencyFactor) {
		pHighCondomUseMarriedHighFrequencyFactor = _pHighCondomUseMarriedHighFrequencyFactor;
	}
	/**
	 * Gets the P High Condom Use Married Moderate Frequency Factor property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPHighCondomUseMarriedModerateFrequencyFactor() {
		return pHighCondomUseMarriedModerateFrequencyFactor;
	}

	/**
	 * Sets the P High Condom Use Married Moderate Frequency Factor property for Relationships And Pregnancy.
	 * 
	 * @param _pHighCondomUseMarriedModerateFrequencyFactor the new P High Condom Use Married Moderate Frequency Factor value
	 */

	public void setPHighCondomUseMarriedModerateFrequencyFactor(
			double _pHighCondomUseMarriedModerateFrequencyFactor) {
		pHighCondomUseMarriedModerateFrequencyFactor = _pHighCondomUseMarriedModerateFrequencyFactor;
	}
	/**
	 * Gets the P Rhythm Method Married None property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPRhythmMethodMarriedNone() {
		return pRhythmMethodMarriedNone;
	}

	/**
	 * Sets the P Rhythm Method Married None property for Relationships And Pregnancy.
	 * 
	 * @param _pRhythmMethodMarriedNone the new P Rhythm Method Married None value
	 */

	public void setPRhythmMethodMarriedNone(double _pRhythmMethodMarriedNone) {
		pRhythmMethodMarriedNone = _pRhythmMethodMarriedNone;
	}
	/**
	 * Gets the P Rhythm Method Married Sterilized property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPRhythmMethodMarriedSterilized() {
		return pRhythmMethodMarriedSterilized;
	}

	/**
	 * Sets the P Rhythm Method Married Sterilized property for Relationships And Pregnancy.
	 * 
	 * @param _pRhythmMethodMarriedSterilized the new P Rhythm Method Married Sterilized value
	 */

	public void setPRhythmMethodMarriedSterilized(
			double _pRhythmMethodMarriedSterilized) {
		pRhythmMethodMarriedSterilized = _pRhythmMethodMarriedSterilized;
	}
	/**
	 * Gets the P Rhythm Method Married Pill property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPRhythmMethodMarriedPill() {
		return pRhythmMethodMarriedPill;
	}

	/**
	 * Sets the P Rhythm Method Married Pill property for Relationships And Pregnancy.
	 * 
	 * @param _pRhythmMethodMarriedPill the new P Rhythm Method Married Pill value
	 */

	public void setPRhythmMethodMarriedPill(double _pRhythmMethodMarriedPill) {
		pRhythmMethodMarriedPill = _pRhythmMethodMarriedPill;
	}
	/**
	 * Gets the P Rhythm Method Married Condom Medium Intender property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPRhythmMethodMarriedCondomMediumIntender() {
		return pRhythmMethodMarriedCondomMediumIntender;
	}

	/**
	 * Sets the P Rhythm Method Married Condom Medium Intender property for Relationships And Pregnancy.
	 * 
	 * @param _pRhythmMethodMarriedCondomMediumIntender the new P Rhythm Method Married Condom Medium Intender value
	 */

	public void setPRhythmMethodMarriedCondomMediumIntender(
			double _pRhythmMethodMarriedCondomMediumIntender) {
		pRhythmMethodMarriedCondomMediumIntender = _pRhythmMethodMarriedCondomMediumIntender;
	}
	/**
	 * Gets the P Rhythm Method Married Condom High Intender property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPRhythmMethodMarriedCondomHighIntender() {
		return pRhythmMethodMarriedCondomHighIntender;
	}

	/**
	 * Sets the P Rhythm Method Married Condom High Intender property for Relationships And Pregnancy.
	 * 
	 * @param _pRhythmMethodMarriedCondomHighIntender the new P Rhythm Method Married Condom High Intender value
	 */

	public void setPRhythmMethodMarriedCondomHighIntender(
			double _pRhythmMethodMarriedCondomHighIntender) {
		pRhythmMethodMarriedCondomHighIntender = _pRhythmMethodMarriedCondomHighIntender;
	}
	/**
	 * Gets the P Rhythm Method Single None property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPRhythmMethodSingleNone() {
		return pRhythmMethodSingleNone;
	}

	/**
	 * Sets the P Rhythm Method Single None property for Relationships And Pregnancy.
	 * 
	 * @param _pRhythmMethodSingleNone the new P Rhythm Method Single None value
	 */

	public void setPRhythmMethodSingleNone(double _pRhythmMethodSingleNone) {
		pRhythmMethodSingleNone = _pRhythmMethodSingleNone;
	}
	/**
	 * Gets the P Rhythm Method Single Sterilized property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPRhythmMethodSingleSterilized() {
		return pRhythmMethodSingleSterilized;
	}

	/**
	 * Sets the P Rhythm Method Single Sterilized property for Relationships And Pregnancy.
	 * 
	 * @param _pRhythmMethodSingleSterilized the new P Rhythm Method Single Sterilized value
	 */

	public void setPRhythmMethodSingleSterilized(
			double _pRhythmMethodSingleSterilized) {
		pRhythmMethodSingleSterilized = _pRhythmMethodSingleSterilized;
	}
	/**
	 * Gets the P Rhythm Method Single Pill property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPRhythmMethodSinglePill() {
		return pRhythmMethodSinglePill;
	}

	/**
	 * Sets the P Rhythm Method Single Pill property for Relationships And Pregnancy.
	 * 
	 * @param _pRhythmMethodSinglePill the new P Rhythm Method Single Pill value
	 */

	public void setPRhythmMethodSinglePill(double _pRhythmMethodSinglePill) {
		pRhythmMethodSinglePill = _pRhythmMethodSinglePill;
	}
	/**
	 * Gets the P Rhythm Method Single Condom Medium Intender property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPRhythmMethodSingleCondomMediumIntender() {
		return pRhythmMethodSingleCondomMediumIntender;
	}

	/**
	 * Sets the P Rhythm Method Single Condom Medium Intender property for Relationships And Pregnancy.
	 * 
	 * @param _pRhythmMethodSingleCondomMediumIntender the new P Rhythm Method Single Condom Medium Intender value
	 */

	public void setPRhythmMethodSingleCondomMediumIntender(
			double _pRhythmMethodSingleCondomMediumIntender) {
		pRhythmMethodSingleCondomMediumIntender = _pRhythmMethodSingleCondomMediumIntender;
	}
	/**
	 * Gets the P Rhythm Method Single Condom High Intender property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPRhythmMethodSingleCondomHighIntender() {
		return pRhythmMethodSingleCondomHighIntender;
	}

	/**
	 * Sets the P Rhythm Method Single Condom High Intender property for Relationships And Pregnancy.
	 * 
	 * @param _pRhythmMethodSingleCondomHighIntender the new P Rhythm Method Single Condom High Intender value
	 */

	public void setPRhythmMethodSingleCondomHighIntender(
			double _pRhythmMethodSingleCondomHighIntender) {
		pRhythmMethodSingleCondomHighIntender = _pRhythmMethodSingleCondomHighIntender;
	}
	/**
	 * Gets the P Rhythm Method Divorced None property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPRhythmMethodDivorcedNone() {
		return pRhythmMethodDivorcedNone;
	}

	/**
	 * Sets the P Rhythm Method Divorced None property for Relationships And Pregnancy.
	 * 
	 * @param _pRhythmMethodDivorcedNone the new P Rhythm Method Divorced None value
	 */

	public void setPRhythmMethodDivorcedNone(double _pRhythmMethodDivorcedNone) {
		pRhythmMethodDivorcedNone = _pRhythmMethodDivorcedNone;
	}
	/**
	 * Gets the P Rhythm Method Divorced Sterilized property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPRhythmMethodDivorcedSterilized() {
		return pRhythmMethodDivorcedSterilized;
	}

	/**
	 * Sets the P Rhythm Method Divorced Sterilized property for Relationships And Pregnancy.
	 * 
	 * @param _pRhythmMethodDivorcedSterilized the new P Rhythm Method Divorced Sterilized value
	 */

	public void setPRhythmMethodDivorcedSterilized(
			double _pRhythmMethodDivorcedSterilized) {
		pRhythmMethodDivorcedSterilized = _pRhythmMethodDivorcedSterilized;
	}
	/**
	 * Gets the P Rhythm Method Divorced Pill property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPRhythmMethodDivorcedPill() {
		return pRhythmMethodDivorcedPill;
	}

	/**
	 * Sets the P Rhythm Method Divorced Pill property for Relationships And Pregnancy.
	 * 
	 * @param _pRhythmMethodDivorcedPill the new P Rhythm Method Divorced Pill value
	 */

	public void setPRhythmMethodDivorcedPill(double _pRhythmMethodDivorcedPill) {
		pRhythmMethodDivorcedPill = _pRhythmMethodDivorcedPill;
	}
	/**
	 * Gets the P Rhythm Method Divorced Condom Medium Intender property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPRhythmMethodDivorcedCondomMediumIntender() {
		return pRhythmMethodDivorcedCondomMediumIntender;
	}

	/**
	 * Sets the P Rhythm Method Divorced Condom Medium Intender property for Relationships And Pregnancy.
	 * 
	 * @param _pRhythmMethodDivorcedCondomMediumIntender the new P Rhythm Method Divorced Condom Medium Intender value
	 */

	public void setPRhythmMethodDivorcedCondomMediumIntender(
			double _pRhythmMethodDivorcedCondomMediumIntender) {
		pRhythmMethodDivorcedCondomMediumIntender = _pRhythmMethodDivorcedCondomMediumIntender;
	}
	/**
	 * Gets the P Rhythm Method Divorced Condom High Intender property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPRhythmMethodDivorcedCondomHighIntender() {
		return pRhythmMethodDivorcedCondomHighIntender;
	}

	/**
	 * Sets the P Rhythm Method Divorced Condom High Intender property for Relationships And Pregnancy.
	 * 
	 * @param _pRhythmMethodDivorcedCondomHighIntender the new P Rhythm Method Divorced Condom High Intender value
	 */

	public void setPRhythmMethodDivorcedCondomHighIntender(
			double _pRhythmMethodDivorcedCondomHighIntender) {
		pRhythmMethodDivorcedCondomHighIntender = _pRhythmMethodDivorcedCondomHighIntender;
	}
	/**
	 * Gets the Marriage And Divorce Start Day property for Relationships And Pregnancy.
	 * @return This specifies the model iteration (day) when we first start allowing marriages and divorces to occur. This is designed to allow model behavior (e.g. relationship formation) to go through transition period before beginning marriage dynamics.
	 */

	public int getMarriageAndDivorceStartDay() {
		return marriageAndDivorceStartDay;
	}

	/**
	 * Sets the Marriage And Divorce Start Day property for Relationships And Pregnancy.
	 * This specifies the model iteration (day) when we first start allowing marriages and divorces to occur. This is designed to allow model behavior (e.g. relationship formation) to go through transition period before beginning marriage dynamics.
	 * @param _marriageAndDivorceStartDay the new Marriage And Divorce Start Day value
	 */

	public void setMarriageAndDivorceStartDay(int _marriageAndDivorceStartDay) {
		marriageAndDivorceStartDay = _marriageAndDivorceStartDay;
	}
	/**
	 * Gets the P Marriage Yearly to Daily Conversion property for Relationships And Pregnancy.
	 * @return A factor to convert from yearly probability of marriage to daily probability.
	 */

	public double getPMarriageYearlytoDailyConversion() {
		return pMarriageYearlytoDailyConversion;
	}

	/**
	 * Sets the P Marriage Yearly to Daily Conversion property for Relationships And Pregnancy.
	 * A factor to convert from yearly probability of marriage to daily probability.
	 * @param _pMarriageYearlytoDailyConversion the new P Marriage Yearly to Daily Conversion value
	 */

	public void setPMarriageYearlytoDailyConversion(
			double _pMarriageYearlytoDailyConversion) {
		pMarriageYearlytoDailyConversion = _pMarriageYearlytoDailyConversion;
	}
	/**
	 * Gets the P Divorce Yearly to Daily Conversion property for Relationships And Pregnancy.
	 * @return A factor to convert from yearly probability of divorce to daily probability.
	 */

	public double getPDivorceYearlytoDailyConversion() {
		return pDivorceYearlytoDailyConversion;
	}

	/**
	 * Sets the P Divorce Yearly to Daily Conversion property for Relationships And Pregnancy.
	 * A factor to convert from yearly probability of divorce to daily probability.
	 * @param _pDivorceYearlytoDailyConversion the new P Divorce Yearly to Daily Conversion value
	 */

	public void setPDivorceYearlytoDailyConversion(
			double _pDivorceYearlytoDailyConversion) {
		pDivorceYearlytoDailyConversion = _pDivorceYearlytoDailyConversion;
	}
	/**
	 * Gets the P Divorce Minimum Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceMinimumBase() {
		return pDivorceMinimumBase;
	}

	/**
	 * Sets the P Divorce Minimum Base property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceMinimumBase the new P Divorce Minimum Base value
	 */

	public void setPDivorceMinimumBase(double _pDivorceMinimumBase) {
		pDivorceMinimumBase = _pDivorceMinimumBase;
	}
	/**
	 * Gets the P Divorce Maximum Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceMaximumBase() {
		return pDivorceMaximumBase;
	}

	/**
	 * Sets the P Divorce Maximum Base property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceMaximumBase the new P Divorce Maximum Base value
	 */

	public void setPDivorceMaximumBase(double _pDivorceMaximumBase) {
		pDivorceMaximumBase = _pDivorceMaximumBase;
	}
	/**
	 * Gets the P Divorce Female Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceFemaleMinimum() {
		return pDivorceFemaleMinimum;
	}

	/**
	 * Sets the P Divorce Female Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceFemaleMinimum the new P Divorce Female Minimum value
	 */

	public void setPDivorceFemaleMinimum(double _pDivorceFemaleMinimum) {
		pDivorceFemaleMinimum = _pDivorceFemaleMinimum;
	}
	/**
	 * Gets the P Divorce Female Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceFemaleMaximum() {
		return pDivorceFemaleMaximum;
	}

	/**
	 * Sets the P Divorce Female Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceFemaleMaximum the new P Divorce Female Maximum value
	 */

	public void setPDivorceFemaleMaximum(double _pDivorceFemaleMaximum) {
		pDivorceFemaleMaximum = _pDivorceFemaleMaximum;
	}
	/**
	 * Gets the P Divorce Male Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceMaleMinimum() {
		return pDivorceMaleMinimum;
	}

	/**
	 * Sets the P Divorce Male Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceMaleMinimum the new P Divorce Male Minimum value
	 */

	public void setPDivorceMaleMinimum(double _pDivorceMaleMinimum) {
		pDivorceMaleMinimum = _pDivorceMaleMinimum;
	}
	/**
	 * Gets the P Divorce Male Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceMaleMaximum() {
		return pDivorceMaleMaximum;
	}

	/**
	 * Sets the P Divorce Male Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceMaleMaximum the new P Divorce Male Maximum value
	 */

	public void setPDivorceMaleMaximum(double _pDivorceMaleMaximum) {
		pDivorceMaleMaximum = _pDivorceMaleMaximum;
	}
	/**
	 * Gets the P Divorce 15 to 19 Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorce15to19Minimum() {
		return pDivorce15to19Minimum;
	}

	/**
	 * Sets the P Divorce 15 to 19 Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorce15to19Minimum the new P Divorce 15 to 19 Minimum value
	 */

	public void setPDivorce15to19Minimum(double _pDivorce15to19Minimum) {
		pDivorce15to19Minimum = _pDivorce15to19Minimum;
	}
	/**
	 * Gets the P Divorce 15 to 19 Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorce15to19Maximum() {
		return pDivorce15to19Maximum;
	}

	/**
	 * Sets the P Divorce 15 to 19 Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorce15to19Maximum the new P Divorce 15 to 19 Maximum value
	 */

	public void setPDivorce15to19Maximum(double _pDivorce15to19Maximum) {
		pDivorce15to19Maximum = _pDivorce15to19Maximum;
	}
	/**
	 * Gets the P Divorce 20 to 24 Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorce20to24Minimum() {
		return pDivorce20to24Minimum;
	}

	/**
	 * Sets the P Divorce 20 to 24 Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorce20to24Minimum the new P Divorce 20 to 24 Minimum value
	 */

	public void setPDivorce20to24Minimum(double _pDivorce20to24Minimum) {
		pDivorce20to24Minimum = _pDivorce20to24Minimum;
	}
	/**
	 * Gets the P Divorce 20 to 24 Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorce20to24Maximum() {
		return pDivorce20to24Maximum;
	}

	/**
	 * Sets the P Divorce 20 to 24 Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorce20to24Maximum the new P Divorce 20 to 24 Maximum value
	 */

	public void setPDivorce20to24Maximum(double _pDivorce20to24Maximum) {
		pDivorce20to24Maximum = _pDivorce20to24Maximum;
	}
	/**
	 * Gets the P Divorce 25 to 29 Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorce25to29Minimum() {
		return pDivorce25to29Minimum;
	}

	/**
	 * Sets the P Divorce 25 to 29 Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorce25to29Minimum the new P Divorce 25 to 29 Minimum value
	 */

	public void setPDivorce25to29Minimum(double _pDivorce25to29Minimum) {
		pDivorce25to29Minimum = _pDivorce25to29Minimum;
	}
	/**
	 * Gets the P Divorce 25 to 29 Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorce25to29Maximum() {
		return pDivorce25to29Maximum;
	}

	/**
	 * Sets the P Divorce 25 to 29 Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorce25to29Maximum the new P Divorce 25 to 29 Maximum value
	 */

	public void setPDivorce25to29Maximum(double _pDivorce25to29Maximum) {
		pDivorce25to29Maximum = _pDivorce25to29Maximum;
	}
	/**
	 * Gets the P Divorce 30 to 44 Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorce30to44Minimum() {
		return pDivorce30to44Minimum;
	}

	/**
	 * Sets the P Divorce 30 to 44 Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorce30to44Minimum the new P Divorce 30 to 44 Minimum value
	 */

	public void setPDivorce30to44Minimum(double _pDivorce30to44Minimum) {
		pDivorce30to44Minimum = _pDivorce30to44Minimum;
	}
	/**
	 * Gets the P Divorce 30 to 44 Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorce30to44Maximum() {
		return pDivorce30to44Maximum;
	}

	/**
	 * Sets the P Divorce 30 to 44 Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorce30to44Maximum the new P Divorce 30 to 44 Maximum value
	 */

	public void setPDivorce30to44Maximum(double _pDivorce30to44Maximum) {
		pDivorce30to44Maximum = _pDivorce30to44Maximum;
	}
	/**
	 * Gets the P Divorce NHS Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceNHSMinimum() {
		return pDivorceNHSMinimum;
	}

	/**
	 * Sets the P Divorce NHS Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceNHSMinimum the new P Divorce NHS Minimum value
	 */

	public void setPDivorceNHSMinimum(double _pDivorceNHSMinimum) {
		pDivorceNHSMinimum = _pDivorceNHSMinimum;
	}
	/**
	 * Gets the P Divorce NHS Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceNHSMaximum() {
		return pDivorceNHSMaximum;
	}

	/**
	 * Sets the P Divorce NHS Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceNHSMaximum the new P Divorce NHS Maximum value
	 */

	public void setPDivorceNHSMaximum(double _pDivorceNHSMaximum) {
		pDivorceNHSMaximum = _pDivorceNHSMaximum;
	}
	/**
	 * Gets the P Divorce PHS Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorcePHSMinimum() {
		return pDivorcePHSMinimum;
	}

	/**
	 * Sets the P Divorce PHS Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorcePHSMinimum the new P Divorce PHS Minimum value
	 */

	public void setPDivorcePHSMinimum(double _pDivorcePHSMinimum) {
		pDivorcePHSMinimum = _pDivorcePHSMinimum;
	}
	/**
	 * Gets the P Divorce PHS Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorcePHSMaximum() {
		return pDivorcePHSMaximum;
	}

	/**
	 * Sets the P Divorce PHS Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorcePHSMaximum the new P Divorce PHS Maximum value
	 */

	public void setPDivorcePHSMaximum(double _pDivorcePHSMaximum) {
		pDivorcePHSMaximum = _pDivorcePHSMaximum;
	}
	/**
	 * Gets the P Divorce HS Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceHSMinimum() {
		return pDivorceHSMinimum;
	}

	/**
	 * Sets the P Divorce HS Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceHSMinimum the new P Divorce HS Minimum value
	 */

	public void setPDivorceHSMinimum(double _pDivorceHSMinimum) {
		pDivorceHSMinimum = _pDivorceHSMinimum;
	}
	/**
	 * Gets the P Divorce HS Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceHSMaximum() {
		return pDivorceHSMaximum;
	}

	/**
	 * Sets the P Divorce HS Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceHSMaximum the new P Divorce HS Maximum value
	 */

	public void setPDivorceHSMaximum(double _pDivorceHSMaximum) {
		pDivorceHSMaximum = _pDivorceHSMaximum;
	}
	/**
	 * Gets the P Divorce Other Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceOtherMinimum() {
		return pDivorceOtherMinimum;
	}

	/**
	 * Sets the P Divorce Other Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceOtherMinimum the new P Divorce Other Minimum value
	 */

	public void setPDivorceOtherMinimum(double _pDivorceOtherMinimum) {
		pDivorceOtherMinimum = _pDivorceOtherMinimum;
	}
	/**
	 * Gets the P Divorce Other Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceOtherMaximum() {
		return pDivorceOtherMaximum;
	}

	/**
	 * Sets the P Divorce Other Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceOtherMaximum the new P Divorce Other Maximum value
	 */

	public void setPDivorceOtherMaximum(double _pDivorceOtherMaximum) {
		pDivorceOtherMaximum = _pDivorceOtherMaximum;
	}
	/**
	 * Gets the P Divorce Black Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceBlackMinimum() {
		return pDivorceBlackMinimum;
	}

	/**
	 * Sets the P Divorce Black Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceBlackMinimum the new P Divorce Black Minimum value
	 */

	public void setPDivorceBlackMinimum(double _pDivorceBlackMinimum) {
		pDivorceBlackMinimum = _pDivorceBlackMinimum;
	}
	/**
	 * Gets the P Divorce Black Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceBlackMaximum() {
		return pDivorceBlackMaximum;
	}

	/**
	 * Sets the P Divorce Black Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceBlackMaximum the new P Divorce Black Maximum value
	 */

	public void setPDivorceBlackMaximum(double _pDivorceBlackMaximum) {
		pDivorceBlackMaximum = _pDivorceBlackMaximum;
	}
	/**
	 * Gets the P Divorce Hispanic Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceHispanicMinimum() {
		return pDivorceHispanicMinimum;
	}

	/**
	 * Sets the P Divorce Hispanic Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceHispanicMinimum the new P Divorce Hispanic Minimum value
	 */

	public void setPDivorceHispanicMinimum(double _pDivorceHispanicMinimum) {
		pDivorceHispanicMinimum = _pDivorceHispanicMinimum;
	}
	/**
	 * Gets the P Divorce Hispanic Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceHispanicMaximum() {
		return pDivorceHispanicMaximum;
	}

	/**
	 * Sets the P Divorce Hispanic Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceHispanicMaximum the new P Divorce Hispanic Maximum value
	 */

	public void setPDivorceHispanicMaximum(double _pDivorceHispanicMaximum) {
		pDivorceHispanicMaximum = _pDivorceHispanicMaximum;
	}
	/**
	 * Gets the P Divorce White Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceWhiteMinimum() {
		return pDivorceWhiteMinimum;
	}

	/**
	 * Sets the P Divorce White Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceWhiteMinimum the new P Divorce White Minimum value
	 */

	public void setPDivorceWhiteMinimum(double _pDivorceWhiteMinimum) {
		pDivorceWhiteMinimum = _pDivorceWhiteMinimum;
	}
	/**
	 * Gets the P Divorce White Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceWhiteMaximum() {
		return pDivorceWhiteMaximum;
	}

	/**
	 * Sets the P Divorce White Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceWhiteMaximum the new P Divorce White Maximum value
	 */

	public void setPDivorceWhiteMaximum(double _pDivorceWhiteMaximum) {
		pDivorceWhiteMaximum = _pDivorceWhiteMaximum;
	}
	/**
	 * Gets the P Divorce Category 1 Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceCategory1Minimum() {
		return pDivorceCategory1Minimum;
	}

	/**
	 * Sets the P Divorce Category 1 Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceCategory1Minimum the new P Divorce Category 1 Minimum value
	 */

	public void setPDivorceCategory1Minimum(double _pDivorceCategory1Minimum) {
		pDivorceCategory1Minimum = _pDivorceCategory1Minimum;
	}
	/**
	 * Gets the P Divorce Category 1 Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceCategory1Maximum() {
		return pDivorceCategory1Maximum;
	}

	/**
	 * Sets the P Divorce Category 1 Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceCategory1Maximum the new P Divorce Category 1 Maximum value
	 */

	public void setPDivorceCategory1Maximum(double _pDivorceCategory1Maximum) {
		pDivorceCategory1Maximum = _pDivorceCategory1Maximum;
	}
	/**
	 * Gets the P Divorce Category 3 Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceCategory3Minimum() {
		return pDivorceCategory3Minimum;
	}

	/**
	 * Sets the P Divorce Category 3 Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceCategory3Minimum the new P Divorce Category 3 Minimum value
	 */

	public void setPDivorceCategory3Minimum(double _pDivorceCategory3Minimum) {
		pDivorceCategory3Minimum = _pDivorceCategory3Minimum;
	}
	/**
	 * Gets the P Divorce Category 3 Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceCategory3Maximum() {
		return pDivorceCategory3Maximum;
	}

	/**
	 * Sets the P Divorce Category 3 Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceCategory3Maximum the new P Divorce Category 3 Maximum value
	 */

	public void setPDivorceCategory3Maximum(double _pDivorceCategory3Maximum) {
		pDivorceCategory3Maximum = _pDivorceCategory3Maximum;
	}
	/**
	 * Gets the P Divorce Category 2 Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceCategory2Minimum() {
		return pDivorceCategory2Minimum;
	}

	/**
	 * Sets the P Divorce Category 2 Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceCategory2Minimum the new P Divorce Category 2 Minimum value
	 */

	public void setPDivorceCategory2Minimum(double _pDivorceCategory2Minimum) {
		pDivorceCategory2Minimum = _pDivorceCategory2Minimum;
	}
	/**
	 * Gets the P Divorce Category 2 Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceCategory2Maximum() {
		return pDivorceCategory2Maximum;
	}

	/**
	 * Sets the P Divorce Category 2 Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceCategory2Maximum the new P Divorce Category 2 Maximum value
	 */

	public void setPDivorceCategory2Maximum(double _pDivorceCategory2Maximum) {
		pDivorceCategory2Maximum = _pDivorceCategory2Maximum;
	}
	/**
	 * Gets the P Divorce Category 4 Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceCategory4Minimum() {
		return pDivorceCategory4Minimum;
	}

	/**
	 * Sets the P Divorce Category 4 Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceCategory4Minimum the new P Divorce Category 4 Minimum value
	 */

	public void setPDivorceCategory4Minimum(double _pDivorceCategory4Minimum) {
		pDivorceCategory4Minimum = _pDivorceCategory4Minimum;
	}
	/**
	 * Gets the P Divorce Category 4 Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceCategory4Maximum() {
		return pDivorceCategory4Maximum;
	}

	/**
	 * Sets the P Divorce Category 4 Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceCategory4Maximum the new P Divorce Category 4 Maximum value
	 */

	public void setPDivorceCategory4Maximum(double _pDivorceCategory4Maximum) {
		pDivorceCategory4Maximum = _pDivorceCategory4Maximum;
	}
	/**
	 * Gets the P Divorce Not Pregnant Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceNotPregnantMinimum() {
		return pDivorceNotPregnantMinimum;
	}

	/**
	 * Sets the P Divorce Not Pregnant Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceNotPregnantMinimum the new P Divorce Not Pregnant Minimum value
	 */

	public void setPDivorceNotPregnantMinimum(double _pDivorceNotPregnantMinimum) {
		pDivorceNotPregnantMinimum = _pDivorceNotPregnantMinimum;
	}
	/**
	 * Gets the P Divorce Not Pregnant Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorceNotPregnantMaximum() {
		return pDivorceNotPregnantMaximum;
	}

	/**
	 * Sets the P Divorce Not Pregnant Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorceNotPregnantMaximum the new P Divorce Not Pregnant Maximum value
	 */

	public void setPDivorceNotPregnantMaximum(double _pDivorceNotPregnantMaximum) {
		pDivorceNotPregnantMaximum = _pDivorceNotPregnantMaximum;
	}
	/**
	 * Gets the P Divorce Pregnant Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorcePregnantMinimum() {
		return pDivorcePregnantMinimum;
	}

	/**
	 * Sets the P Divorce Pregnant Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorcePregnantMinimum the new P Divorce Pregnant Minimum value
	 */

	public void setPDivorcePregnantMinimum(double _pDivorcePregnantMinimum) {
		pDivorcePregnantMinimum = _pDivorcePregnantMinimum;
	}
	/**
	 * Gets the P Divorce Pregnant Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPDivorcePregnantMaximum() {
		return pDivorcePregnantMaximum;
	}

	/**
	 * Sets the P Divorce Pregnant Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pDivorcePregnantMaximum the new P Divorce Pregnant Maximum value
	 */

	public void setPDivorcePregnantMaximum(double _pDivorcePregnantMaximum) {
		pDivorcePregnantMaximum = _pDivorcePregnantMaximum;
	}
	/**
	 * Gets the P Marriage Minimum Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageMinimumBase() {
		return pMarriageMinimumBase;
	}

	/**
	 * Sets the P Marriage Minimum Base property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageMinimumBase the new P Marriage Minimum Base value
	 */

	public void setPMarriageMinimumBase(double _pMarriageMinimumBase) {
		pMarriageMinimumBase = _pMarriageMinimumBase;
	}
	/**
	 * Gets the P Marriage Maximum Base property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageMaximumBase() {
		return pMarriageMaximumBase;
	}

	/**
	 * Sets the P Marriage Maximum Base property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageMaximumBase the new P Marriage Maximum Base value
	 */

	public void setPMarriageMaximumBase(double _pMarriageMaximumBase) {
		pMarriageMaximumBase = _pMarriageMaximumBase;
	}
	/**
	 * Gets the P Marriage Female Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageFemaleMinimum() {
		return pMarriageFemaleMinimum;
	}

	/**
	 * Sets the P Marriage Female Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageFemaleMinimum the new P Marriage Female Minimum value
	 */

	public void setPMarriageFemaleMinimum(double _pMarriageFemaleMinimum) {
		pMarriageFemaleMinimum = _pMarriageFemaleMinimum;
	}
	/**
	 * Gets the P Marriage Female Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageFemaleMaximum() {
		return pMarriageFemaleMaximum;
	}

	/**
	 * Sets the P Marriage Female Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageFemaleMaximum the new P Marriage Female Maximum value
	 */

	public void setPMarriageFemaleMaximum(double _pMarriageFemaleMaximum) {
		pMarriageFemaleMaximum = _pMarriageFemaleMaximum;
	}
	/**
	 * Gets the P Marriage Male Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageMaleMinimum() {
		return pMarriageMaleMinimum;
	}

	/**
	 * Sets the P Marriage Male Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageMaleMinimum the new P Marriage Male Minimum value
	 */

	public void setPMarriageMaleMinimum(double _pMarriageMaleMinimum) {
		pMarriageMaleMinimum = _pMarriageMaleMinimum;
	}
	/**
	 * Gets the P Marriage Male Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageMaleMaximum() {
		return pMarriageMaleMaximum;
	}

	/**
	 * Sets the P Marriage Male Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageMaleMaximum the new P Marriage Male Maximum value
	 */

	public void setPMarriageMaleMaximum(double _pMarriageMaleMaximum) {
		pMarriageMaleMaximum = _pMarriageMaleMaximum;
	}
	/**
	 * Gets the P Marriage 15 to 19 Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriage15to19Minimum() {
		return pMarriage15to19Minimum;
	}

	/**
	 * Sets the P Marriage 15 to 19 Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriage15to19Minimum the new P Marriage 15 to 19 Minimum value
	 */

	public void setPMarriage15to19Minimum(double _pMarriage15to19Minimum) {
		pMarriage15to19Minimum = _pMarriage15to19Minimum;
	}
	/**
	 * Gets the P Marriage 15 to 19 Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriage15to19Maximum() {
		return pMarriage15to19Maximum;
	}

	/**
	 * Sets the P Marriage 15 to 19 Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriage15to19Maximum the new P Marriage 15 to 19 Maximum value
	 */

	public void setPMarriage15to19Maximum(double _pMarriage15to19Maximum) {
		pMarriage15to19Maximum = _pMarriage15to19Maximum;
	}
	/**
	 * Gets the P Marriage 20 to 24 Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriage20to24Minimum() {
		return pMarriage20to24Minimum;
	}

	/**
	 * Sets the P Marriage 20 to 24 Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriage20to24Minimum the new P Marriage 20 to 24 Minimum value
	 */

	public void setPMarriage20to24Minimum(double _pMarriage20to24Minimum) {
		pMarriage20to24Minimum = _pMarriage20to24Minimum;
	}
	/**
	 * Gets the P Marriage 20 to 24 Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriage20to24Maximum() {
		return pMarriage20to24Maximum;
	}

	/**
	 * Sets the P Marriage 20 to 24 Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriage20to24Maximum the new P Marriage 20 to 24 Maximum value
	 */

	public void setPMarriage20to24Maximum(double _pMarriage20to24Maximum) {
		pMarriage20to24Maximum = _pMarriage20to24Maximum;
	}
	/**
	 * Gets the P Marriage 25 to 29 Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriage25to29Minimum() {
		return pMarriage25to29Minimum;
	}

	/**
	 * Sets the P Marriage 25 to 29 Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriage25to29Minimum the new P Marriage 25 to 29 Minimum value
	 */

	public void setPMarriage25to29Minimum(double _pMarriage25to29Minimum) {
		pMarriage25to29Minimum = _pMarriage25to29Minimum;
	}
	/**
	 * Gets the P Marriage 25 to 29 Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriage25to29Maximum() {
		return pMarriage25to29Maximum;
	}

	/**
	 * Sets the P Marriage 25 to 29 Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriage25to29Maximum the new P Marriage 25 to 29 Maximum value
	 */

	public void setPMarriage25to29Maximum(double _pMarriage25to29Maximum) {
		pMarriage25to29Maximum = _pMarriage25to29Maximum;
	}
	/**
	 * Gets the P Marriage 30 to 44 Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriage30to44Minimum() {
		return pMarriage30to44Minimum;
	}

	/**
	 * Sets the P Marriage 30 to 44 Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriage30to44Minimum the new P Marriage 30 to 44 Minimum value
	 */

	public void setPMarriage30to44Minimum(double _pMarriage30to44Minimum) {
		pMarriage30to44Minimum = _pMarriage30to44Minimum;
	}
	/**
	 * Gets the P Marriage 30 to 44 Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriage30to44Maximum() {
		return pMarriage30to44Maximum;
	}

	/**
	 * Sets the P Marriage 30 to 44 Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriage30to44Maximum the new P Marriage 30 to 44 Maximum value
	 */

	public void setPMarriage30to44Maximum(double _pMarriage30to44Maximum) {
		pMarriage30to44Maximum = _pMarriage30to44Maximum;
	}
	/**
	 * Gets the P Marriage NHS Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageNHSMinimum() {
		return pMarriageNHSMinimum;
	}

	/**
	 * Sets the P Marriage NHS Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageNHSMinimum the new P Marriage NHS Minimum value
	 */

	public void setPMarriageNHSMinimum(double _pMarriageNHSMinimum) {
		pMarriageNHSMinimum = _pMarriageNHSMinimum;
	}
	/**
	 * Gets the P Marriage NHS Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageNHSMaximum() {
		return pMarriageNHSMaximum;
	}

	/**
	 * Sets the P Marriage NHS Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageNHSMaximum the new P Marriage NHS Maximum value
	 */

	public void setPMarriageNHSMaximum(double _pMarriageNHSMaximum) {
		pMarriageNHSMaximum = _pMarriageNHSMaximum;
	}
	/**
	 * Gets the P Marriage PHS Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriagePHSMinimum() {
		return pMarriagePHSMinimum;
	}

	/**
	 * Sets the P Marriage PHS Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriagePHSMinimum the new P Marriage PHS Minimum value
	 */

	public void setPMarriagePHSMinimum(double _pMarriagePHSMinimum) {
		pMarriagePHSMinimum = _pMarriagePHSMinimum;
	}
	/**
	 * Gets the P Marriage PHS Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriagePHSMaximum() {
		return pMarriagePHSMaximum;
	}

	/**
	 * Sets the P Marriage PHS Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriagePHSMaximum the new P Marriage PHS Maximum value
	 */

	public void setPMarriagePHSMaximum(double _pMarriagePHSMaximum) {
		pMarriagePHSMaximum = _pMarriagePHSMaximum;
	}
	/**
	 * Gets the P Marriage HS Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageHSMinimum() {
		return pMarriageHSMinimum;
	}

	/**
	 * Sets the P Marriage HS Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageHSMinimum the new P Marriage HS Minimum value
	 */

	public void setPMarriageHSMinimum(double _pMarriageHSMinimum) {
		pMarriageHSMinimum = _pMarriageHSMinimum;
	}
	/**
	 * Gets the P Marriage HS Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageHSMaximum() {
		return pMarriageHSMaximum;
	}

	/**
	 * Sets the P Marriage HS Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageHSMaximum the new P Marriage HS Maximum value
	 */

	public void setPMarriageHSMaximum(double _pMarriageHSMaximum) {
		pMarriageHSMaximum = _pMarriageHSMaximum;
	}
	/**
	 * Gets the P Marriage Other Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageOtherMinimum() {
		return pMarriageOtherMinimum;
	}

	/**
	 * Sets the P Marriage Other Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageOtherMinimum the new P Marriage Other Minimum value
	 */

	public void setPMarriageOtherMinimum(double _pMarriageOtherMinimum) {
		pMarriageOtherMinimum = _pMarriageOtherMinimum;
	}
	/**
	 * Gets the P Marriage Other Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageOtherMaximum() {
		return pMarriageOtherMaximum;
	}

	/**
	 * Sets the P Marriage Other Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageOtherMaximum the new P Marriage Other Maximum value
	 */

	public void setPMarriageOtherMaximum(double _pMarriageOtherMaximum) {
		pMarriageOtherMaximum = _pMarriageOtherMaximum;
	}
	/**
	 * Gets the P Marriage Black Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageBlackMinimum() {
		return pMarriageBlackMinimum;
	}

	/**
	 * Sets the P Marriage Black Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageBlackMinimum the new P Marriage Black Minimum value
	 */

	public void setPMarriageBlackMinimum(double _pMarriageBlackMinimum) {
		pMarriageBlackMinimum = _pMarriageBlackMinimum;
	}
	/**
	 * Gets the P Marriage Black Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageBlackMaximum() {
		return pMarriageBlackMaximum;
	}

	/**
	 * Sets the P Marriage Black Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageBlackMaximum the new P Marriage Black Maximum value
	 */

	public void setPMarriageBlackMaximum(double _pMarriageBlackMaximum) {
		pMarriageBlackMaximum = _pMarriageBlackMaximum;
	}
	/**
	 * Gets the P Marriage Hispanic Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageHispanicMinimum() {
		return pMarriageHispanicMinimum;
	}

	/**
	 * Sets the P Marriage Hispanic Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageHispanicMinimum the new P Marriage Hispanic Minimum value
	 */

	public void setPMarriageHispanicMinimum(double _pMarriageHispanicMinimum) {
		pMarriageHispanicMinimum = _pMarriageHispanicMinimum;
	}
	/**
	 * Gets the P Marriage Hispanic Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageHispanicMaximum() {
		return pMarriageHispanicMaximum;
	}

	/**
	 * Sets the P Marriage Hispanic Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageHispanicMaximum the new P Marriage Hispanic Maximum value
	 */

	public void setPMarriageHispanicMaximum(double _pMarriageHispanicMaximum) {
		pMarriageHispanicMaximum = _pMarriageHispanicMaximum;
	}
	/**
	 * Gets the P Marriage White Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageWhiteMinimum() {
		return pMarriageWhiteMinimum;
	}

	/**
	 * Sets the P Marriage White Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageWhiteMinimum the new P Marriage White Minimum value
	 */

	public void setPMarriageWhiteMinimum(double _pMarriageWhiteMinimum) {
		pMarriageWhiteMinimum = _pMarriageWhiteMinimum;
	}
	/**
	 * Gets the P Marriage White Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageWhiteMaximum() {
		return pMarriageWhiteMaximum;
	}

	/**
	 * Sets the P Marriage White Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageWhiteMaximum the new P Marriage White Maximum value
	 */

	public void setPMarriageWhiteMaximum(double _pMarriageWhiteMaximum) {
		pMarriageWhiteMaximum = _pMarriageWhiteMaximum;
	}
	/**
	 * Gets the P Marriage Category 1 Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageCategory1Minimum() {
		return pMarriageCategory1Minimum;
	}

	/**
	 * Sets the P Marriage Category 1 Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageCategory1Minimum the new P Marriage Category 1 Minimum value
	 */

	public void setPMarriageCategory1Minimum(double _pMarriageCategory1Minimum) {
		pMarriageCategory1Minimum = _pMarriageCategory1Minimum;
	}
	/**
	 * Gets the P Marriage Category 1 Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageCategory1Maximum() {
		return pMarriageCategory1Maximum;
	}

	/**
	 * Sets the P Marriage Category 1 Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageCategory1Maximum the new P Marriage Category 1 Maximum value
	 */

	public void setPMarriageCategory1Maximum(double _pMarriageCategory1Maximum) {
		pMarriageCategory1Maximum = _pMarriageCategory1Maximum;
	}
	/**
	 * Gets the P Marriage Category 3 Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageCategory3Minimum() {
		return pMarriageCategory3Minimum;
	}

	/**
	 * Sets the P Marriage Category 3 Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageCategory3Minimum the new P Marriage Category 3 Minimum value
	 */

	public void setPMarriageCategory3Minimum(double _pMarriageCategory3Minimum) {
		pMarriageCategory3Minimum = _pMarriageCategory3Minimum;
	}
	/**
	 * Gets the P Marriage Category 3 Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageCategory3Maximum() {
		return pMarriageCategory3Maximum;
	}

	/**
	 * Sets the P Marriage Category 3 Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageCategory3Maximum the new P Marriage Category 3 Maximum value
	 */

	public void setPMarriageCategory3Maximum(double _pMarriageCategory3Maximum) {
		pMarriageCategory3Maximum = _pMarriageCategory3Maximum;
	}
	/**
	 * Gets the P Marriage Category 2 Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageCategory2Minimum() {
		return pMarriageCategory2Minimum;
	}

	/**
	 * Sets the P Marriage Category 2 Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageCategory2Minimum the new P Marriage Category 2 Minimum value
	 */

	public void setPMarriageCategory2Minimum(double _pMarriageCategory2Minimum) {
		pMarriageCategory2Minimum = _pMarriageCategory2Minimum;
	}
	/**
	 * Gets the P Marriage Category 2 Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageCategory2Maximum() {
		return pMarriageCategory2Maximum;
	}

	/**
	 * Sets the P Marriage Category 2 Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageCategory2Maximum the new P Marriage Category 2 Maximum value
	 */

	public void setPMarriageCategory2Maximum(double _pMarriageCategory2Maximum) {
		pMarriageCategory2Maximum = _pMarriageCategory2Maximum;
	}
	/**
	 * Gets the P Marriage Category 4 Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageCategory4Minimum() {
		return pMarriageCategory4Minimum;
	}

	/**
	 * Sets the P Marriage Category 4 Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageCategory4Minimum the new P Marriage Category 4 Minimum value
	 */

	public void setPMarriageCategory4Minimum(double _pMarriageCategory4Minimum) {
		pMarriageCategory4Minimum = _pMarriageCategory4Minimum;
	}
	/**
	 * Gets the P Marriage Category 4 Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageCategory4Maximum() {
		return pMarriageCategory4Maximum;
	}

	/**
	 * Sets the P Marriage Category 4 Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageCategory4Maximum the new P Marriage Category 4 Maximum value
	 */

	public void setPMarriageCategory4Maximum(double _pMarriageCategory4Maximum) {
		pMarriageCategory4Maximum = _pMarriageCategory4Maximum;
	}
	/**
	 * Gets the P Marriage Not Pregnant Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageNotPregnantMinimum() {
		return pMarriageNotPregnantMinimum;
	}

	/**
	 * Sets the P Marriage Not Pregnant Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageNotPregnantMinimum the new P Marriage Not Pregnant Minimum value
	 */

	public void setPMarriageNotPregnantMinimum(
			double _pMarriageNotPregnantMinimum) {
		pMarriageNotPregnantMinimum = _pMarriageNotPregnantMinimum;
	}
	/**
	 * Gets the P Marriage Not Pregnant Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriageNotPregnantMaximum() {
		return pMarriageNotPregnantMaximum;
	}

	/**
	 * Sets the P Marriage Not Pregnant Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriageNotPregnantMaximum the new P Marriage Not Pregnant Maximum value
	 */

	public void setPMarriageNotPregnantMaximum(
			double _pMarriageNotPregnantMaximum) {
		pMarriageNotPregnantMaximum = _pMarriageNotPregnantMaximum;
	}
	/**
	 * Gets the P Marriage Pregnant Minimum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriagePregnantMinimum() {
		return pMarriagePregnantMinimum;
	}

	/**
	 * Sets the P Marriage Pregnant Minimum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriagePregnantMinimum the new P Marriage Pregnant Minimum value
	 */

	public void setPMarriagePregnantMinimum(double _pMarriagePregnantMinimum) {
		pMarriagePregnantMinimum = _pMarriagePregnantMinimum;
	}
	/**
	 * Gets the P Marriage Pregnant Maximum property for Relationships And Pregnancy.
	 * @return 
	 */

	public double getPMarriagePregnantMaximum() {
		return pMarriagePregnantMaximum;
	}

	/**
	 * Sets the P Marriage Pregnant Maximum property for Relationships And Pregnancy.
	 * 
	 * @param _pMarriagePregnantMaximum the new P Marriage Pregnant Maximum value
	 */

	public void setPMarriagePregnantMaximum(double _pMarriagePregnantMaximum) {
		pMarriagePregnantMaximum = _pMarriagePregnantMaximum;
	}
	/**
	 * Gets the Dimensions property for Neighborhood.
	 * @return The size of each dimension.
	 */

	public int[] getNeighborhoodDimensions() {
		return neighborhoodDimensions;
	}

	/**
	 * Sets the Dimensions property for Neighborhood.
	 * The size of each dimension.
	 * @param _neighborhoodDimensions the new Dimensions value
	 */

	public void setNeighborhoodDimensions(int[] _neighborhoodDimensions) {
		neighborhoodDimensions = _neighborhoodDimensions;
	}
	/**
	 * Gets the Width property for Neighborhood.
	 * @return The horizontal extent of the space.
	 */

	public int getNeighborhoodWidth() {
		return neighborhoodDimensions[0];
	}

	/**
	 * Sets the Width property for Neighborhood.
	 * The horizontal extent of the space.
	 * @param _neighborhoodWidth the new Width value
	 */

	public void setNeighborhoodWidth(int _neighborhoodWidth) {
		neighborhoodDimensions[0] = _neighborhoodWidth;
	}
	/**
	 * Gets the Height property for Neighborhood.
	 * @return The vertical extent of the space.
	 */

	public int getNeighborhoodHeight() {
		return neighborhoodDimensions[1];
	}

	/**
	 * Sets the Height property for Neighborhood.
	 * The vertical extent of the space.
	 * @param _neighborhoodHeight the new Height value
	 */

	public void setNeighborhoodHeight(int _neighborhoodHeight) {
		neighborhoodDimensions[1] = _neighborhoodHeight;
	}
	/**
	 * Gets the Neighborhood property for Relationships And Pregnancy.
	 * @return 
	 */

	public org.ascape.model.Scape getNeighborhood() {
		return neighborhood;
	}

	/**
	 * Sets the Neighborhood property for Relationships And Pregnancy.
	 * 
	 * @param _neighborhood the new Neighborhood value
	 */

	public void setNeighborhood(org.ascape.model.Scape _neighborhood) {
		neighborhood = _neighborhood;
	}
	/**
	 * Gets the Partners property for Relationships And Pregnancy.
	 * @return 
	 */

	public org.ascape.model.Scape getPartners() {
		return partners;
	}

	/**
	 * Sets the Partners property for Relationships And Pregnancy.
	 * 
	 * @param _partners the new Partners value
	 */

	public void setPartners(org.ascape.model.Scape _partners) {
		partners = _partners;
	}

	public String getName() {
		if (name == null) {
			return "Relationships And Pregnancy " + uniqueID;
		} else {
			return name;
		}
	}
}
